#
# PySNMP MIB module CISCO-CABLE-AVAILABILITY-MIB (http://snmplabs.com/pysmi)
# ASN.1 source http://mibs.snmplabs.com:80/asn1/CISCO-CABLE-AVAILABILITY-MIB
# Produced by pysmi-0.3.4 at Sun Apr 21 23:31:53 2019
# On host aaqrabaw platform Linux version 4.15.0-47-generic by user aaqrabaw
# Using Python version 3.6.5 (default, Apr  1 2018, 05:46:30) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
Gauge32, MibIdentifier, Integer32, Counter32, IpAddress, TimeTicks, Counter64, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, ObjectIdentity, Bits, ModuleIdentity, iso = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "MibIdentifier", "Integer32", "Counter32", "IpAddress", "TimeTicks", "Counter64", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "ObjectIdentity", "Bits", "ModuleIdentity", "iso")
TextualConvention, TruthValue, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "TruthValue", "DisplayString")
ciscoCableAvailabilityMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 242))
ciscoCableAvailabilityMIB.setRevisions(('2003-02-20 00:00', '2001-11-25 00:00',))
if mibBuilder.loadTexts: ciscoCableAvailabilityMIB.setLastUpdated('200302200000Z')
if mibBuilder.loadTexts: ciscoCableAvailabilityMIB.setOrganization('Cisco Systems, Inc.')
ciscoCableAvailabilityMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 242, 1))
ccaHCCPObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 242, 1, 1))
ccaHCCPVersion = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 242, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("others", 1), ("version1", 2), ("version2", 3), ("version3", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccaHCCPVersion.setStatus('current')
ccaHCCPGroupTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 242, 1, 1, 2), )
if mibBuilder.loadTexts: ccaHCCPGroupTable.setStatus('current')
ccaHCCPGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 242, 1, 1, 2, 1), ).setIndexNames((0, "CISCO-CABLE-AVAILABILITY-MIB", "ccaHCCPGroupID"))
if mibBuilder.loadTexts: ccaHCCPGroupEntry.setStatus('current')
ccaHCCPGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 242, 1, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)))
if mibBuilder.loadTexts: ccaHCCPGroupID.setStatus('current')
ccaHCCPGroupAuthentication = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 242, 1, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("md5", 2), ("text", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccaHCCPGroupAuthentication.setStatus('current')
ccaHCCPGroupAuthKeyChain = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 242, 1, 1, 2, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccaHCCPGroupAuthKeyChain.setStatus('current')
ccaHCCPGroupHelloTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 242, 1, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(333, 5000))).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: ccaHCCPGroupHelloTime.setStatus('current')
ccaHCCPGroupHoldTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 242, 1, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1000, 25000))).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: ccaHCCPGroupHoldTime.setStatus('current')
ccaHCCPGroupRevertEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 242, 1, 1, 2, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccaHCCPGroupRevertEnable.setStatus('current')
ccaHCCPGroupProtectIpAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 242, 1, 1, 2, 1, 7), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccaHCCPGroupProtectIpAddrType.setStatus('current')
ccaHCCPGroupProtectIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 242, 1, 1, 2, 1, 8), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccaHCCPGroupProtectIpAddress.setStatus('current')
ccaHCCPGroupIfTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 242, 1, 1, 3), )
if mibBuilder.loadTexts: ccaHCCPGroupIfTable.setStatus('current')
ccaHCCPGroupIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 242, 1, 1, 3, 1), ).setIndexNames((0, "CISCO-CABLE-AVAILABILITY-MIB", "ccaHCCPGroupID"), (0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: ccaHCCPGroupIfEntry.setStatus('current')
ccaHCCPGroupIfStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 242, 1, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("protect", 2), ("working", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccaHCCPGroupIfStatus.setStatus('current')
ccaHCCPGroupIfRevertTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 242, 1, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccaHCCPGroupIfRevertTime.setStatus('current')
ccaHCCPGroupIfTrackEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 242, 1, 1, 3, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccaHCCPGroupIfTrackEnable.setStatus('current')
ccaHCCPGroupIfState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 242, 1, 1, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("forwarding", 1), ("blocking", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccaHCCPGroupIfState.setStatus('current')
ccaHCCPGroupIfLastSwitchReason = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 242, 1, 1, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("none", 1), ("holdTimeExpire", 2), ("hwIfDown", 3), ("failTest", 4), ("failLinkDown", 5), ("failBundleDown", 6), ("internal", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccaHCCPGroupIfLastSwitchReason.setStatus('current')
ccaHCCPGroupIfOnTransitions = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 242, 1, 1, 3, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccaHCCPGroupIfOnTransitions.setStatus('current')
ccaHCCPGroupIfOffTransitions = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 242, 1, 1, 3, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccaHCCPGroupIfOffTransitions.setStatus('current')
ccaHCCPGroupTrackInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 242, 1, 1, 4), )
if mibBuilder.loadTexts: ccaHCCPGroupTrackInterfaceTable.setStatus('current')
ccaHCCPGroupTrackInterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 242, 1, 1, 4, 1), ).setIndexNames((0, "CISCO-CABLE-AVAILABILITY-MIB", "ccaHCCPGroupID"), (0, "IF-MIB", "ifIndex"), (0, "CISCO-CABLE-AVAILABILITY-MIB", "ccaHCCPGroupTrackIfID"))
if mibBuilder.loadTexts: ccaHCCPGroupTrackInterfaceEntry.setStatus('current')
ccaHCCPGroupTrackIfID = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 242, 1, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)))
if mibBuilder.loadTexts: ccaHCCPGroupTrackIfID.setStatus('current')
ccaHCCPGroupTrackIfDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 242, 1, 1, 4, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccaHCCPGroupTrackIfDescr.setStatus('current')
ccaHCCPMemberTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 242, 1, 1, 5), )
if mibBuilder.loadTexts: ccaHCCPMemberTable.setStatus('current')
ccaHCCPMemberEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 242, 1, 1, 5, 1), ).setIndexNames((0, "CISCO-CABLE-AVAILABILITY-MIB", "ccaHCCPGroupID"), (0, "IF-MIB", "ifIndex"), (0, "CISCO-CABLE-AVAILABILITY-MIB", "ccaHCCPMemberID"))
if mibBuilder.loadTexts: ccaHCCPMemberEntry.setStatus('current')
ccaHCCPMemberID = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 242, 1, 1, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)))
if mibBuilder.loadTexts: ccaHCCPMemberID.setStatus('current')
ccaHCCPMemberIpAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 242, 1, 1, 5, 1, 2), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccaHCCPMemberIpAddrType.setStatus('current')
ccaHCCPMemberIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 242, 1, 1, 5, 1, 3), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccaHCCPMemberIpAddress.setStatus('current')
ccaHCCPMemberState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 242, 1, 1, 5, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("active", 1), ("standby", 2), ("nonFunctional", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccaHCCPMemberState.setStatus('current')
ccaHCCPMemberSwitchNow = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 242, 1, 1, 5, 1, 5), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ccaHCCPMemberSwitchNow.setStatus('current')
ccaHCCPMemChanSwitchTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 242, 1, 1, 6), )
if mibBuilder.loadTexts: ccaHCCPMemChanSwitchTable.setStatus('current')
ccaHCCPMemChanSwitchEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 242, 1, 1, 6, 1), ).setIndexNames((0, "CISCO-CABLE-AVAILABILITY-MIB", "ccaHCCPGroupID"), (0, "IF-MIB", "ifIndex"), (0, "CISCO-CABLE-AVAILABILITY-MIB", "ccaHCCPMemberID"), (0, "CISCO-CABLE-AVAILABILITY-MIB", "ccaHCCPMemChanSwitchID"))
if mibBuilder.loadTexts: ccaHCCPMemChanSwitchEntry.setStatus('current')
ccaHCCPMemChanSwitchID = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 242, 1, 1, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)))
if mibBuilder.loadTexts: ccaHCCPMemChanSwitchID.setStatus('current')
ccaHCCPMemChanSwitchType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 242, 1, 1, 6, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("others", 1), ("ucWavecom", 2), ("rfSwitchGrp", 3), ("rfSwitchModule", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccaHCCPMemChanSwitchType.setStatus('current')
ccaHCCPMemChanSwitchIpAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 242, 1, 1, 6, 1, 3), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccaHCCPMemChanSwitchIpAddrType.setStatus('current')
ccaHCCPMemChanSwitchIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 242, 1, 1, 6, 1, 4), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccaHCCPMemChanSwitchIpAddress.setStatus('current')
ccaHCCPMemChanSwitchModule = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 242, 1, 1, 6, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccaHCCPMemChanSwitchModule.setStatus('current')
ccaHCCPMemChanSwitchProtIpAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 242, 1, 1, 6, 1, 6), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccaHCCPMemChanSwitchProtIpAddrType.setStatus('current')
ccaHCCPMemChanSwitchProtIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 242, 1, 1, 6, 1, 7), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccaHCCPMemChanSwitchProtIpAddr.setStatus('current')
ccaHCCPMemChanSwitchProtModule = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 242, 1, 1, 6, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccaHCCPMemChanSwitchProtModule.setStatus('current')
ccaHCCPMemChanSwitchPosition = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 242, 1, 1, 6, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ccaHCCPMemChanSwitchPosition.setStatus('current')
ccaHCCPMemChanSwitchSnmpEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 242, 1, 1, 6, 1, 10), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ccaHCCPMemChanSwitchSnmpEnable.setStatus('current')
ccaHCCPOnOffNotificationEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 242, 1, 1, 7), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ccaHCCPOnOffNotificationEnable.setStatus('current')
ciscoCableAvailabilityMIBNotificationsPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 242, 2))
ciscoCableAvailabilityMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 242, 2, 0))
ccaHCCPOnNotification = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 242, 2, 0, 1)).setObjects(("CISCO-CABLE-AVAILABILITY-MIB", "ccaHCCPGroupIfStatus"), ("CISCO-CABLE-AVAILABILITY-MIB", "ccaHCCPGroupIfLastSwitchReason"), ("CISCO-CABLE-AVAILABILITY-MIB", "ccaHCCPMemberState"))
if mibBuilder.loadTexts: ccaHCCPOnNotification.setStatus('current')
ccaHCCPOffNotification = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 242, 2, 0, 2)).setObjects(("CISCO-CABLE-AVAILABILITY-MIB", "ccaHCCPGroupIfStatus"), ("CISCO-CABLE-AVAILABILITY-MIB", "ccaHCCPGroupIfLastSwitchReason"), ("CISCO-CABLE-AVAILABILITY-MIB", "ccaHCCPMemberState"))
if mibBuilder.loadTexts: ccaHCCPOffNotification.setStatus('current')
ciscoCableAvailabilityMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 242, 3))
ciscoCableAvailabilityMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 242, 3, 1))
ciscoCableAvailabilityMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 242, 3, 2))
ciscoCableAvailabilityCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 242, 3, 1, 1)).setObjects(("CISCO-CABLE-AVAILABILITY-MIB", "ccaHCCPGroup"), ("CISCO-CABLE-AVAILABILITY-MIB", "ccaHCCPMemberGroup"), ("CISCO-CABLE-AVAILABILITY-MIB", "ccaHCCPNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoCableAvailabilityCompliance = ciscoCableAvailabilityCompliance.setStatus('deprecated')
ciscoCableAvailabilityComplianceRev1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 242, 3, 1, 2)).setObjects(("CISCO-CABLE-AVAILABILITY-MIB", "ccaHCCPGroup"), ("CISCO-CABLE-AVAILABILITY-MIB", "ccaHCCPMemberGroup"), ("CISCO-CABLE-AVAILABILITY-MIB", "ccaHCCPNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoCableAvailabilityComplianceRev1 = ciscoCableAvailabilityComplianceRev1.setStatus('current')
ccaHCCPGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 242, 3, 2, 1)).setObjects(("CISCO-CABLE-AVAILABILITY-MIB", "ccaHCCPVersion"), ("CISCO-CABLE-AVAILABILITY-MIB", "ccaHCCPOnOffNotificationEnable"), ("CISCO-CABLE-AVAILABILITY-MIB", "ccaHCCPGroupAuthentication"), ("CISCO-CABLE-AVAILABILITY-MIB", "ccaHCCPGroupAuthKeyChain"), ("CISCO-CABLE-AVAILABILITY-MIB", "ccaHCCPGroupHelloTime"), ("CISCO-CABLE-AVAILABILITY-MIB", "ccaHCCPGroupHoldTime"), ("CISCO-CABLE-AVAILABILITY-MIB", "ccaHCCPGroupRevertEnable"), ("CISCO-CABLE-AVAILABILITY-MIB", "ccaHCCPGroupProtectIpAddrType"), ("CISCO-CABLE-AVAILABILITY-MIB", "ccaHCCPGroupProtectIpAddress"), ("CISCO-CABLE-AVAILABILITY-MIB", "ccaHCCPGroupIfRevertTime"), ("CISCO-CABLE-AVAILABILITY-MIB", "ccaHCCPGroupIfTrackEnable"), ("CISCO-CABLE-AVAILABILITY-MIB", "ccaHCCPGroupIfStatus"), ("CISCO-CABLE-AVAILABILITY-MIB", "ccaHCCPGroupIfLastSwitchReason"), ("CISCO-CABLE-AVAILABILITY-MIB", "ccaHCCPGroupIfOnTransitions"), ("CISCO-CABLE-AVAILABILITY-MIB", "ccaHCCPGroupIfOffTransitions"), ("CISCO-CABLE-AVAILABILITY-MIB", "ccaHCCPGroupTrackIfDescr"), ("CISCO-CABLE-AVAILABILITY-MIB", "ccaHCCPGroupIfState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ccaHCCPGroup = ccaHCCPGroup.setStatus('current')
ccaHCCPMemberGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 242, 3, 2, 2)).setObjects(("CISCO-CABLE-AVAILABILITY-MIB", "ccaHCCPMemberIpAddrType"), ("CISCO-CABLE-AVAILABILITY-MIB", "ccaHCCPMemberIpAddress"), ("CISCO-CABLE-AVAILABILITY-MIB", "ccaHCCPMemberState"), ("CISCO-CABLE-AVAILABILITY-MIB", "ccaHCCPMemberSwitchNow"), ("CISCO-CABLE-AVAILABILITY-MIB", "ccaHCCPMemChanSwitchType"), ("CISCO-CABLE-AVAILABILITY-MIB", "ccaHCCPMemChanSwitchIpAddrType"), ("CISCO-CABLE-AVAILABILITY-MIB", "ccaHCCPMemChanSwitchIpAddress"), ("CISCO-CABLE-AVAILABILITY-MIB", "ccaHCCPMemChanSwitchModule"), ("CISCO-CABLE-AVAILABILITY-MIB", "ccaHCCPMemChanSwitchProtIpAddrType"), ("CISCO-CABLE-AVAILABILITY-MIB", "ccaHCCPMemChanSwitchProtIpAddr"), ("CISCO-CABLE-AVAILABILITY-MIB", "ccaHCCPMemChanSwitchProtModule"), ("CISCO-CABLE-AVAILABILITY-MIB", "ccaHCCPMemChanSwitchPosition"), ("CISCO-CABLE-AVAILABILITY-MIB", "ccaHCCPMemChanSwitchSnmpEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ccaHCCPMemberGroup = ccaHCCPMemberGroup.setStatus('current')
ccaHCCPNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 242, 3, 2, 3)).setObjects(("CISCO-CABLE-AVAILABILITY-MIB", "ccaHCCPOnNotification"), ("CISCO-CABLE-AVAILABILITY-MIB", "ccaHCCPOffNotification"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ccaHCCPNotificationGroup = ccaHCCPNotificationGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-CABLE-AVAILABILITY-MIB", ciscoCableAvailabilityMIB=ciscoCableAvailabilityMIB, ccaHCCPGroupIfTrackEnable=ccaHCCPGroupIfTrackEnable, ccaHCCPMemChanSwitchType=ccaHCCPMemChanSwitchType, ciscoCableAvailabilityMIBConformance=ciscoCableAvailabilityMIBConformance, ccaHCCPMemberTable=ccaHCCPMemberTable, ccaHCCPMemChanSwitchProtIpAddrType=ccaHCCPMemChanSwitchProtIpAddrType, ccaHCCPGroupIfRevertTime=ccaHCCPGroupIfRevertTime, ccaHCCPMemChanSwitchProtIpAddr=ccaHCCPMemChanSwitchProtIpAddr, ccaHCCPGroupTrackInterfaceTable=ccaHCCPGroupTrackInterfaceTable, ccaHCCPVersion=ccaHCCPVersion, ccaHCCPGroupRevertEnable=ccaHCCPGroupRevertEnable, ccaHCCPGroupIfEntry=ccaHCCPGroupIfEntry, ccaHCCPMemChanSwitchTable=ccaHCCPMemChanSwitchTable, ccaHCCPGroupIfOffTransitions=ccaHCCPGroupIfOffTransitions, ccaHCCPObjects=ccaHCCPObjects, ccaHCCPMemChanSwitchID=ccaHCCPMemChanSwitchID, ccaHCCPMemChanSwitchIpAddress=ccaHCCPMemChanSwitchIpAddress, ccaHCCPMemberIpAddrType=ccaHCCPMemberIpAddrType, ciscoCableAvailabilityComplianceRev1=ciscoCableAvailabilityComplianceRev1, ccaHCCPMemChanSwitchIpAddrType=ccaHCCPMemChanSwitchIpAddrType, ccaHCCPGroupTable=ccaHCCPGroupTable, ccaHCCPGroupAuthKeyChain=ccaHCCPGroupAuthKeyChain, ccaHCCPGroupProtectIpAddrType=ccaHCCPGroupProtectIpAddrType, ccaHCCPGroupHelloTime=ccaHCCPGroupHelloTime, ccaHCCPOnOffNotificationEnable=ccaHCCPOnOffNotificationEnable, ccaHCCPMemberState=ccaHCCPMemberState, ciscoCableAvailabilityMIBCompliances=ciscoCableAvailabilityMIBCompliances, ccaHCCPMemChanSwitchProtModule=ccaHCCPMemChanSwitchProtModule, ciscoCableAvailabilityMIBNotifications=ciscoCableAvailabilityMIBNotifications, ccaHCCPOnNotification=ccaHCCPOnNotification, ccaHCCPNotificationGroup=ccaHCCPNotificationGroup, ciscoCableAvailabilityMIBGroups=ciscoCableAvailabilityMIBGroups, ccaHCCPMemChanSwitchEntry=ccaHCCPMemChanSwitchEntry, ciscoCableAvailabilityCompliance=ciscoCableAvailabilityCompliance, ccaHCCPGroupID=ccaHCCPGroupID, ccaHCCPGroupProtectIpAddress=ccaHCCPGroupProtectIpAddress, ccaHCCPMemChanSwitchSnmpEnable=ccaHCCPMemChanSwitchSnmpEnable, ccaHCCPGroup=ccaHCCPGroup, PYSNMP_MODULE_ID=ciscoCableAvailabilityMIB, ccaHCCPGroupAuthentication=ccaHCCPGroupAuthentication, ccaHCCPMemberID=ccaHCCPMemberID, ccaHCCPGroupIfState=ccaHCCPGroupIfState, ciscoCableAvailabilityMIBObjects=ciscoCableAvailabilityMIBObjects, ccaHCCPGroupIfOnTransitions=ccaHCCPGroupIfOnTransitions, ccaHCCPMemberGroup=ccaHCCPMemberGroup, ccaHCCPGroupTrackIfDescr=ccaHCCPGroupTrackIfDescr, ccaHCCPGroupEntry=ccaHCCPGroupEntry, ccaHCCPGroupIfTable=ccaHCCPGroupIfTable, ccaHCCPMemberIpAddress=ccaHCCPMemberIpAddress, ccaHCCPMemberSwitchNow=ccaHCCPMemberSwitchNow, ccaHCCPGroupHoldTime=ccaHCCPGroupHoldTime, ccaHCCPGroupIfLastSwitchReason=ccaHCCPGroupIfLastSwitchReason, ccaHCCPMemberEntry=ccaHCCPMemberEntry, ccaHCCPOffNotification=ccaHCCPOffNotification, ccaHCCPGroupTrackIfID=ccaHCCPGroupTrackIfID, ccaHCCPMemChanSwitchModule=ccaHCCPMemChanSwitchModule, ccaHCCPGroupTrackInterfaceEntry=ccaHCCPGroupTrackInterfaceEntry, ccaHCCPGroupIfStatus=ccaHCCPGroupIfStatus, ccaHCCPMemChanSwitchPosition=ccaHCCPMemChanSwitchPosition, ciscoCableAvailabilityMIBNotificationsPrefix=ciscoCableAvailabilityMIBNotificationsPrefix)
