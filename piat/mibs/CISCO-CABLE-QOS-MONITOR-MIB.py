#
# PySNMP MIB module CISCO-CABLE-QOS-MONITOR-MIB (http://snmplabs.com/pysmi)
# ASN.1 source http://mibs.snmplabs.com:80/asn1/CISCO-CABLE-QOS-MONITOR-MIB
# Produced by pysmi-0.3.4 at Sun Apr 21 23:27:54 2019
# On host aaqrabaw platform Linux version 4.15.0-47-generic by user aaqrabaw
# Using Python version 3.6.5 (default, Apr  1 2018, 05:46:30) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
TimeTicks, ModuleIdentity, ObjectIdentity, Gauge32, MibIdentifier, Integer32, NotificationType, iso, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, IpAddress, Counter32, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "ModuleIdentity", "ObjectIdentity", "Gauge32", "MibIdentifier", "Integer32", "NotificationType", "iso", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "IpAddress", "Counter32", "Bits")
TruthValue, DateAndTime, MacAddress, RowStatus, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "DateAndTime", "MacAddress", "RowStatus", "DisplayString", "TextualConvention")
ciscoCableQosMonitorMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 341))
ciscoCableQosMonitorMIB.setRevisions(('2004-02-20 00:00', '2003-04-03 00:00', '2003-03-04 00:00',))
if mibBuilder.loadTexts: ciscoCableQosMonitorMIB.setLastUpdated('200402200000Z')
if mibBuilder.loadTexts: ciscoCableQosMonitorMIB.setOrganization('Cisco Systems, Inc.')
class CCQMRuleDirection(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("upstream", 1), ("downstream", 2), ("bidirection", 3))

ciscoCableQosMonitorMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 341, 1))
ccqmEnforceRuleObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 341, 1, 1))
ccqmRuleViolateObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 341, 1, 2))
ccqmRuleIfBwUtilObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 341, 1, 3))
ccqmCmtsEnforceRuleTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 341, 1, 1, 1), )
if mibBuilder.loadTexts: ccqmCmtsEnforceRuleTable.setStatus('current')
ccqmCmtsEnforceRuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 341, 1, 1, 1, 1), ).setIndexNames((0, "CISCO-CABLE-QOS-MONITOR-MIB", "ccqmCmtsEnfRuleName"))
if mibBuilder.loadTexts: ccqmCmtsEnforceRuleEntry.setStatus('current')
ccqmCmtsEnfRuleName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 341, 1, 1, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 15)))
if mibBuilder.loadTexts: ccqmCmtsEnfRuleName.setStatus('current')
ccqmCmtsEnfRuleRegQoS = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 341, 1, 1, 1, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 16383))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccqmCmtsEnfRuleRegQoS.setStatus('current')
ccqmCmtsEnfRuleEnfQos = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 341, 1, 1, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 16383))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccqmCmtsEnfRuleEnfQos.setStatus('current')
ccqmCmtsEnfRuleMonDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 341, 1, 1, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(10, 44640)).clone(360)).setUnits('minutes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccqmCmtsEnfRuleMonDuration.setStatus('current')
ccqmCmtsEnfRuleSampleRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 341, 1, 1, 1, 1, 5), Unsigned32()).setUnits('minutes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccqmCmtsEnfRuleSampleRate.setStatus('current')
ccqmCmtsEnfRulePenaltyPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 341, 1, 1, 1, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10080)).clone(10080)).setUnits('minutes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccqmCmtsEnfRulePenaltyPeriod.setStatus('current')
ccqmCmtsEnfRuleByteCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 341, 1, 1, 1, 1, 7), Unsigned32()).setUnits('1000 bytes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccqmCmtsEnfRuleByteCount.setStatus('obsolete')
ccqmCmtsEnfRuleDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 341, 1, 1, 1, 1, 8), CCQMRuleDirection()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccqmCmtsEnfRuleDirection.setStatus('current')
ccqmCmtsEnfRuleAutoEnforce = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 341, 1, 1, 1, 1, 9), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccqmCmtsEnfRuleAutoEnforce.setStatus('current')
ccqmCmtsEnfRuleRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 341, 1, 1, 1, 1, 10), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccqmCmtsEnfRuleRowStatus.setStatus('current')
ccqmCmtsEnfRuleAvgRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 341, 1, 1, 1, 1, 11), Unsigned32()).setUnits('kbits/sec').setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccqmCmtsEnfRuleAvgRate.setStatus('current')
ccqmCmtsEnfRuleDocsVer = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 341, 1, 1, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("others", 1), ("docsis10", 2))).clone('docsis10')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccqmCmtsEnfRuleDocsVer.setStatus('current')
ccqmCmtsEnfRuleRegSerClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 341, 1, 1, 1, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 16))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccqmCmtsEnfRuleRegSerClassName.setStatus('current')
ccqmCmtsEnfRuleEnfSerClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 341, 1, 1, 1, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 16))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccqmCmtsEnfRuleEnfSerClassName.setStatus('current')
ccqmCmtsEnfRuleMonType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 341, 1, 1, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("basic", 1), ("peakOffPeak", 2))).clone('basic')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccqmCmtsEnfRuleMonType.setStatus('current')
ccqmCmtsEnfRuleFirstPeakTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 341, 1, 1, 1, 1, 16), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 23))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccqmCmtsEnfRuleFirstPeakTime.setStatus('current')
ccqmCmtsEnfRuleFirstDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 341, 1, 1, 1, 1, 17), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(60, 1440))).setUnits('minutes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccqmCmtsEnfRuleFirstDuration.setStatus('current')
ccqmCmtsEnfRuleFirstAvgRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 341, 1, 1, 1, 1, 18), Unsigned32()).setUnits('kbits/sec').setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccqmCmtsEnfRuleFirstAvgRate.setStatus('current')
ccqmCmtsEnfRuleSecondPeakTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 341, 1, 1, 1, 1, 19), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 23))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccqmCmtsEnfRuleSecondPeakTime.setStatus('current')
ccqmCmtsEnfRuleSecondDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 341, 1, 1, 1, 1, 20), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1380))).setUnits('minutes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccqmCmtsEnfRuleSecondDuration.setStatus('current')
ccqmCmtsEnfRuleSecondAvgRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 341, 1, 1, 1, 1, 21), Unsigned32()).setUnits('kbits/sec').setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccqmCmtsEnfRuleSecondAvgRate.setStatus('current')
ccqmCmtsEnfRuleOffPeakDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 341, 1, 1, 1, 1, 22), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1380))).setUnits('minutes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccqmCmtsEnfRuleOffPeakDuration.setStatus('current')
ccqmCmtsEnfRuleOffPeakAvgRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 341, 1, 1, 1, 1, 23), Unsigned32()).setUnits('kbits/sec').setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccqmCmtsEnfRuleOffPeakAvgRate.setStatus('current')
ccqmEnfRuleViolateTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 341, 1, 2, 2), )
if mibBuilder.loadTexts: ccqmEnfRuleViolateTable.setStatus('current')
ccqmEnfRuleViolateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 341, 1, 2, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CISCO-CABLE-QOS-MONITOR-MIB", "ccqmEnfRuleViolateID"))
if mibBuilder.loadTexts: ccqmEnfRuleViolateEntry.setStatus('current')
ccqmEnfRuleViolateID = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 341, 1, 2, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: ccqmEnfRuleViolateID.setStatus('current')
ccqmEnfRuleViolateMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 341, 1, 2, 2, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccqmEnfRuleViolateMacAddr.setStatus('current')
ccqmEnfRuleViolateRuleName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 341, 1, 2, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccqmEnfRuleViolateRuleName.setStatus('current')
ccqmEnfRuleViolateByteCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 341, 1, 2, 2, 1, 4), Unsigned32()).setUnits('kbytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: ccqmEnfRuleViolateByteCount.setStatus('current')
ccqmEnfRuleViolateLastDetectTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 341, 1, 2, 2, 1, 5), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccqmEnfRuleViolateLastDetectTime.setStatus('current')
ccqmEnfRuleViolatePenaltyExpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 341, 1, 2, 2, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ccqmEnfRuleViolatePenaltyExpTime.setStatus('current')
ccqmCmtsIfBwUtilTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 341, 1, 3, 1), )
if mibBuilder.loadTexts: ccqmCmtsIfBwUtilTable.setStatus('current')
ccqmCmtsIfBwUtilEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 341, 1, 3, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: ccqmCmtsIfBwUtilEntry.setStatus('current')
ccqmCmtsIfBwUtilUpThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 341, 1, 3, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 99)).clone(80)).setUnits('percent').setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccqmCmtsIfBwUtilUpThreshold.setStatus('current')
ccqmCmtsIfBwUtilLoThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 341, 1, 3, 1, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 99)).clone(40)).setUnits('percent').setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccqmCmtsIfBwUtilLoThreshold.setStatus('current')
ccqmCmtsIfBwUtilRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 341, 1, 3, 1, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ccqmCmtsIfBwUtilRowStatus.setStatus('current')
ccqmEnfRuleViolateNotifEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 341, 1, 2, 3), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ccqmEnfRuleViolateNotifEnable.setStatus('current')
ccqmMIBNotificationsPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 341, 2))
ccqmMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 341, 2, 0))
ccqmEnfRuleViolateNotification = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 341, 2, 0, 1)).setObjects(("CISCO-CABLE-QOS-MONITOR-MIB", "ccqmEnfRuleViolateMacAddr"), ("CISCO-CABLE-QOS-MONITOR-MIB", "ccqmEnfRuleViolateRuleName"), ("CISCO-CABLE-QOS-MONITOR-MIB", "ccqmEnfRuleViolatePenaltyExpTime"), ("CISCO-CABLE-QOS-MONITOR-MIB", "ccqmEnfRuleViolateByteCount"))
if mibBuilder.loadTexts: ccqmEnfRuleViolateNotification.setStatus('current')
ccqmMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 341, 3))
ccqmMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 341, 3, 1))
ccqmMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 341, 3, 2))
ccqmCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 341, 3, 1, 1)).setObjects(("CISCO-CABLE-QOS-MONITOR-MIB", "ccqmEnfRuleGroup"), ("CISCO-CABLE-QOS-MONITOR-MIB", "ccqmEnfRuleViolateGroup"), ("CISCO-CABLE-QOS-MONITOR-MIB", "ccqmEnfRuleViolateNotifGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ccqmCompliance = ccqmCompliance.setStatus('obsolete')
ccqmComplianceRev1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 341, 3, 1, 2)).setObjects(("CISCO-CABLE-QOS-MONITOR-MIB", "ccqmEnfRuleGroupRev1"), ("CISCO-CABLE-QOS-MONITOR-MIB", "ccqmEnfRuleViolateGroup"), ("CISCO-CABLE-QOS-MONITOR-MIB", "ccqmCmtsRuleIfBwUtilGroup"), ("CISCO-CABLE-QOS-MONITOR-MIB", "ccqmEnfRuleViolateNotifGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ccqmComplianceRev1 = ccqmComplianceRev1.setStatus('current')
ccqmEnfRuleGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 341, 3, 2, 1)).setObjects(("CISCO-CABLE-QOS-MONITOR-MIB", "ccqmCmtsEnfRuleRegQoS"), ("CISCO-CABLE-QOS-MONITOR-MIB", "ccqmCmtsEnfRuleEnfQos"), ("CISCO-CABLE-QOS-MONITOR-MIB", "ccqmCmtsEnfRuleMonDuration"), ("CISCO-CABLE-QOS-MONITOR-MIB", "ccqmCmtsEnfRuleSampleRate"), ("CISCO-CABLE-QOS-MONITOR-MIB", "ccqmCmtsEnfRulePenaltyPeriod"), ("CISCO-CABLE-QOS-MONITOR-MIB", "ccqmCmtsEnfRuleByteCount"), ("CISCO-CABLE-QOS-MONITOR-MIB", "ccqmCmtsEnfRuleDirection"), ("CISCO-CABLE-QOS-MONITOR-MIB", "ccqmCmtsEnfRuleAutoEnforce"), ("CISCO-CABLE-QOS-MONITOR-MIB", "ccqmCmtsEnfRuleRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ccqmEnfRuleGroup = ccqmEnfRuleGroup.setStatus('obsolete')
ccqmEnfRuleViolateGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 341, 3, 2, 2)).setObjects(("CISCO-CABLE-QOS-MONITOR-MIB", "ccqmEnfRuleViolateRuleName"), ("CISCO-CABLE-QOS-MONITOR-MIB", "ccqmEnfRuleViolateMacAddr"), ("CISCO-CABLE-QOS-MONITOR-MIB", "ccqmEnfRuleViolateByteCount"), ("CISCO-CABLE-QOS-MONITOR-MIB", "ccqmEnfRuleViolateLastDetectTime"), ("CISCO-CABLE-QOS-MONITOR-MIB", "ccqmEnfRuleViolatePenaltyExpTime"), ("CISCO-CABLE-QOS-MONITOR-MIB", "ccqmEnfRuleViolateNotifEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ccqmEnfRuleViolateGroup = ccqmEnfRuleViolateGroup.setStatus('current')
ccqmEnfRuleViolateNotifGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 341, 3, 2, 3)).setObjects(("CISCO-CABLE-QOS-MONITOR-MIB", "ccqmEnfRuleViolateNotification"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ccqmEnfRuleViolateNotifGroup = ccqmEnfRuleViolateNotifGroup.setStatus('current')
ccqmEnfRuleGroupRev1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 341, 3, 2, 4)).setObjects(("CISCO-CABLE-QOS-MONITOR-MIB", "ccqmCmtsEnfRuleRegQoS"), ("CISCO-CABLE-QOS-MONITOR-MIB", "ccqmCmtsEnfRuleEnfQos"), ("CISCO-CABLE-QOS-MONITOR-MIB", "ccqmCmtsEnfRuleMonDuration"), ("CISCO-CABLE-QOS-MONITOR-MIB", "ccqmCmtsEnfRuleSampleRate"), ("CISCO-CABLE-QOS-MONITOR-MIB", "ccqmCmtsEnfRulePenaltyPeriod"), ("CISCO-CABLE-QOS-MONITOR-MIB", "ccqmCmtsEnfRuleDirection"), ("CISCO-CABLE-QOS-MONITOR-MIB", "ccqmCmtsEnfRuleAutoEnforce"), ("CISCO-CABLE-QOS-MONITOR-MIB", "ccqmCmtsEnfRuleRowStatus"), ("CISCO-CABLE-QOS-MONITOR-MIB", "ccqmCmtsEnfRuleAvgRate"), ("CISCO-CABLE-QOS-MONITOR-MIB", "ccqmCmtsEnfRuleDocsVer"), ("CISCO-CABLE-QOS-MONITOR-MIB", "ccqmCmtsEnfRuleRegSerClassName"), ("CISCO-CABLE-QOS-MONITOR-MIB", "ccqmCmtsEnfRuleEnfSerClassName"), ("CISCO-CABLE-QOS-MONITOR-MIB", "ccqmCmtsEnfRuleMonType"), ("CISCO-CABLE-QOS-MONITOR-MIB", "ccqmCmtsEnfRuleFirstPeakTime"), ("CISCO-CABLE-QOS-MONITOR-MIB", "ccqmCmtsEnfRuleFirstDuration"), ("CISCO-CABLE-QOS-MONITOR-MIB", "ccqmCmtsEnfRuleFirstAvgRate"), ("CISCO-CABLE-QOS-MONITOR-MIB", "ccqmCmtsEnfRuleSecondPeakTime"), ("CISCO-CABLE-QOS-MONITOR-MIB", "ccqmCmtsEnfRuleSecondDuration"), ("CISCO-CABLE-QOS-MONITOR-MIB", "ccqmCmtsEnfRuleSecondAvgRate"), ("CISCO-CABLE-QOS-MONITOR-MIB", "ccqmCmtsEnfRuleOffPeakDuration"), ("CISCO-CABLE-QOS-MONITOR-MIB", "ccqmCmtsEnfRuleOffPeakAvgRate"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ccqmEnfRuleGroupRev1 = ccqmEnfRuleGroupRev1.setStatus('current')
ccqmCmtsRuleIfBwUtilGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 341, 3, 2, 5)).setObjects(("CISCO-CABLE-QOS-MONITOR-MIB", "ccqmCmtsIfBwUtilUpThreshold"), ("CISCO-CABLE-QOS-MONITOR-MIB", "ccqmCmtsIfBwUtilLoThreshold"), ("CISCO-CABLE-QOS-MONITOR-MIB", "ccqmCmtsIfBwUtilRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ccqmCmtsRuleIfBwUtilGroup = ccqmCmtsRuleIfBwUtilGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-CABLE-QOS-MONITOR-MIB", ccqmCmtsEnfRuleMonDuration=ccqmCmtsEnfRuleMonDuration, ccqmEnfRuleGroupRev1=ccqmEnfRuleGroupRev1, ccqmEnfRuleViolateGroup=ccqmEnfRuleViolateGroup, ccqmEnfRuleViolateLastDetectTime=ccqmEnfRuleViolateLastDetectTime, ccqmEnfRuleViolateNotification=ccqmEnfRuleViolateNotification, ccqmCmtsIfBwUtilTable=ccqmCmtsIfBwUtilTable, ccqmCmtsIfBwUtilEntry=ccqmCmtsIfBwUtilEntry, ccqmCmtsEnfRuleDirection=ccqmCmtsEnfRuleDirection, ciscoCableQosMonitorMIB=ciscoCableQosMonitorMIB, ccqmCmtsIfBwUtilUpThreshold=ccqmCmtsIfBwUtilUpThreshold, ccqmCompliance=ccqmCompliance, ccqmCmtsEnfRuleMonType=ccqmCmtsEnfRuleMonType, ccqmCmtsEnfRuleDocsVer=ccqmCmtsEnfRuleDocsVer, ccqmEnfRuleViolateEntry=ccqmEnfRuleViolateEntry, ccqmCmtsEnfRuleRegQoS=ccqmCmtsEnfRuleRegQoS, ccqmCmtsEnfRuleOffPeakAvgRate=ccqmCmtsEnfRuleOffPeakAvgRate, ccqmCmtsEnforceRuleTable=ccqmCmtsEnforceRuleTable, ccqmEnfRuleViolateID=ccqmEnfRuleViolateID, ccqmMIBGroups=ccqmMIBGroups, ccqmEnfRuleViolateNotifEnable=ccqmEnfRuleViolateNotifEnable, ccqmMIBNotifications=ccqmMIBNotifications, ccqmCmtsEnfRuleOffPeakDuration=ccqmCmtsEnfRuleOffPeakDuration, ccqmCmtsEnfRuleFirstAvgRate=ccqmCmtsEnfRuleFirstAvgRate, ccqmCmtsEnfRuleByteCount=ccqmCmtsEnfRuleByteCount, ccqmEnfRuleGroup=ccqmEnfRuleGroup, ccqmRuleViolateObjects=ccqmRuleViolateObjects, ccqmCmtsEnfRuleEnfSerClassName=ccqmCmtsEnfRuleEnfSerClassName, ccqmCmtsEnfRuleAutoEnforce=ccqmCmtsEnfRuleAutoEnforce, ccqmCmtsEnfRuleRegSerClassName=ccqmCmtsEnfRuleRegSerClassName, ccqmMIBConformance=ccqmMIBConformance, PYSNMP_MODULE_ID=ciscoCableQosMonitorMIB, ccqmRuleIfBwUtilObjects=ccqmRuleIfBwUtilObjects, ccqmCmtsRuleIfBwUtilGroup=ccqmCmtsRuleIfBwUtilGroup, ccqmEnfRuleViolateTable=ccqmEnfRuleViolateTable, ccqmEnfRuleViolateMacAddr=ccqmEnfRuleViolateMacAddr, ccqmCmtsEnfRuleSecondAvgRate=ccqmCmtsEnfRuleSecondAvgRate, ccqmCmtsEnfRuleFirstDuration=ccqmCmtsEnfRuleFirstDuration, ccqmCmtsEnfRuleSampleRate=ccqmCmtsEnfRuleSampleRate, ccqmCmtsEnfRuleEnfQos=ccqmCmtsEnfRuleEnfQos, ccqmCmtsEnfRuleSecondPeakTime=ccqmCmtsEnfRuleSecondPeakTime, ccqmCmtsIfBwUtilRowStatus=ccqmCmtsIfBwUtilRowStatus, ccqmCmtsEnforceRuleEntry=ccqmCmtsEnforceRuleEntry, ccqmMIBNotificationsPrefix=ccqmMIBNotificationsPrefix, ccqmCmtsEnfRuleSecondDuration=ccqmCmtsEnfRuleSecondDuration, ccqmCmtsEnfRuleAvgRate=ccqmCmtsEnfRuleAvgRate, ccqmEnforceRuleObjects=ccqmEnforceRuleObjects, ccqmCmtsEnfRulePenaltyPeriod=ccqmCmtsEnfRulePenaltyPeriod, ccqmComplianceRev1=ccqmComplianceRev1, ccqmEnfRuleViolateByteCount=ccqmEnfRuleViolateByteCount, ccqmMIBCompliances=ccqmMIBCompliances, ciscoCableQosMonitorMIBObjects=ciscoCableQosMonitorMIBObjects, CCQMRuleDirection=CCQMRuleDirection, ccqmCmtsEnfRuleRowStatus=ccqmCmtsEnfRuleRowStatus, ccqmCmtsEnfRuleName=ccqmCmtsEnfRuleName, ccqmEnfRuleViolateRuleName=ccqmEnfRuleViolateRuleName, ccqmCmtsIfBwUtilLoThreshold=ccqmCmtsIfBwUtilLoThreshold, ccqmCmtsEnfRuleFirstPeakTime=ccqmCmtsEnfRuleFirstPeakTime, ccqmEnfRuleViolateNotifGroup=ccqmEnfRuleViolateNotifGroup, ccqmEnfRuleViolatePenaltyExpTime=ccqmEnfRuleViolatePenaltyExpTime)
