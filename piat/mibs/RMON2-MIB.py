#
# PySNMP MIB module RMON2-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///usr/share/snmp/mibs/ietf/RMON2-MIB
# Produced by pysmi-0.3.4 at Sun Apr 21 23:48:43 2019
# On host aaqrabaw platform Linux version 4.15.0-47-generic by user aaqrabaw
# Using Python version 3.6.5 (default, Apr  1 2018, 05:46:30) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
historyControlEntry, history, hostControlEntry, hosts, filterEntry, matrix, statistics, matrixControlEntry, OwnerString, channelEntry, filter, etherStatsEntry = mibBuilder.importSymbols("RMON-MIB", "historyControlEntry", "history", "hostControlEntry", "hosts", "filterEntry", "matrix", "statistics", "matrixControlEntry", "OwnerString", "channelEntry", "filter", "etherStatsEntry")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
Counter64, Counter32, NotificationType, ObjectIdentity, IpAddress, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, mib_2, TimeTicks, iso, MibIdentifier, Integer32, Gauge32, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "Counter32", "NotificationType", "ObjectIdentity", "IpAddress", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "mib-2", "TimeTicks", "iso", "MibIdentifier", "Integer32", "Gauge32", "Unsigned32")
TimeStamp, RowStatus, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TimeStamp", "RowStatus", "TextualConvention", "DisplayString")
tokenRing, ringStationControlEntry, tokenRingMLStatsEntry, sourceRoutingStatsEntry, tokenRingPStatsEntry = mibBuilder.importSymbols("TOKEN-RING-RMON-MIB", "tokenRing", "ringStationControlEntry", "tokenRingMLStatsEntry", "sourceRoutingStatsEntry", "tokenRingPStatsEntry")
rmon = ModuleIdentity((1, 3, 6, 1, 2, 1, 16))
rmon.setRevisions(('2006-05-02 00:00', '2002-07-08 00:00', '1996-05-27 00:00',))
if mibBuilder.loadTexts: rmon.setLastUpdated('200605020000Z')
if mibBuilder.loadTexts: rmon.setOrganization('IETF RMON MIB Working Group')
protocolDir = MibIdentifier((1, 3, 6, 1, 2, 1, 16, 11))
protocolDist = MibIdentifier((1, 3, 6, 1, 2, 1, 16, 12))
addressMap = MibIdentifier((1, 3, 6, 1, 2, 1, 16, 13))
nlHost = MibIdentifier((1, 3, 6, 1, 2, 1, 16, 14))
nlMatrix = MibIdentifier((1, 3, 6, 1, 2, 1, 16, 15))
alHost = MibIdentifier((1, 3, 6, 1, 2, 1, 16, 16))
alMatrix = MibIdentifier((1, 3, 6, 1, 2, 1, 16, 17))
usrHistory = MibIdentifier((1, 3, 6, 1, 2, 1, 16, 18))
probeConfig = MibIdentifier((1, 3, 6, 1, 2, 1, 16, 19))
rmonConformance = MibIdentifier((1, 3, 6, 1, 2, 1, 16, 20))
class ZeroBasedCounter32(TextualConvention, Gauge32):
    status = 'current'

class LastCreateTime(TextualConvention, TimeTicks):
    status = 'current'

class TimeFilter(TextualConvention, TimeTicks):
    status = 'current'

class DataSource(TextualConvention, ObjectIdentifier):
    status = 'current'

protocolDirLastChange = MibScalar((1, 3, 6, 1, 2, 1, 16, 11, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: protocolDirLastChange.setStatus('current')
protocolDirTable = MibTable((1, 3, 6, 1, 2, 1, 16, 11, 2), )
if mibBuilder.loadTexts: protocolDirTable.setStatus('current')
protocolDirEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 11, 2, 1), ).setIndexNames((0, "RMON2-MIB", "protocolDirID"), (0, "RMON2-MIB", "protocolDirParameters"))
if mibBuilder.loadTexts: protocolDirEntry.setStatus('current')
protocolDirID = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 11, 2, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 128)))
if mibBuilder.loadTexts: protocolDirID.setStatus('current')
protocolDirParameters = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 11, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: protocolDirParameters.setStatus('current')
protocolDirLocalIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 11, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: protocolDirLocalIndex.setStatus('current')
protocolDirDescr = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 11, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: protocolDirDescr.setStatus('current')
protocolDirType = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 11, 2, 1, 5), Bits().clone(namedValues=NamedValues(("extensible", 0), ("addressRecognitionCapable", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: protocolDirType.setStatus('current')
protocolDirAddressMapConfig = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 11, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("supportedOff", 2), ("supportedOn", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: protocolDirAddressMapConfig.setStatus('current')
protocolDirHostConfig = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 11, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("supportedOff", 2), ("supportedOn", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: protocolDirHostConfig.setStatus('current')
protocolDirMatrixConfig = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 11, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 1), ("supportedOff", 2), ("supportedOn", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: protocolDirMatrixConfig.setStatus('current')
protocolDirOwner = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 11, 2, 1, 9), OwnerString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: protocolDirOwner.setStatus('current')
protocolDirStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 11, 2, 1, 10), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: protocolDirStatus.setStatus('current')
protocolDistControlTable = MibTable((1, 3, 6, 1, 2, 1, 16, 12, 1), )
if mibBuilder.loadTexts: protocolDistControlTable.setStatus('current')
protocolDistControlEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 12, 1, 1), ).setIndexNames((0, "RMON2-MIB", "protocolDistControlIndex"))
if mibBuilder.loadTexts: protocolDistControlEntry.setStatus('current')
protocolDistControlIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 12, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: protocolDistControlIndex.setStatus('current')
protocolDistControlDataSource = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 12, 1, 1, 2), DataSource()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: protocolDistControlDataSource.setStatus('current')
protocolDistControlDroppedFrames = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 12, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: protocolDistControlDroppedFrames.setStatus('current')
protocolDistControlCreateTime = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 12, 1, 1, 4), LastCreateTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: protocolDistControlCreateTime.setStatus('current')
protocolDistControlOwner = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 12, 1, 1, 5), OwnerString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: protocolDistControlOwner.setStatus('current')
protocolDistControlStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 12, 1, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: protocolDistControlStatus.setStatus('current')
protocolDistStatsTable = MibTable((1, 3, 6, 1, 2, 1, 16, 12, 2), )
if mibBuilder.loadTexts: protocolDistStatsTable.setStatus('current')
protocolDistStatsEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 12, 2, 1), ).setIndexNames((0, "RMON2-MIB", "protocolDistControlIndex"), (0, "RMON2-MIB", "protocolDirLocalIndex"))
if mibBuilder.loadTexts: protocolDistStatsEntry.setStatus('current')
protocolDistStatsPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 12, 2, 1, 1), ZeroBasedCounter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: protocolDistStatsPkts.setStatus('current')
protocolDistStatsOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 12, 2, 1, 2), ZeroBasedCounter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: protocolDistStatsOctets.setStatus('current')
addressMapInserts = MibScalar((1, 3, 6, 1, 2, 1, 16, 13, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: addressMapInserts.setStatus('current')
addressMapDeletes = MibScalar((1, 3, 6, 1, 2, 1, 16, 13, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: addressMapDeletes.setStatus('current')
addressMapMaxDesiredEntries = MibScalar((1, 3, 6, 1, 2, 1, 16, 13, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: addressMapMaxDesiredEntries.setStatus('current')
addressMapControlTable = MibTable((1, 3, 6, 1, 2, 1, 16, 13, 4), )
if mibBuilder.loadTexts: addressMapControlTable.setStatus('current')
addressMapControlEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 13, 4, 1), ).setIndexNames((0, "RMON2-MIB", "addressMapControlIndex"))
if mibBuilder.loadTexts: addressMapControlEntry.setStatus('current')
addressMapControlIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 13, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: addressMapControlIndex.setStatus('current')
addressMapControlDataSource = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 13, 4, 1, 2), DataSource()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: addressMapControlDataSource.setStatus('current')
addressMapControlDroppedFrames = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 13, 4, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: addressMapControlDroppedFrames.setStatus('current')
addressMapControlOwner = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 13, 4, 1, 4), OwnerString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: addressMapControlOwner.setStatus('current')
addressMapControlStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 13, 4, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: addressMapControlStatus.setStatus('current')
addressMapTable = MibTable((1, 3, 6, 1, 2, 1, 16, 13, 5), )
if mibBuilder.loadTexts: addressMapTable.setStatus('current')
addressMapEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 13, 5, 1), ).setIndexNames((0, "RMON2-MIB", "addressMapTimeMark"), (0, "RMON2-MIB", "protocolDirLocalIndex"), (0, "RMON2-MIB", "addressMapNetworkAddress"), (0, "RMON2-MIB", "addressMapSource"))
if mibBuilder.loadTexts: addressMapEntry.setStatus('current')
addressMapTimeMark = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 13, 5, 1, 1), TimeFilter())
if mibBuilder.loadTexts: addressMapTimeMark.setStatus('current')
addressMapNetworkAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 13, 5, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255)))
if mibBuilder.loadTexts: addressMapNetworkAddress.setStatus('current')
addressMapSource = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 13, 5, 1, 3), ObjectIdentifier())
if mibBuilder.loadTexts: addressMapSource.setStatus('current')
addressMapPhysicalAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 13, 5, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: addressMapPhysicalAddress.setStatus('current')
addressMapLastChange = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 13, 5, 1, 5), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: addressMapLastChange.setStatus('current')
hlHostControlTable = MibTable((1, 3, 6, 1, 2, 1, 16, 14, 1), )
if mibBuilder.loadTexts: hlHostControlTable.setStatus('current')
hlHostControlEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 14, 1, 1), ).setIndexNames((0, "RMON2-MIB", "hlHostControlIndex"))
if mibBuilder.loadTexts: hlHostControlEntry.setStatus('current')
hlHostControlIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 14, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: hlHostControlIndex.setStatus('current')
hlHostControlDataSource = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 14, 1, 1, 2), DataSource()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hlHostControlDataSource.setStatus('current')
hlHostControlNlDroppedFrames = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 14, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hlHostControlNlDroppedFrames.setStatus('current')
hlHostControlNlInserts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 14, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hlHostControlNlInserts.setStatus('current')
hlHostControlNlDeletes = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 14, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hlHostControlNlDeletes.setStatus('current')
hlHostControlNlMaxDesiredEntries = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 14, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hlHostControlNlMaxDesiredEntries.setStatus('current')
hlHostControlAlDroppedFrames = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 14, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hlHostControlAlDroppedFrames.setStatus('current')
hlHostControlAlInserts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 14, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hlHostControlAlInserts.setStatus('current')
hlHostControlAlDeletes = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 14, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hlHostControlAlDeletes.setStatus('current')
hlHostControlAlMaxDesiredEntries = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 14, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hlHostControlAlMaxDesiredEntries.setStatus('current')
hlHostControlOwner = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 14, 1, 1, 11), OwnerString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hlHostControlOwner.setStatus('current')
hlHostControlStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 14, 1, 1, 12), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hlHostControlStatus.setStatus('current')
nlHostTable = MibTable((1, 3, 6, 1, 2, 1, 16, 14, 2), )
if mibBuilder.loadTexts: nlHostTable.setStatus('current')
nlHostEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 14, 2, 1), ).setIndexNames((0, "RMON2-MIB", "hlHostControlIndex"), (0, "RMON2-MIB", "nlHostTimeMark"), (0, "RMON2-MIB", "protocolDirLocalIndex"), (0, "RMON2-MIB", "nlHostAddress"))
if mibBuilder.loadTexts: nlHostEntry.setStatus('current')
nlHostTimeMark = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 14, 2, 1, 1), TimeFilter())
if mibBuilder.loadTexts: nlHostTimeMark.setStatus('current')
nlHostAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 14, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255)))
if mibBuilder.loadTexts: nlHostAddress.setStatus('current')
nlHostInPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 14, 2, 1, 3), ZeroBasedCounter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nlHostInPkts.setStatus('current')
nlHostOutPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 14, 2, 1, 4), ZeroBasedCounter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nlHostOutPkts.setStatus('current')
nlHostInOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 14, 2, 1, 5), ZeroBasedCounter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nlHostInOctets.setStatus('current')
nlHostOutOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 14, 2, 1, 6), ZeroBasedCounter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nlHostOutOctets.setStatus('current')
nlHostOutMacNonUnicastPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 14, 2, 1, 7), ZeroBasedCounter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nlHostOutMacNonUnicastPkts.setStatus('current')
nlHostCreateTime = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 14, 2, 1, 8), LastCreateTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nlHostCreateTime.setStatus('current')
hlMatrixControlTable = MibTable((1, 3, 6, 1, 2, 1, 16, 15, 1), )
if mibBuilder.loadTexts: hlMatrixControlTable.setStatus('current')
hlMatrixControlEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 15, 1, 1), ).setIndexNames((0, "RMON2-MIB", "hlMatrixControlIndex"))
if mibBuilder.loadTexts: hlMatrixControlEntry.setStatus('current')
hlMatrixControlIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 15, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: hlMatrixControlIndex.setStatus('current')
hlMatrixControlDataSource = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 15, 1, 1, 2), DataSource()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hlMatrixControlDataSource.setStatus('current')
hlMatrixControlNlDroppedFrames = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 15, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hlMatrixControlNlDroppedFrames.setStatus('current')
hlMatrixControlNlInserts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 15, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hlMatrixControlNlInserts.setStatus('current')
hlMatrixControlNlDeletes = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 15, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hlMatrixControlNlDeletes.setStatus('current')
hlMatrixControlNlMaxDesiredEntries = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 15, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hlMatrixControlNlMaxDesiredEntries.setStatus('current')
hlMatrixControlAlDroppedFrames = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 15, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hlMatrixControlAlDroppedFrames.setStatus('current')
hlMatrixControlAlInserts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 15, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hlMatrixControlAlInserts.setStatus('current')
hlMatrixControlAlDeletes = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 15, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hlMatrixControlAlDeletes.setStatus('current')
hlMatrixControlAlMaxDesiredEntries = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 15, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hlMatrixControlAlMaxDesiredEntries.setStatus('current')
hlMatrixControlOwner = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 15, 1, 1, 11), OwnerString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hlMatrixControlOwner.setStatus('current')
hlMatrixControlStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 15, 1, 1, 12), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hlMatrixControlStatus.setStatus('current')
nlMatrixSDTable = MibTable((1, 3, 6, 1, 2, 1, 16, 15, 2), )
if mibBuilder.loadTexts: nlMatrixSDTable.setStatus('current')
nlMatrixSDEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 15, 2, 1), ).setIndexNames((0, "RMON2-MIB", "hlMatrixControlIndex"), (0, "RMON2-MIB", "nlMatrixSDTimeMark"), (0, "RMON2-MIB", "protocolDirLocalIndex"), (0, "RMON2-MIB", "nlMatrixSDSourceAddress"), (0, "RMON2-MIB", "nlMatrixSDDestAddress"))
if mibBuilder.loadTexts: nlMatrixSDEntry.setStatus('current')
nlMatrixSDTimeMark = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 15, 2, 1, 1), TimeFilter())
if mibBuilder.loadTexts: nlMatrixSDTimeMark.setStatus('current')
nlMatrixSDSourceAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 15, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255)))
if mibBuilder.loadTexts: nlMatrixSDSourceAddress.setStatus('current')
nlMatrixSDDestAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 15, 2, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255)))
if mibBuilder.loadTexts: nlMatrixSDDestAddress.setStatus('current')
nlMatrixSDPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 15, 2, 1, 4), ZeroBasedCounter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nlMatrixSDPkts.setStatus('current')
nlMatrixSDOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 15, 2, 1, 5), ZeroBasedCounter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nlMatrixSDOctets.setStatus('current')
nlMatrixSDCreateTime = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 15, 2, 1, 6), LastCreateTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nlMatrixSDCreateTime.setStatus('current')
nlMatrixDSTable = MibTable((1, 3, 6, 1, 2, 1, 16, 15, 3), )
if mibBuilder.loadTexts: nlMatrixDSTable.setStatus('current')
nlMatrixDSEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 15, 3, 1), ).setIndexNames((0, "RMON2-MIB", "hlMatrixControlIndex"), (0, "RMON2-MIB", "nlMatrixDSTimeMark"), (0, "RMON2-MIB", "protocolDirLocalIndex"), (0, "RMON2-MIB", "nlMatrixDSDestAddress"), (0, "RMON2-MIB", "nlMatrixDSSourceAddress"))
if mibBuilder.loadTexts: nlMatrixDSEntry.setStatus('current')
nlMatrixDSTimeMark = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 15, 3, 1, 1), TimeFilter())
if mibBuilder.loadTexts: nlMatrixDSTimeMark.setStatus('current')
nlMatrixDSSourceAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 15, 3, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255)))
if mibBuilder.loadTexts: nlMatrixDSSourceAddress.setStatus('current')
nlMatrixDSDestAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 15, 3, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255)))
if mibBuilder.loadTexts: nlMatrixDSDestAddress.setStatus('current')
nlMatrixDSPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 15, 3, 1, 4), ZeroBasedCounter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nlMatrixDSPkts.setStatus('current')
nlMatrixDSOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 15, 3, 1, 5), ZeroBasedCounter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nlMatrixDSOctets.setStatus('current')
nlMatrixDSCreateTime = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 15, 3, 1, 6), LastCreateTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nlMatrixDSCreateTime.setStatus('current')
nlMatrixTopNControlTable = MibTable((1, 3, 6, 1, 2, 1, 16, 15, 4), )
if mibBuilder.loadTexts: nlMatrixTopNControlTable.setStatus('current')
nlMatrixTopNControlEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 15, 4, 1), ).setIndexNames((0, "RMON2-MIB", "nlMatrixTopNControlIndex"))
if mibBuilder.loadTexts: nlMatrixTopNControlEntry.setStatus('current')
nlMatrixTopNControlIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 15, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: nlMatrixTopNControlIndex.setStatus('current')
nlMatrixTopNControlMatrixIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 15, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nlMatrixTopNControlMatrixIndex.setStatus('current')
nlMatrixTopNControlRateBase = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 15, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("nlMatrixTopNPkts", 1), ("nlMatrixTopNOctets", 2), ("nlMatrixTopNHighCapacityPkts", 3), ("nlMatrixTopNHighCapacityOctets", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nlMatrixTopNControlRateBase.setStatus('current')
nlMatrixTopNControlTimeRemaining = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 15, 4, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)).clone(1800)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nlMatrixTopNControlTimeRemaining.setStatus('current')
nlMatrixTopNControlGeneratedReports = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 15, 4, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nlMatrixTopNControlGeneratedReports.setStatus('current')
nlMatrixTopNControlDuration = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 15, 4, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nlMatrixTopNControlDuration.setStatus('current')
nlMatrixTopNControlRequestedSize = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 15, 4, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)).clone(150)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nlMatrixTopNControlRequestedSize.setStatus('current')
nlMatrixTopNControlGrantedSize = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 15, 4, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nlMatrixTopNControlGrantedSize.setStatus('current')
nlMatrixTopNControlStartTime = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 15, 4, 1, 9), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nlMatrixTopNControlStartTime.setStatus('current')
nlMatrixTopNControlOwner = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 15, 4, 1, 10), OwnerString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nlMatrixTopNControlOwner.setStatus('current')
nlMatrixTopNControlStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 15, 4, 1, 11), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nlMatrixTopNControlStatus.setStatus('current')
nlMatrixTopNTable = MibTable((1, 3, 6, 1, 2, 1, 16, 15, 5), )
if mibBuilder.loadTexts: nlMatrixTopNTable.setStatus('current')
nlMatrixTopNEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 15, 5, 1), ).setIndexNames((0, "RMON2-MIB", "nlMatrixTopNControlIndex"), (0, "RMON2-MIB", "nlMatrixTopNIndex"))
if mibBuilder.loadTexts: nlMatrixTopNEntry.setStatus('current')
nlMatrixTopNIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 15, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: nlMatrixTopNIndex.setStatus('current')
nlMatrixTopNProtocolDirLocalIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 15, 5, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nlMatrixTopNProtocolDirLocalIndex.setStatus('current')
nlMatrixTopNSourceAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 15, 5, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nlMatrixTopNSourceAddress.setStatus('current')
nlMatrixTopNDestAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 15, 5, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nlMatrixTopNDestAddress.setStatus('current')
nlMatrixTopNPktRate = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 15, 5, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nlMatrixTopNPktRate.setStatus('current')
nlMatrixTopNReversePktRate = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 15, 5, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nlMatrixTopNReversePktRate.setStatus('current')
nlMatrixTopNOctetRate = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 15, 5, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nlMatrixTopNOctetRate.setStatus('current')
nlMatrixTopNReverseOctetRate = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 15, 5, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nlMatrixTopNReverseOctetRate.setStatus('current')
alHostTable = MibTable((1, 3, 6, 1, 2, 1, 16, 16, 1), )
if mibBuilder.loadTexts: alHostTable.setStatus('current')
alHostEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 16, 1, 1), ).setIndexNames((0, "RMON2-MIB", "hlHostControlIndex"), (0, "RMON2-MIB", "alHostTimeMark"), (0, "RMON2-MIB", "protocolDirLocalIndex"), (0, "RMON2-MIB", "nlHostAddress"), (0, "RMON2-MIB", "protocolDirLocalIndex"))
if mibBuilder.loadTexts: alHostEntry.setStatus('current')
alHostTimeMark = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 16, 1, 1, 1), TimeFilter())
if mibBuilder.loadTexts: alHostTimeMark.setStatus('current')
alHostInPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 16, 1, 1, 2), ZeroBasedCounter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alHostInPkts.setStatus('current')
alHostOutPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 16, 1, 1, 3), ZeroBasedCounter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alHostOutPkts.setStatus('current')
alHostInOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 16, 1, 1, 4), ZeroBasedCounter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alHostInOctets.setStatus('current')
alHostOutOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 16, 1, 1, 5), ZeroBasedCounter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alHostOutOctets.setStatus('current')
alHostCreateTime = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 16, 1, 1, 6), LastCreateTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alHostCreateTime.setStatus('current')
alMatrixSDTable = MibTable((1, 3, 6, 1, 2, 1, 16, 17, 1), )
if mibBuilder.loadTexts: alMatrixSDTable.setStatus('current')
alMatrixSDEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 17, 1, 1), ).setIndexNames((0, "RMON2-MIB", "hlMatrixControlIndex"), (0, "RMON2-MIB", "alMatrixSDTimeMark"), (0, "RMON2-MIB", "protocolDirLocalIndex"), (0, "RMON2-MIB", "nlMatrixSDSourceAddress"), (0, "RMON2-MIB", "nlMatrixSDDestAddress"), (0, "RMON2-MIB", "protocolDirLocalIndex"))
if mibBuilder.loadTexts: alMatrixSDEntry.setStatus('current')
alMatrixSDTimeMark = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 17, 1, 1, 1), TimeFilter())
if mibBuilder.loadTexts: alMatrixSDTimeMark.setStatus('current')
alMatrixSDPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 17, 1, 1, 2), ZeroBasedCounter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMatrixSDPkts.setStatus('current')
alMatrixSDOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 17, 1, 1, 3), ZeroBasedCounter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMatrixSDOctets.setStatus('current')
alMatrixSDCreateTime = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 17, 1, 1, 4), LastCreateTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMatrixSDCreateTime.setStatus('current')
alMatrixDSTable = MibTable((1, 3, 6, 1, 2, 1, 16, 17, 2), )
if mibBuilder.loadTexts: alMatrixDSTable.setStatus('current')
alMatrixDSEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 17, 2, 1), ).setIndexNames((0, "RMON2-MIB", "hlMatrixControlIndex"), (0, "RMON2-MIB", "alMatrixDSTimeMark"), (0, "RMON2-MIB", "protocolDirLocalIndex"), (0, "RMON2-MIB", "nlMatrixDSDestAddress"), (0, "RMON2-MIB", "nlMatrixDSSourceAddress"), (0, "RMON2-MIB", "protocolDirLocalIndex"))
if mibBuilder.loadTexts: alMatrixDSEntry.setStatus('current')
alMatrixDSTimeMark = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 17, 2, 1, 1), TimeFilter())
if mibBuilder.loadTexts: alMatrixDSTimeMark.setStatus('current')
alMatrixDSPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 17, 2, 1, 2), ZeroBasedCounter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMatrixDSPkts.setStatus('current')
alMatrixDSOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 17, 2, 1, 3), ZeroBasedCounter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMatrixDSOctets.setStatus('current')
alMatrixDSCreateTime = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 17, 2, 1, 4), LastCreateTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMatrixDSCreateTime.setStatus('current')
alMatrixTopNControlTable = MibTable((1, 3, 6, 1, 2, 1, 16, 17, 3), )
if mibBuilder.loadTexts: alMatrixTopNControlTable.setStatus('current')
alMatrixTopNControlEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 17, 3, 1), ).setIndexNames((0, "RMON2-MIB", "alMatrixTopNControlIndex"))
if mibBuilder.loadTexts: alMatrixTopNControlEntry.setStatus('current')
alMatrixTopNControlIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 17, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: alMatrixTopNControlIndex.setStatus('current')
alMatrixTopNControlMatrixIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 17, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alMatrixTopNControlMatrixIndex.setStatus('current')
alMatrixTopNControlRateBase = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 17, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("alMatrixTopNTerminalsPkts", 1), ("alMatrixTopNTerminalsOctets", 2), ("alMatrixTopNAllPkts", 3), ("alMatrixTopNAllOctets", 4), ("alMatrixTopNTerminalsHighCapacityPkts", 5), ("alMatrixTopNTerminalsHighCapacityOctets", 6), ("alMatrixTopNAllHighCapacityPkts", 7), ("alMatrixTopNAllHighCapacityOctets", 8)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alMatrixTopNControlRateBase.setStatus('current')
alMatrixTopNControlTimeRemaining = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 17, 3, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)).clone(1800)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alMatrixTopNControlTimeRemaining.setStatus('current')
alMatrixTopNControlGeneratedReports = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 17, 3, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMatrixTopNControlGeneratedReports.setStatus('current')
alMatrixTopNControlDuration = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 17, 3, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMatrixTopNControlDuration.setStatus('current')
alMatrixTopNControlRequestedSize = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 17, 3, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)).clone(150)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alMatrixTopNControlRequestedSize.setStatus('current')
alMatrixTopNControlGrantedSize = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 17, 3, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMatrixTopNControlGrantedSize.setStatus('current')
alMatrixTopNControlStartTime = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 17, 3, 1, 9), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMatrixTopNControlStartTime.setStatus('current')
alMatrixTopNControlOwner = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 17, 3, 1, 10), OwnerString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alMatrixTopNControlOwner.setStatus('current')
alMatrixTopNControlStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 17, 3, 1, 11), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alMatrixTopNControlStatus.setStatus('current')
alMatrixTopNTable = MibTable((1, 3, 6, 1, 2, 1, 16, 17, 4), )
if mibBuilder.loadTexts: alMatrixTopNTable.setStatus('current')
alMatrixTopNEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 17, 4, 1), ).setIndexNames((0, "RMON2-MIB", "alMatrixTopNControlIndex"), (0, "RMON2-MIB", "alMatrixTopNIndex"))
if mibBuilder.loadTexts: alMatrixTopNEntry.setStatus('current')
alMatrixTopNIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 17, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: alMatrixTopNIndex.setStatus('current')
alMatrixTopNProtocolDirLocalIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 17, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMatrixTopNProtocolDirLocalIndex.setStatus('current')
alMatrixTopNSourceAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 17, 4, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMatrixTopNSourceAddress.setStatus('current')
alMatrixTopNDestAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 17, 4, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMatrixTopNDestAddress.setStatus('current')
alMatrixTopNAppProtocolDirLocalIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 17, 4, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMatrixTopNAppProtocolDirLocalIndex.setStatus('current')
alMatrixTopNPktRate = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 17, 4, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMatrixTopNPktRate.setStatus('current')
alMatrixTopNReversePktRate = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 17, 4, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMatrixTopNReversePktRate.setStatus('current')
alMatrixTopNOctetRate = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 17, 4, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMatrixTopNOctetRate.setStatus('current')
alMatrixTopNReverseOctetRate = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 17, 4, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMatrixTopNReverseOctetRate.setStatus('current')
usrHistoryControlTable = MibTable((1, 3, 6, 1, 2, 1, 16, 18, 1), )
if mibBuilder.loadTexts: usrHistoryControlTable.setStatus('current')
usrHistoryControlEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 18, 1, 1), ).setIndexNames((0, "RMON2-MIB", "usrHistoryControlIndex"))
if mibBuilder.loadTexts: usrHistoryControlEntry.setStatus('current')
usrHistoryControlIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 18, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: usrHistoryControlIndex.setStatus('current')
usrHistoryControlObjects = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 18, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usrHistoryControlObjects.setStatus('current')
usrHistoryControlBucketsRequested = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 18, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(50)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usrHistoryControlBucketsRequested.setStatus('current')
usrHistoryControlBucketsGranted = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 18, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: usrHistoryControlBucketsGranted.setStatus('current')
usrHistoryControlInterval = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 18, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)).clone(1800)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usrHistoryControlInterval.setStatus('current')
usrHistoryControlOwner = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 18, 1, 1, 6), OwnerString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usrHistoryControlOwner.setStatus('current')
usrHistoryControlStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 18, 1, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usrHistoryControlStatus.setStatus('current')
usrHistoryObjectTable = MibTable((1, 3, 6, 1, 2, 1, 16, 18, 2), )
if mibBuilder.loadTexts: usrHistoryObjectTable.setStatus('current')
usrHistoryObjectEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 18, 2, 1), ).setIndexNames((0, "RMON2-MIB", "usrHistoryControlIndex"), (0, "RMON2-MIB", "usrHistoryObjectIndex"))
if mibBuilder.loadTexts: usrHistoryObjectEntry.setStatus('current')
usrHistoryObjectIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 18, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: usrHistoryObjectIndex.setStatus('current')
usrHistoryObjectVariable = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 18, 2, 1, 2), ObjectIdentifier()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usrHistoryObjectVariable.setStatus('current')
usrHistoryObjectSampleType = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 18, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("absoluteValue", 1), ("deltaValue", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: usrHistoryObjectSampleType.setStatus('current')
usrHistoryTable = MibTable((1, 3, 6, 1, 2, 1, 16, 18, 3), )
if mibBuilder.loadTexts: usrHistoryTable.setStatus('current')
usrHistoryEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 18, 3, 1), ).setIndexNames((0, "RMON2-MIB", "usrHistoryControlIndex"), (0, "RMON2-MIB", "usrHistorySampleIndex"), (0, "RMON2-MIB", "usrHistoryObjectIndex"))
if mibBuilder.loadTexts: usrHistoryEntry.setStatus('current')
usrHistorySampleIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 18, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: usrHistorySampleIndex.setStatus('current')
usrHistoryIntervalStart = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 18, 3, 1, 2), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usrHistoryIntervalStart.setStatus('current')
usrHistoryIntervalEnd = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 18, 3, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usrHistoryIntervalEnd.setStatus('current')
usrHistoryAbsValue = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 18, 3, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usrHistoryAbsValue.setStatus('current')
usrHistoryValStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 18, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("valueNotAvailable", 1), ("valuePositive", 2), ("valueNegative", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: usrHistoryValStatus.setStatus('current')
class ControlString(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 255)

probeCapabilities = MibScalar((1, 3, 6, 1, 2, 1, 16, 19, 1), Bits().clone(namedValues=NamedValues(("etherStats", 0), ("historyControl", 1), ("etherHistory", 2), ("alarm", 3), ("hosts", 4), ("hostTopN", 5), ("matrix", 6), ("filter", 7), ("capture", 8), ("event", 9), ("tokenRingMLStats", 10), ("tokenRingPStats", 11), ("tokenRingMLHistory", 12), ("tokenRingPHistory", 13), ("ringStation", 14), ("ringStationOrder", 15), ("ringStationConfig", 16), ("sourceRouting", 17), ("protocolDirectory", 18), ("protocolDistribution", 19), ("addressMapping", 20), ("nlHost", 21), ("nlMatrix", 22), ("alHost", 23), ("alMatrix", 24), ("usrHistory", 25), ("probeConfig", 26)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: probeCapabilities.setStatus('current')
probeSoftwareRev = MibScalar((1, 3, 6, 1, 2, 1, 16, 19, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: probeSoftwareRev.setStatus('current')
probeHardwareRev = MibScalar((1, 3, 6, 1, 2, 1, 16, 19, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: probeHardwareRev.setStatus('current')
probeDateTime = MibScalar((1, 3, 6, 1, 2, 1, 16, 19, 4), OctetString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(8, 8), ValueSizeConstraint(11, 11), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: probeDateTime.setStatus('current')
probeResetControl = MibScalar((1, 3, 6, 1, 2, 1, 16, 19, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("running", 1), ("warmBoot", 2), ("coldBoot", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: probeResetControl.setStatus('current')
probeDownloadFile = MibScalar((1, 3, 6, 1, 2, 1, 16, 19, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: probeDownloadFile.setStatus('deprecated')
probeDownloadTFTPServer = MibScalar((1, 3, 6, 1, 2, 1, 16, 19, 7), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: probeDownloadTFTPServer.setStatus('deprecated')
probeDownloadAction = MibScalar((1, 3, 6, 1, 2, 1, 16, 19, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notDownloading", 1), ("downloadToPROM", 2), ("downloadToRAM", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: probeDownloadAction.setStatus('deprecated')
probeDownloadStatus = MibScalar((1, 3, 6, 1, 2, 1, 16, 19, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("downloadSuccess", 1), ("downloadStatusUnknown", 2), ("downloadGeneralError", 3), ("downloadNoResponseFromServer", 4), ("downloadChecksumError", 5), ("downloadIncompatibleImage", 6), ("downloadTftpFileNotFound", 7), ("downloadTftpAccessViolation", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: probeDownloadStatus.setStatus('deprecated')
serialConfigTable = MibTable((1, 3, 6, 1, 2, 1, 16, 19, 10), )
if mibBuilder.loadTexts: serialConfigTable.setStatus('deprecated')
serialConfigEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 19, 10, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: serialConfigEntry.setStatus('deprecated')
serialMode = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 19, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("direct", 1), ("modem", 2))).clone('direct')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: serialMode.setStatus('deprecated')
serialProtocol = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 19, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("slip", 2), ("ppp", 3))).clone('slip')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: serialProtocol.setStatus('deprecated')
serialTimeout = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 19, 10, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(300)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: serialTimeout.setStatus('deprecated')
serialModemInitString = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 19, 10, 1, 4), ControlString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: serialModemInitString.setStatus('deprecated')
serialModemHangUpString = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 19, 10, 1, 5), ControlString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: serialModemHangUpString.setStatus('deprecated')
serialModemConnectResp = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 19, 10, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: serialModemConnectResp.setStatus('deprecated')
serialModemNoConnectResp = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 19, 10, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: serialModemNoConnectResp.setStatus('deprecated')
serialDialoutTimeout = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 19, 10, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(20)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: serialDialoutTimeout.setStatus('deprecated')
serialStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 19, 10, 1, 9), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: serialStatus.setStatus('deprecated')
netConfigTable = MibTable((1, 3, 6, 1, 2, 1, 16, 19, 11), )
if mibBuilder.loadTexts: netConfigTable.setStatus('deprecated')
netConfigEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 19, 11, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: netConfigEntry.setStatus('deprecated')
netConfigIPAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 19, 11, 1, 1), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: netConfigIPAddress.setStatus('deprecated')
netConfigSubnetMask = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 19, 11, 1, 2), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: netConfigSubnetMask.setStatus('deprecated')
netConfigStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 19, 11, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: netConfigStatus.setStatus('deprecated')
netDefaultGateway = MibScalar((1, 3, 6, 1, 2, 1, 16, 19, 12), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: netDefaultGateway.setStatus('deprecated')
trapDestTable = MibTable((1, 3, 6, 1, 2, 1, 16, 19, 13), )
if mibBuilder.loadTexts: trapDestTable.setStatus('deprecated')
trapDestEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 19, 13, 1), ).setIndexNames((0, "RMON2-MIB", "trapDestIndex"))
if mibBuilder.loadTexts: trapDestEntry.setStatus('deprecated')
trapDestIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 19, 13, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: trapDestIndex.setStatus('deprecated')
trapDestCommunity = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 19, 13, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: trapDestCommunity.setStatus('deprecated')
trapDestProtocol = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 19, 13, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ip", 1), ("ipx", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: trapDestProtocol.setStatus('deprecated')
trapDestAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 19, 13, 1, 4), OctetString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: trapDestAddress.setStatus('deprecated')
trapDestOwner = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 19, 13, 1, 5), OwnerString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: trapDestOwner.setStatus('deprecated')
trapDestStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 19, 13, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: trapDestStatus.setStatus('deprecated')
serialConnectionTable = MibTable((1, 3, 6, 1, 2, 1, 16, 19, 14), )
if mibBuilder.loadTexts: serialConnectionTable.setStatus('deprecated')
serialConnectionEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 19, 14, 1), ).setIndexNames((0, "RMON2-MIB", "serialConnectIndex"))
if mibBuilder.loadTexts: serialConnectionEntry.setStatus('deprecated')
serialConnectIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 19, 14, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: serialConnectIndex.setStatus('deprecated')
serialConnectDestIpAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 19, 14, 1, 2), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: serialConnectDestIpAddress.setStatus('deprecated')
serialConnectType = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 19, 14, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("direct", 1), ("modem", 2), ("switch", 3), ("modemSwitch", 4))).clone('direct')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: serialConnectType.setStatus('deprecated')
serialConnectDialString = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 19, 14, 1, 4), ControlString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: serialConnectDialString.setStatus('deprecated')
serialConnectSwitchConnectSeq = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 19, 14, 1, 5), ControlString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: serialConnectSwitchConnectSeq.setStatus('deprecated')
serialConnectSwitchDisconnectSeq = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 19, 14, 1, 6), ControlString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: serialConnectSwitchDisconnectSeq.setStatus('deprecated')
serialConnectSwitchResetSeq = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 19, 14, 1, 7), ControlString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: serialConnectSwitchResetSeq.setStatus('deprecated')
serialConnectOwner = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 19, 14, 1, 8), OwnerString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: serialConnectOwner.setStatus('deprecated')
serialConnectStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 19, 14, 1, 9), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: serialConnectStatus.setStatus('deprecated')
etherStats2Table = MibTable((1, 3, 6, 1, 2, 1, 16, 1, 4), )
if mibBuilder.loadTexts: etherStats2Table.setStatus('current')
etherStats2Entry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 1, 4, 1), )
etherStatsEntry.registerAugmentions(("RMON2-MIB", "etherStats2Entry"))
etherStats2Entry.setIndexNames(*etherStatsEntry.getIndexNames())
if mibBuilder.loadTexts: etherStats2Entry.setStatus('current')
etherStatsDroppedFrames = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 4, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etherStatsDroppedFrames.setStatus('current')
etherStatsCreateTime = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 4, 1, 2), LastCreateTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etherStatsCreateTime.setStatus('current')
historyControl2Table = MibTable((1, 3, 6, 1, 2, 1, 16, 2, 5), )
if mibBuilder.loadTexts: historyControl2Table.setStatus('current')
historyControl2Entry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 2, 5, 1), )
historyControlEntry.registerAugmentions(("RMON2-MIB", "historyControl2Entry"))
historyControl2Entry.setIndexNames(*historyControlEntry.getIndexNames())
if mibBuilder.loadTexts: historyControl2Entry.setStatus('current')
historyControlDroppedFrames = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 2, 5, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: historyControlDroppedFrames.setStatus('current')
hostControl2Table = MibTable((1, 3, 6, 1, 2, 1, 16, 4, 4), )
if mibBuilder.loadTexts: hostControl2Table.setStatus('current')
hostControl2Entry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 4, 4, 1), )
hostControlEntry.registerAugmentions(("RMON2-MIB", "hostControl2Entry"))
hostControl2Entry.setIndexNames(*hostControlEntry.getIndexNames())
if mibBuilder.loadTexts: hostControl2Entry.setStatus('current')
hostControlDroppedFrames = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 4, 4, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hostControlDroppedFrames.setStatus('current')
hostControlCreateTime = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 4, 4, 1, 2), LastCreateTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hostControlCreateTime.setStatus('current')
matrixControl2Table = MibTable((1, 3, 6, 1, 2, 1, 16, 6, 4), )
if mibBuilder.loadTexts: matrixControl2Table.setStatus('current')
matrixControl2Entry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 6, 4, 1), )
matrixControlEntry.registerAugmentions(("RMON2-MIB", "matrixControl2Entry"))
matrixControl2Entry.setIndexNames(*matrixControlEntry.getIndexNames())
if mibBuilder.loadTexts: matrixControl2Entry.setStatus('current')
matrixControlDroppedFrames = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 6, 4, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: matrixControlDroppedFrames.setStatus('current')
matrixControlCreateTime = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 6, 4, 1, 2), LastCreateTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: matrixControlCreateTime.setStatus('current')
channel2Table = MibTable((1, 3, 6, 1, 2, 1, 16, 7, 3), )
if mibBuilder.loadTexts: channel2Table.setStatus('current')
channel2Entry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 7, 3, 1), )
channelEntry.registerAugmentions(("RMON2-MIB", "channel2Entry"))
channel2Entry.setIndexNames(*channelEntry.getIndexNames())
if mibBuilder.loadTexts: channel2Entry.setStatus('current')
channelDroppedFrames = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 7, 3, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: channelDroppedFrames.setStatus('current')
channelCreateTime = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 7, 3, 1, 2), LastCreateTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: channelCreateTime.setStatus('current')
tokenRingMLStats2Table = MibTable((1, 3, 6, 1, 2, 1, 16, 1, 5), )
if mibBuilder.loadTexts: tokenRingMLStats2Table.setStatus('deprecated')
tokenRingMLStats2Entry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 1, 5, 1), )
tokenRingMLStatsEntry.registerAugmentions(("RMON2-MIB", "tokenRingMLStats2Entry"))
tokenRingMLStats2Entry.setIndexNames(*tokenRingMLStatsEntry.getIndexNames())
if mibBuilder.loadTexts: tokenRingMLStats2Entry.setStatus('deprecated')
tokenRingMLStatsDroppedFrames = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 5, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tokenRingMLStatsDroppedFrames.setStatus('deprecated')
tokenRingMLStatsCreateTime = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 5, 1, 2), LastCreateTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tokenRingMLStatsCreateTime.setStatus('deprecated')
tokenRingPStats2Table = MibTable((1, 3, 6, 1, 2, 1, 16, 1, 6), )
if mibBuilder.loadTexts: tokenRingPStats2Table.setStatus('deprecated')
tokenRingPStats2Entry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 1, 6, 1), )
tokenRingPStatsEntry.registerAugmentions(("RMON2-MIB", "tokenRingPStats2Entry"))
tokenRingPStats2Entry.setIndexNames(*tokenRingPStatsEntry.getIndexNames())
if mibBuilder.loadTexts: tokenRingPStats2Entry.setStatus('deprecated')
tokenRingPStatsDroppedFrames = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 6, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tokenRingPStatsDroppedFrames.setStatus('deprecated')
tokenRingPStatsCreateTime = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 6, 1, 2), LastCreateTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tokenRingPStatsCreateTime.setStatus('deprecated')
ringStationControl2Table = MibTable((1, 3, 6, 1, 2, 1, 16, 10, 7), )
if mibBuilder.loadTexts: ringStationControl2Table.setStatus('deprecated')
ringStationControl2Entry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 10, 7, 1), )
ringStationControlEntry.registerAugmentions(("RMON2-MIB", "ringStationControl2Entry"))
ringStationControl2Entry.setIndexNames(*ringStationControlEntry.getIndexNames())
if mibBuilder.loadTexts: ringStationControl2Entry.setStatus('deprecated')
ringStationControlDroppedFrames = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 10, 7, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ringStationControlDroppedFrames.setStatus('deprecated')
ringStationControlCreateTime = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 10, 7, 1, 2), LastCreateTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ringStationControlCreateTime.setStatus('deprecated')
sourceRoutingStats2Table = MibTable((1, 3, 6, 1, 2, 1, 16, 10, 8), )
if mibBuilder.loadTexts: sourceRoutingStats2Table.setStatus('deprecated')
sourceRoutingStats2Entry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 10, 8, 1), )
sourceRoutingStatsEntry.registerAugmentions(("RMON2-MIB", "sourceRoutingStats2Entry"))
sourceRoutingStats2Entry.setIndexNames(*sourceRoutingStatsEntry.getIndexNames())
if mibBuilder.loadTexts: sourceRoutingStats2Entry.setStatus('deprecated')
sourceRoutingStatsDroppedFrames = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 10, 8, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sourceRoutingStatsDroppedFrames.setStatus('deprecated')
sourceRoutingStatsCreateTime = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 10, 8, 1, 2), LastCreateTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sourceRoutingStatsCreateTime.setStatus('deprecated')
filter2Table = MibTable((1, 3, 6, 1, 2, 1, 16, 7, 4), )
if mibBuilder.loadTexts: filter2Table.setStatus('current')
filter2Entry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 7, 4, 1), )
filterEntry.registerAugmentions(("RMON2-MIB", "filter2Entry"))
filter2Entry.setIndexNames(*filterEntry.getIndexNames())
if mibBuilder.loadTexts: filter2Entry.setStatus('current')
filterProtocolDirDataLocalIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 7, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: filterProtocolDirDataLocalIndex.setStatus('current')
filterProtocolDirLocalIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 7, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: filterProtocolDirLocalIndex.setStatus('current')
rmon2MIBCompliances = MibIdentifier((1, 3, 6, 1, 2, 1, 16, 20, 1))
rmon2MIBGroups = MibIdentifier((1, 3, 6, 1, 2, 1, 16, 20, 2))
rmon2MIBCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 16, 20, 1, 1)).setObjects(("RMON2-MIB", "protocolDirectoryGroup"), ("RMON2-MIB", "protocolDistributionGroup"), ("RMON2-MIB", "addressMapGroup"), ("RMON2-MIB", "nlHostGroup"), ("RMON2-MIB", "nlMatrixGroup"), ("RMON2-MIB", "usrHistoryGroup"), ("RMON2-MIB", "probeInformationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rmon2MIBCompliance = rmon2MIBCompliance.setStatus('current')
rmon2MIBApplicationLayerCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 16, 20, 1, 2)).setObjects(("RMON2-MIB", "protocolDirectoryGroup"), ("RMON2-MIB", "protocolDistributionGroup"), ("RMON2-MIB", "addressMapGroup"), ("RMON2-MIB", "nlHostGroup"), ("RMON2-MIB", "nlMatrixGroup"), ("RMON2-MIB", "alHostGroup"), ("RMON2-MIB", "alMatrixGroup"), ("RMON2-MIB", "usrHistoryGroup"), ("RMON2-MIB", "probeInformationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rmon2MIBApplicationLayerCompliance = rmon2MIBApplicationLayerCompliance.setStatus('current')
protocolDirectoryGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 16, 20, 2, 1)).setObjects(("RMON2-MIB", "protocolDirLastChange"), ("RMON2-MIB", "protocolDirLocalIndex"), ("RMON2-MIB", "protocolDirDescr"), ("RMON2-MIB", "protocolDirType"), ("RMON2-MIB", "protocolDirAddressMapConfig"), ("RMON2-MIB", "protocolDirHostConfig"), ("RMON2-MIB", "protocolDirMatrixConfig"), ("RMON2-MIB", "protocolDirOwner"), ("RMON2-MIB", "protocolDirStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    protocolDirectoryGroup = protocolDirectoryGroup.setStatus('current')
protocolDistributionGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 16, 20, 2, 2)).setObjects(("RMON2-MIB", "protocolDistControlDataSource"), ("RMON2-MIB", "protocolDistControlDroppedFrames"), ("RMON2-MIB", "protocolDistControlCreateTime"), ("RMON2-MIB", "protocolDistControlOwner"), ("RMON2-MIB", "protocolDistControlStatus"), ("RMON2-MIB", "protocolDistStatsPkts"), ("RMON2-MIB", "protocolDistStatsOctets"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    protocolDistributionGroup = protocolDistributionGroup.setStatus('current')
addressMapGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 16, 20, 2, 3)).setObjects(("RMON2-MIB", "addressMapInserts"), ("RMON2-MIB", "addressMapDeletes"), ("RMON2-MIB", "addressMapMaxDesiredEntries"), ("RMON2-MIB", "addressMapControlDataSource"), ("RMON2-MIB", "addressMapControlDroppedFrames"), ("RMON2-MIB", "addressMapControlOwner"), ("RMON2-MIB", "addressMapControlStatus"), ("RMON2-MIB", "addressMapPhysicalAddress"), ("RMON2-MIB", "addressMapLastChange"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    addressMapGroup = addressMapGroup.setStatus('current')
nlHostGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 16, 20, 2, 4)).setObjects(("RMON2-MIB", "hlHostControlDataSource"), ("RMON2-MIB", "hlHostControlNlDroppedFrames"), ("RMON2-MIB", "hlHostControlNlInserts"), ("RMON2-MIB", "hlHostControlNlDeletes"), ("RMON2-MIB", "hlHostControlNlMaxDesiredEntries"), ("RMON2-MIB", "hlHostControlAlDroppedFrames"), ("RMON2-MIB", "hlHostControlAlInserts"), ("RMON2-MIB", "hlHostControlAlDeletes"), ("RMON2-MIB", "hlHostControlAlMaxDesiredEntries"), ("RMON2-MIB", "hlHostControlOwner"), ("RMON2-MIB", "hlHostControlStatus"), ("RMON2-MIB", "nlHostInPkts"), ("RMON2-MIB", "nlHostOutPkts"), ("RMON2-MIB", "nlHostInOctets"), ("RMON2-MIB", "nlHostOutOctets"), ("RMON2-MIB", "nlHostOutMacNonUnicastPkts"), ("RMON2-MIB", "nlHostCreateTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    nlHostGroup = nlHostGroup.setStatus('current')
nlMatrixGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 16, 20, 2, 5)).setObjects(("RMON2-MIB", "hlMatrixControlDataSource"), ("RMON2-MIB", "hlMatrixControlNlDroppedFrames"), ("RMON2-MIB", "hlMatrixControlNlInserts"), ("RMON2-MIB", "hlMatrixControlNlDeletes"), ("RMON2-MIB", "hlMatrixControlNlMaxDesiredEntries"), ("RMON2-MIB", "hlMatrixControlAlDroppedFrames"), ("RMON2-MIB", "hlMatrixControlAlInserts"), ("RMON2-MIB", "hlMatrixControlAlDeletes"), ("RMON2-MIB", "hlMatrixControlAlMaxDesiredEntries"), ("RMON2-MIB", "hlMatrixControlOwner"), ("RMON2-MIB", "hlMatrixControlStatus"), ("RMON2-MIB", "nlMatrixSDPkts"), ("RMON2-MIB", "nlMatrixSDOctets"), ("RMON2-MIB", "nlMatrixSDCreateTime"), ("RMON2-MIB", "nlMatrixDSPkts"), ("RMON2-MIB", "nlMatrixDSOctets"), ("RMON2-MIB", "nlMatrixDSCreateTime"), ("RMON2-MIB", "nlMatrixTopNControlMatrixIndex"), ("RMON2-MIB", "nlMatrixTopNControlRateBase"), ("RMON2-MIB", "nlMatrixTopNControlTimeRemaining"), ("RMON2-MIB", "nlMatrixTopNControlGeneratedReports"), ("RMON2-MIB", "nlMatrixTopNControlDuration"), ("RMON2-MIB", "nlMatrixTopNControlRequestedSize"), ("RMON2-MIB", "nlMatrixTopNControlGrantedSize"), ("RMON2-MIB", "nlMatrixTopNControlStartTime"), ("RMON2-MIB", "nlMatrixTopNControlOwner"), ("RMON2-MIB", "nlMatrixTopNControlStatus"), ("RMON2-MIB", "nlMatrixTopNProtocolDirLocalIndex"), ("RMON2-MIB", "nlMatrixTopNSourceAddress"), ("RMON2-MIB", "nlMatrixTopNDestAddress"), ("RMON2-MIB", "nlMatrixTopNPktRate"), ("RMON2-MIB", "nlMatrixTopNReversePktRate"), ("RMON2-MIB", "nlMatrixTopNOctetRate"), ("RMON2-MIB", "nlMatrixTopNReverseOctetRate"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    nlMatrixGroup = nlMatrixGroup.setStatus('current')
alHostGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 16, 20, 2, 6)).setObjects(("RMON2-MIB", "alHostInPkts"), ("RMON2-MIB", "alHostOutPkts"), ("RMON2-MIB", "alHostInOctets"), ("RMON2-MIB", "alHostOutOctets"), ("RMON2-MIB", "alHostCreateTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alHostGroup = alHostGroup.setStatus('current')
alMatrixGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 16, 20, 2, 7)).setObjects(("RMON2-MIB", "alMatrixSDPkts"), ("RMON2-MIB", "alMatrixSDOctets"), ("RMON2-MIB", "alMatrixSDCreateTime"), ("RMON2-MIB", "alMatrixDSPkts"), ("RMON2-MIB", "alMatrixDSOctets"), ("RMON2-MIB", "alMatrixDSCreateTime"), ("RMON2-MIB", "alMatrixTopNControlMatrixIndex"), ("RMON2-MIB", "alMatrixTopNControlRateBase"), ("RMON2-MIB", "alMatrixTopNControlTimeRemaining"), ("RMON2-MIB", "alMatrixTopNControlGeneratedReports"), ("RMON2-MIB", "alMatrixTopNControlDuration"), ("RMON2-MIB", "alMatrixTopNControlRequestedSize"), ("RMON2-MIB", "alMatrixTopNControlGrantedSize"), ("RMON2-MIB", "alMatrixTopNControlStartTime"), ("RMON2-MIB", "alMatrixTopNControlOwner"), ("RMON2-MIB", "alMatrixTopNControlStatus"), ("RMON2-MIB", "alMatrixTopNProtocolDirLocalIndex"), ("RMON2-MIB", "alMatrixTopNSourceAddress"), ("RMON2-MIB", "alMatrixTopNDestAddress"), ("RMON2-MIB", "alMatrixTopNAppProtocolDirLocalIndex"), ("RMON2-MIB", "alMatrixTopNPktRate"), ("RMON2-MIB", "alMatrixTopNReversePktRate"), ("RMON2-MIB", "alMatrixTopNOctetRate"), ("RMON2-MIB", "alMatrixTopNReverseOctetRate"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alMatrixGroup = alMatrixGroup.setStatus('current')
usrHistoryGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 16, 20, 2, 8)).setObjects(("RMON2-MIB", "usrHistoryControlObjects"), ("RMON2-MIB", "usrHistoryControlBucketsRequested"), ("RMON2-MIB", "usrHistoryControlBucketsGranted"), ("RMON2-MIB", "usrHistoryControlInterval"), ("RMON2-MIB", "usrHistoryControlOwner"), ("RMON2-MIB", "usrHistoryControlStatus"), ("RMON2-MIB", "usrHistoryObjectVariable"), ("RMON2-MIB", "usrHistoryObjectSampleType"), ("RMON2-MIB", "usrHistoryIntervalStart"), ("RMON2-MIB", "usrHistoryIntervalEnd"), ("RMON2-MIB", "usrHistoryAbsValue"), ("RMON2-MIB", "usrHistoryValStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    usrHistoryGroup = usrHistoryGroup.setStatus('current')
probeInformationGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 16, 20, 2, 9)).setObjects(("RMON2-MIB", "probeCapabilities"), ("RMON2-MIB", "probeSoftwareRev"), ("RMON2-MIB", "probeHardwareRev"), ("RMON2-MIB", "probeDateTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    probeInformationGroup = probeInformationGroup.setStatus('current')
probeConfigurationGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 16, 20, 2, 10)).setObjects(("RMON2-MIB", "probeResetControl"), ("RMON2-MIB", "probeDownloadFile"), ("RMON2-MIB", "probeDownloadTFTPServer"), ("RMON2-MIB", "probeDownloadAction"), ("RMON2-MIB", "probeDownloadStatus"), ("RMON2-MIB", "serialMode"), ("RMON2-MIB", "serialProtocol"), ("RMON2-MIB", "serialTimeout"), ("RMON2-MIB", "serialModemInitString"), ("RMON2-MIB", "serialModemHangUpString"), ("RMON2-MIB", "serialModemConnectResp"), ("RMON2-MIB", "serialModemNoConnectResp"), ("RMON2-MIB", "serialDialoutTimeout"), ("RMON2-MIB", "serialStatus"), ("RMON2-MIB", "netConfigIPAddress"), ("RMON2-MIB", "netConfigSubnetMask"), ("RMON2-MIB", "netConfigStatus"), ("RMON2-MIB", "netDefaultGateway"), ("RMON2-MIB", "trapDestCommunity"), ("RMON2-MIB", "trapDestProtocol"), ("RMON2-MIB", "trapDestAddress"), ("RMON2-MIB", "trapDestOwner"), ("RMON2-MIB", "trapDestStatus"), ("RMON2-MIB", "serialConnectDestIpAddress"), ("RMON2-MIB", "serialConnectType"), ("RMON2-MIB", "serialConnectDialString"), ("RMON2-MIB", "serialConnectSwitchConnectSeq"), ("RMON2-MIB", "serialConnectSwitchDisconnectSeq"), ("RMON2-MIB", "serialConnectSwitchResetSeq"), ("RMON2-MIB", "serialConnectOwner"), ("RMON2-MIB", "serialConnectStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    probeConfigurationGroup = probeConfigurationGroup.setStatus('deprecated')
rmon1EnhancementGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 16, 20, 2, 11)).setObjects(("RMON2-MIB", "historyControlDroppedFrames"), ("RMON2-MIB", "hostControlDroppedFrames"), ("RMON2-MIB", "hostControlCreateTime"), ("RMON2-MIB", "matrixControlDroppedFrames"), ("RMON2-MIB", "matrixControlCreateTime"), ("RMON2-MIB", "channelDroppedFrames"), ("RMON2-MIB", "channelCreateTime"), ("RMON2-MIB", "filterProtocolDirDataLocalIndex"), ("RMON2-MIB", "filterProtocolDirLocalIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rmon1EnhancementGroup = rmon1EnhancementGroup.setStatus('current')
rmon1EthernetEnhancementGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 16, 20, 2, 12)).setObjects(("RMON2-MIB", "etherStatsDroppedFrames"), ("RMON2-MIB", "etherStatsCreateTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rmon1EthernetEnhancementGroup = rmon1EthernetEnhancementGroup.setStatus('current')
rmon1TokenRingEnhancementGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 16, 20, 2, 13)).setObjects(("RMON2-MIB", "tokenRingMLStatsDroppedFrames"), ("RMON2-MIB", "tokenRingMLStatsCreateTime"), ("RMON2-MIB", "tokenRingPStatsDroppedFrames"), ("RMON2-MIB", "tokenRingPStatsCreateTime"), ("RMON2-MIB", "ringStationControlDroppedFrames"), ("RMON2-MIB", "ringStationControlCreateTime"), ("RMON2-MIB", "sourceRoutingStatsDroppedFrames"), ("RMON2-MIB", "sourceRoutingStatsCreateTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    rmon1TokenRingEnhancementGroup = rmon1TokenRingEnhancementGroup.setStatus('deprecated')
mibBuilder.exportSymbols("RMON2-MIB", alMatrixDSPkts=alMatrixDSPkts, hlHostControlAlInserts=hlHostControlAlInserts, tokenRingPStats2Entry=tokenRingPStats2Entry, alMatrixSDCreateTime=alMatrixSDCreateTime, ControlString=ControlString, alMatrixTopNControlGrantedSize=alMatrixTopNControlGrantedSize, nlMatrixTopNControlGrantedSize=nlMatrixTopNControlGrantedSize, protocolDistControlStatus=protocolDistControlStatus, nlMatrixTopNProtocolDirLocalIndex=nlMatrixTopNProtocolDirLocalIndex, nlMatrixSDDestAddress=nlMatrixSDDestAddress, alMatrixTopNControlGeneratedReports=alMatrixTopNControlGeneratedReports, usrHistoryIntervalEnd=usrHistoryIntervalEnd, filter2Entry=filter2Entry, serialConnectionTable=serialConnectionTable, channel2Entry=channel2Entry, rmon2MIBCompliance=rmon2MIBCompliance, PYSNMP_MODULE_ID=rmon, addressMapControlTable=addressMapControlTable, hlHostControlDataSource=hlHostControlDataSource, nlMatrixTopNControlTimeRemaining=nlMatrixTopNControlTimeRemaining, serialConnectionEntry=serialConnectionEntry, usrHistoryObjectIndex=usrHistoryObjectIndex, addressMapMaxDesiredEntries=addressMapMaxDesiredEntries, usrHistoryObjectTable=usrHistoryObjectTable, serialMode=serialMode, alMatrixDSTable=alMatrixDSTable, alMatrixTopNPktRate=alMatrixTopNPktRate, usrHistoryTable=usrHistoryTable, nlMatrixDSTimeMark=nlMatrixDSTimeMark, hlHostControlTable=hlHostControlTable, usrHistoryControlOwner=usrHistoryControlOwner, serialModemNoConnectResp=serialModemNoConnectResp, channelCreateTime=channelCreateTime, ringStationControlDroppedFrames=ringStationControlDroppedFrames, protocolDistControlTable=protocolDistControlTable, nlMatrixTopNControlGeneratedReports=nlMatrixTopNControlGeneratedReports, sourceRoutingStats2Entry=sourceRoutingStats2Entry, nlHostOutPkts=nlHostOutPkts, nlHost=nlHost, usrHistoryControlIndex=usrHistoryControlIndex, alMatrixTopNControlDuration=alMatrixTopNControlDuration, hlHostControlNlInserts=hlHostControlNlInserts, hostControl2Table=hostControl2Table, serialConnectSwitchConnectSeq=serialConnectSwitchConnectSeq, protocolDirID=protocolDirID, hlMatrixControlStatus=hlMatrixControlStatus, tokenRingPStats2Table=tokenRingPStats2Table, probeSoftwareRev=probeSoftwareRev, nlMatrixTopNControlTable=nlMatrixTopNControlTable, trapDestIndex=trapDestIndex, nlMatrixTopNControlStatus=nlMatrixTopNControlStatus, netConfigEntry=netConfigEntry, filterProtocolDirDataLocalIndex=filterProtocolDirDataLocalIndex, protocolDistStatsEntry=protocolDistStatsEntry, rmon=rmon, serialTimeout=serialTimeout, protocolDirDescr=protocolDirDescr, hlHostControlEntry=hlHostControlEntry, ringStationControl2Table=ringStationControl2Table, nlMatrixSDPkts=nlMatrixSDPkts, nlHostTimeMark=nlHostTimeMark, alMatrix=alMatrix, protocolDistStatsPkts=protocolDistStatsPkts, tokenRingMLStats2Entry=tokenRingMLStats2Entry, alMatrixTopNEntry=alMatrixTopNEntry, protocolDirLastChange=protocolDirLastChange, rmon2MIBApplicationLayerCompliance=rmon2MIBApplicationLayerCompliance, usrHistoryIntervalStart=usrHistoryIntervalStart, nlMatrixDSOctets=nlMatrixDSOctets, nlMatrixTopNControlIndex=nlMatrixTopNControlIndex, nlMatrixSDSourceAddress=nlMatrixSDSourceAddress, alHostOutPkts=alHostOutPkts, nlMatrixDSSourceAddress=nlMatrixDSSourceAddress, channel2Table=channel2Table, rmon2MIBGroups=rmon2MIBGroups, alHostCreateTime=alHostCreateTime, protocolDist=protocolDist, alMatrixTopNControlTimeRemaining=alMatrixTopNControlTimeRemaining, alMatrixTopNControlIndex=alMatrixTopNControlIndex, serialConnectOwner=serialConnectOwner, usrHistoryObjectVariable=usrHistoryObjectVariable, alMatrixTopNControlStartTime=alMatrixTopNControlStartTime, protocolDistControlEntry=protocolDistControlEntry, nlMatrixSDOctets=nlMatrixSDOctets, nlMatrixTopNControlRequestedSize=nlMatrixTopNControlRequestedSize, protocolDirTable=protocolDirTable, probeConfig=probeConfig, serialConnectSwitchResetSeq=serialConnectSwitchResetSeq, DataSource=DataSource, historyControlDroppedFrames=historyControlDroppedFrames, addressMapControlOwner=addressMapControlOwner, protocolDirType=protocolDirType, usrHistoryObjectEntry=usrHistoryObjectEntry, filter2Table=filter2Table, ringStationControlCreateTime=ringStationControlCreateTime, nlMatrixTopNControlDuration=nlMatrixTopNControlDuration, rmon1EthernetEnhancementGroup=rmon1EthernetEnhancementGroup, hlMatrixControlNlMaxDesiredEntries=hlMatrixControlNlMaxDesiredEntries, addressMapPhysicalAddress=addressMapPhysicalAddress, addressMapEntry=addressMapEntry, alHostEntry=alHostEntry, hlMatrixControlNlDeletes=hlMatrixControlNlDeletes, ringStationControl2Entry=ringStationControl2Entry, nlMatrixTopNTable=nlMatrixTopNTable, alMatrixSDEntry=alMatrixSDEntry, protocolDistControlDataSource=protocolDistControlDataSource, hlMatrixControlAlDroppedFrames=hlMatrixControlAlDroppedFrames, nlMatrixTopNControlRateBase=nlMatrixTopNControlRateBase, usrHistorySampleIndex=usrHistorySampleIndex, etherStats2Entry=etherStats2Entry, hlHostControlOwner=hlHostControlOwner, serialConfigTable=serialConfigTable, trapDestEntry=trapDestEntry, serialConnectDialString=serialConnectDialString, nlHostGroup=nlHostGroup, usrHistoryGroup=usrHistoryGroup, netDefaultGateway=netDefaultGateway, hlMatrixControlAlDeletes=hlMatrixControlAlDeletes, usrHistoryControlInterval=usrHistoryControlInterval, protocolDirLocalIndex=protocolDirLocalIndex, hlMatrixControlDataSource=hlMatrixControlDataSource, nlMatrixSDTable=nlMatrixSDTable, nlMatrixTopNControlEntry=nlMatrixTopNControlEntry, LastCreateTime=LastCreateTime, protocolDistStatsTable=protocolDistStatsTable, protocolDirMatrixConfig=protocolDirMatrixConfig, nlHostTable=nlHostTable, addressMapSource=addressMapSource, nlMatrixTopNControlStartTime=nlMatrixTopNControlStartTime, protocolDistControlOwner=protocolDistControlOwner, nlMatrixTopNControlOwner=nlMatrixTopNControlOwner, alHostTimeMark=alHostTimeMark, channelDroppedFrames=channelDroppedFrames, serialDialoutTimeout=serialDialoutTimeout, nlMatrixDSDestAddress=nlMatrixDSDestAddress, alMatrixTopNReversePktRate=alMatrixTopNReversePktRate, tokenRingMLStats2Table=tokenRingMLStats2Table, nlMatrixGroup=nlMatrixGroup, addressMapControlStatus=addressMapControlStatus, alHostInOctets=alHostInOctets, usrHistoryControlBucketsRequested=usrHistoryControlBucketsRequested, protocolDir=protocolDir, etherStatsDroppedFrames=etherStatsDroppedFrames, hostControl2Entry=hostControl2Entry, alMatrixTopNTable=alMatrixTopNTable, trapDestCommunity=trapDestCommunity, probeHardwareRev=probeHardwareRev, sourceRoutingStatsDroppedFrames=sourceRoutingStatsDroppedFrames, serialModemHangUpString=serialModemHangUpString, nlMatrixSDEntry=nlMatrixSDEntry, usrHistoryControlBucketsGranted=usrHistoryControlBucketsGranted, protocolDistStatsOctets=protocolDistStatsOctets, netConfigIPAddress=netConfigIPAddress, usrHistoryControlObjects=usrHistoryControlObjects, protocolDistControlCreateTime=protocolDistControlCreateTime, tokenRingPStatsCreateTime=tokenRingPStatsCreateTime, nlMatrixSDCreateTime=nlMatrixSDCreateTime, nlMatrixTopNIndex=nlMatrixTopNIndex, serialConnectIndex=serialConnectIndex, probeConfigurationGroup=probeConfigurationGroup, alHostGroup=alHostGroup, hlHostControlAlMaxDesiredEntries=hlHostControlAlMaxDesiredEntries, alHost=alHost, nlMatrixTopNDestAddress=nlMatrixTopNDestAddress, nlHostInOctets=nlHostInOctets, alMatrixDSOctets=alMatrixDSOctets, trapDestAddress=trapDestAddress, rmonConformance=rmonConformance, netConfigStatus=netConfigStatus, alMatrixTopNControlOwner=alMatrixTopNControlOwner, addressMapDeletes=addressMapDeletes, hlHostControlAlDeletes=hlHostControlAlDeletes, usrHistoryAbsValue=usrHistoryAbsValue, hlMatrixControlEntry=hlMatrixControlEntry, alMatrixTopNControlMatrixIndex=alMatrixTopNControlMatrixIndex, alMatrixTopNAppProtocolDirLocalIndex=alMatrixTopNAppProtocolDirLocalIndex, etherStats2Table=etherStats2Table, probeInformationGroup=probeInformationGroup, probeDateTime=probeDateTime, alMatrixTopNDestAddress=alMatrixTopNDestAddress, serialModemInitString=serialModemInitString, addressMapControlIndex=addressMapControlIndex, hlMatrixControlAlInserts=hlMatrixControlAlInserts, probeDownloadAction=probeDownloadAction, alMatrixSDOctets=alMatrixSDOctets, hlHostControlNlDeletes=hlHostControlNlDeletes, hlMatrixControlNlDroppedFrames=hlMatrixControlNlDroppedFrames, addressMapControlEntry=addressMapControlEntry, nlMatrixDSCreateTime=nlMatrixDSCreateTime, protocolDirParameters=protocolDirParameters, nlMatrixTopNEntry=nlMatrixTopNEntry, ZeroBasedCounter32=ZeroBasedCounter32, rmon2MIBCompliances=rmon2MIBCompliances, alMatrixGroup=alMatrixGroup, serialConnectDestIpAddress=serialConnectDestIpAddress, nlMatrixDSTable=nlMatrixDSTable, usrHistoryControlEntry=usrHistoryControlEntry, filterProtocolDirLocalIndex=filterProtocolDirLocalIndex, serialConnectStatus=serialConnectStatus, addressMapGroup=addressMapGroup, hlHostControlStatus=hlHostControlStatus, alHostTable=alHostTable, trapDestProtocol=trapDestProtocol, nlMatrix=nlMatrix, addressMapTimeMark=addressMapTimeMark, nlHostEntry=nlHostEntry, alHostInPkts=alHostInPkts, alMatrixTopNProtocolDirLocalIndex=alMatrixTopNProtocolDirLocalIndex, serialStatus=serialStatus, historyControl2Entry=historyControl2Entry, rmon1TokenRingEnhancementGroup=rmon1TokenRingEnhancementGroup, nlMatrixTopNOctetRate=nlMatrixTopNOctetRate, serialProtocol=serialProtocol, nlHostOutOctets=nlHostOutOctets, addressMapNetworkAddress=addressMapNetworkAddress, nlMatrixDSPkts=nlMatrixDSPkts, protocolDistControlDroppedFrames=protocolDistControlDroppedFrames, usrHistoryControlStatus=usrHistoryControlStatus, serialConfigEntry=serialConfigEntry, nlMatrixDSEntry=nlMatrixDSEntry, usrHistory=usrHistory, nlMatrixTopNPktRate=nlMatrixTopNPktRate, trapDestOwner=trapDestOwner, addressMapTable=addressMapTable, serialConnectType=serialConnectType, etherStatsCreateTime=etherStatsCreateTime, tokenRingMLStatsCreateTime=tokenRingMLStatsCreateTime, rmon1EnhancementGroup=rmon1EnhancementGroup, hostControlDroppedFrames=hostControlDroppedFrames, nlHostOutMacNonUnicastPkts=nlHostOutMacNonUnicastPkts, alMatrixSDPkts=alMatrixSDPkts, nlMatrixTopNSourceAddress=nlMatrixTopNSourceAddress, alMatrixTopNIndex=alMatrixTopNIndex, protocolDirOwner=protocolDirOwner, nlMatrixTopNControlMatrixIndex=nlMatrixTopNControlMatrixIndex, alMatrixSDTable=alMatrixSDTable, historyControl2Table=historyControl2Table, nlHostCreateTime=nlHostCreateTime, sourceRoutingStats2Table=sourceRoutingStats2Table, TimeFilter=TimeFilter, probeDownloadTFTPServer=probeDownloadTFTPServer, addressMap=addressMap, netConfigSubnetMask=netConfigSubnetMask, protocolDirAddressMapConfig=protocolDirAddressMapConfig, hlMatrixControlAlMaxDesiredEntries=hlMatrixControlAlMaxDesiredEntries, hlMatrixControlIndex=hlMatrixControlIndex, alMatrixTopNControlEntry=alMatrixTopNControlEntry, hlMatrixControlTable=hlMatrixControlTable, matrixControl2Table=matrixControl2Table, alMatrixDSTimeMark=alMatrixDSTimeMark, protocolDistributionGroup=protocolDistributionGroup, addressMapInserts=addressMapInserts, addressMapLastChange=addressMapLastChange, hlHostControlIndex=hlHostControlIndex)
mibBuilder.exportSymbols("RMON2-MIB", trapDestTable=trapDestTable, nlMatrixTopNReversePktRate=nlMatrixTopNReversePktRate, trapDestStatus=trapDestStatus, alMatrixTopNReverseOctetRate=alMatrixTopNReverseOctetRate, netConfigTable=netConfigTable, serialModemConnectResp=serialModemConnectResp, hlMatrixControlNlInserts=hlMatrixControlNlInserts, alMatrixTopNControlTable=alMatrixTopNControlTable, hostControlCreateTime=hostControlCreateTime, protocolDistControlIndex=protocolDistControlIndex, alHostOutOctets=alHostOutOctets, protocolDirStatus=protocolDirStatus, usrHistoryControlTable=usrHistoryControlTable, protocolDirHostConfig=protocolDirHostConfig, hlHostControlAlDroppedFrames=hlHostControlAlDroppedFrames, nlMatrixSDTimeMark=nlMatrixSDTimeMark, alMatrixDSCreateTime=alMatrixDSCreateTime, matrixControlCreateTime=matrixControlCreateTime, protocolDirectoryGroup=protocolDirectoryGroup, hlMatrixControlOwner=hlMatrixControlOwner, matrixControl2Entry=matrixControl2Entry, nlHostInPkts=nlHostInPkts, alMatrixTopNSourceAddress=alMatrixTopNSourceAddress, alMatrixTopNOctetRate=alMatrixTopNOctetRate, usrHistoryValStatus=usrHistoryValStatus, hlHostControlNlMaxDesiredEntries=hlHostControlNlMaxDesiredEntries, alMatrixSDTimeMark=alMatrixSDTimeMark, probeDownloadFile=probeDownloadFile, probeDownloadStatus=probeDownloadStatus, tokenRingPStatsDroppedFrames=tokenRingPStatsDroppedFrames, protocolDirEntry=protocolDirEntry, alMatrixDSEntry=alMatrixDSEntry, matrixControlDroppedFrames=matrixControlDroppedFrames, alMatrixTopNControlRequestedSize=alMatrixTopNControlRequestedSize, usrHistoryEntry=usrHistoryEntry, probeResetControl=probeResetControl, usrHistoryObjectSampleType=usrHistoryObjectSampleType, serialConnectSwitchDisconnectSeq=serialConnectSwitchDisconnectSeq, tokenRingMLStatsDroppedFrames=tokenRingMLStatsDroppedFrames, addressMapControlDroppedFrames=addressMapControlDroppedFrames, addressMapControlDataSource=addressMapControlDataSource, nlHostAddress=nlHostAddress, probeCapabilities=probeCapabilities, sourceRoutingStatsCreateTime=sourceRoutingStatsCreateTime, nlMatrixTopNReverseOctetRate=nlMatrixTopNReverseOctetRate, hlHostControlNlDroppedFrames=hlHostControlNlDroppedFrames, alMatrixTopNControlStatus=alMatrixTopNControlStatus, alMatrixTopNControlRateBase=alMatrixTopNControlRateBase)
