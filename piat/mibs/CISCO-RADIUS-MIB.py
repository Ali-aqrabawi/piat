#
# PySNMP MIB module CISCO-RADIUS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source http://mibs.snmplabs.com:80/asn1/CISCO-RADIUS-MIB
# Produced by pysmi-0.3.4 at Sun Apr 21 23:39:58 2019
# On host aaqrabaw platform Linux version 4.15.0-47-generic by user aaqrabaw
# Using Python version 3.6.5 (default, Apr  1 2018, 05:46:30) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
TimeIntervalMin, TimeIntervalSec, CiscoPort = mibBuilder.importSymbols("CISCO-TC", "TimeIntervalMin", "TimeIntervalSec", "CiscoPort")
InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
Counter32, ModuleIdentity, TimeTicks, Gauge32, ObjectIdentity, IpAddress, Unsigned32, iso, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, NotificationType, MibIdentifier, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "ModuleIdentity", "TimeTicks", "Gauge32", "ObjectIdentity", "IpAddress", "Unsigned32", "iso", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "NotificationType", "MibIdentifier", "Counter64")
DisplayString, TextualConvention, TruthValue, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "TruthValue", "RowStatus")
ciscoRadiusMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 288))
ciscoRadiusMIB.setRevisions(('2009-02-06 00:00', '2007-07-22 00:00', '2007-01-03 00:00', '2004-03-03 00:00', '2002-11-09 00:00', '2002-10-08 00:00',))
if mibBuilder.loadTexts: ciscoRadiusMIB.setLastUpdated('200902060000Z')
if mibBuilder.loadTexts: ciscoRadiusMIB.setOrganization('Cisco Systems Inc.')
ciscoRadiusMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 288, 1))
ciscoRadiusMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 288, 2))
crRadiusGenericConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 288, 1, 1))
crRadiusServerConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 288, 1, 2))
crRadiusAttributesConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 288, 1, 3))
crRadiusVlanConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 288, 1, 4))
crRadiusKeepAliveConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 288, 1, 5))
crRadiusServerNotifCntl = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 288, 1, 6))
ciscoRadiusMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 288, 3))
class CiscoRadiusAuthKey(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 65)

class CiscoRadiusRoundTripTimePercent(TextualConvention, Unsigned32):
    status = 'current'
    displayHint = 'd-2'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(1, 100)

class CiscoRadiusRetransPercent(TextualConvention, Unsigned32):
    status = 'current'
    displayHint = 'd-2'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(1, 100)

crRadiusLoginAuthentication = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 288, 1, 1, 1), Bits().clone(namedValues=NamedValues(("telnet", 0), ("console", 1), ("http", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: crRadiusLoginAuthentication.setStatus('current')
crRadiusDeadtime = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 288, 1, 1, 2), TimeIntervalMin().subtype(subtypeSpec=ValueRangeConstraint(0, 1440))).setUnits('minutes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: crRadiusDeadtime.setStatus('current')
crRadiusAuthKey = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 288, 1, 1, 3), CiscoRadiusAuthKey()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: crRadiusAuthKey.setStatus('current')
crRadiusTimeout = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 288, 1, 1, 4), TimeIntervalSec().subtype(subtypeSpec=ValueRangeConstraint(1, 1000)).clone(1)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: crRadiusTimeout.setStatus('current')
crRadiusRetransmits = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 288, 1, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100)).clone(1)).setUnits('retransmits').setMaxAccess("readwrite")
if mibBuilder.loadTexts: crRadiusRetransmits.setStatus('current')
crRadiusAccountingLogMaxSize = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 288, 1, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 30000)).clone(30000)).setUnits('bytes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: crRadiusAccountingLogMaxSize.setStatus('current')
crRadiusAccountingMethod = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 288, 1, 1, 7), Bits().clone(namedValues=NamedValues(("radius", 0), ("local", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: crRadiusAccountingMethod.setStatus('current')
crRadiusFramedIpAddrIncluded = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 288, 1, 3, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: crRadiusFramedIpAddrIncluded.setStatus('current')
crRadiusFramedMtu = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 288, 1, 3, 2), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: crRadiusFramedMtu.setStatus('current')
crRadiusServerTableMaxEntries = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 288, 1, 2, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65536))).setMaxAccess("readonly")
if mibBuilder.loadTexts: crRadiusServerTableMaxEntries.setStatus('current')
crRadiusServerTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 288, 1, 2, 2), )
if mibBuilder.loadTexts: crRadiusServerTable.setStatus('current')
crRadiusServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 288, 1, 2, 2, 1), ).setIndexNames((0, "CISCO-RADIUS-MIB", "crRadiusServerIndex"))
if mibBuilder.loadTexts: crRadiusServerEntry.setStatus('current')
crRadiusServerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 288, 1, 2, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: crRadiusServerIndex.setStatus('current')
crRadiusServerAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 288, 1, 2, 2, 1, 2), InetAddressType().clone('ipv4')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: crRadiusServerAddrType.setStatus('current')
crRadiusServerAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 288, 1, 2, 2, 1, 3), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: crRadiusServerAddr.setStatus('current')
crRadiusServerAuthPort = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 288, 1, 2, 2, 1, 4), CiscoPort().clone(1812)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: crRadiusServerAuthPort.setStatus('current')
crRadiusServerAcctPort = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 288, 1, 2, 2, 1, 5), CiscoPort().clone(1813)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: crRadiusServerAcctPort.setStatus('current')
crRadiusServerKey = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 288, 1, 2, 2, 1, 6), CiscoRadiusAuthKey().clone(hexValue="00000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: crRadiusServerKey.setStatus('current')
crRadiusServerType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 288, 1, 2, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("primary", 2))).clone('other')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: crRadiusServerType.setStatus('current')
crRadiusServerMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 288, 1, 2, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("authAndAcct", 2), ("authOnly", 3), ("acctOnly", 4))).clone('authAndAcct')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: crRadiusServerMode.setStatus('current')
crRadiusServerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 288, 1, 2, 2, 1, 9), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: crRadiusServerRowStatus.setStatus('current')
crRadiusServerRTTThldNorm = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 288, 1, 2, 2, 1, 10), CiscoRadiusRoundTripTimePercent()).setUnits('percent').setMaxAccess("readcreate")
if mibBuilder.loadTexts: crRadiusServerRTTThldNorm.setStatus('current')
crRadiusServerRTTThldHi = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 288, 1, 2, 2, 1, 11), CiscoRadiusRoundTripTimePercent()).setUnits('percent').setMaxAccess("readcreate")
if mibBuilder.loadTexts: crRadiusServerRTTThldHi.setStatus('current')
crRadiusServerRetransThldNorm = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 288, 1, 2, 2, 1, 12), CiscoRadiusRetransPercent()).setUnits('percent').setMaxAccess("readcreate")
if mibBuilder.loadTexts: crRadiusServerRetransThldNorm.setStatus('current')
crRadiusServerRetransThldHi = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 288, 1, 2, 2, 1, 13), CiscoRadiusRetransPercent()).setUnits('percent').setMaxAccess("readcreate")
if mibBuilder.loadTexts: crRadiusServerRetransThldHi.setStatus('current')
crRadiusVlanAssignmentEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 288, 1, 4, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: crRadiusVlanAssignmentEnabled.setStatus('current')
crVlanGroupTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 288, 1, 4, 2), )
if mibBuilder.loadTexts: crVlanGroupTable.setStatus('current')
crVlanGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 288, 1, 4, 2, 1), ).setIndexNames((0, "CISCO-RADIUS-MIB", "crVlanGroupName"))
if mibBuilder.loadTexts: crVlanGroupEntry.setStatus('current')
crVlanGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 288, 1, 4, 2, 1, 1), SnmpAdminString())
if mibBuilder.loadTexts: crVlanGroupName.setStatus('current')
crVlanGroupVlansLow = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 288, 1, 4, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: crVlanGroupVlansLow.setStatus('current')
crVlanGroupVlansHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 288, 1, 4, 2, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: crVlanGroupVlansHigh.setStatus('current')
crVlanGroupRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 288, 1, 4, 2, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: crVlanGroupRowStatus.setStatus('current')
crRadiusKeepAliveEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 288, 1, 5, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: crRadiusKeepAliveEnabled.setStatus('current')
crRadiusKeepAliveInterval = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 288, 1, 5, 2), Unsigned32()).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: crRadiusKeepAliveInterval.setStatus('current')
crRadiusKeepAliveServerTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 288, 1, 5, 3), )
if mibBuilder.loadTexts: crRadiusKeepAliveServerTable.setStatus('current')
crRadiusKeepAliveServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 288, 1, 5, 3, 1), ).setIndexNames((0, "CISCO-RADIUS-MIB", "crRadiusServerIndex"))
if mibBuilder.loadTexts: crRadiusKeepAliveServerEntry.setStatus('current')
crRadiusKeepAliveServerStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 288, 1, 5, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("init", 2), ("active", 3), ("checkup", 4), ("dead", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: crRadiusKeepAliveServerStatus.setStatus('current')
crRadiusPortAutoInitialize = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 288, 1, 5, 4), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: crRadiusPortAutoInitialize.setStatus('current')
crRadiusKeepAliveUserName = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 288, 1, 5, 5), SnmpAdminString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: crRadiusKeepAliveUserName.setStatus('current')
crRadiusServerRTTNormNotifEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 288, 1, 6, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: crRadiusServerRTTNormNotifEnable.setStatus('current')
crRadiusServerRTTHiNotifEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 288, 1, 6, 2), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: crRadiusServerRTTHiNotifEnable.setStatus('current')
crRadiusServerRetransNormNotifEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 288, 1, 6, 3), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: crRadiusServerRetransNormNotifEnable.setStatus('current')
crRadiusServerRetransHiNotifEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 288, 1, 6, 4), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: crRadiusServerRetransHiNotifEnable.setStatus('current')
crRadiusServerRTTNormNotif = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 288, 3, 1)).setObjects(("CISCO-RADIUS-MIB", "crRadiusServerRTTThldNorm"), ("CISCO-RADIUS-MIB", "crRadiusServerAddr"), ("CISCO-RADIUS-MIB", "crRadiusServerAuthPort"))
if mibBuilder.loadTexts: crRadiusServerRTTNormNotif.setStatus('current')
crRadiusServerRTTHiNotif = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 288, 3, 2)).setObjects(("CISCO-RADIUS-MIB", "crRadiusServerRTTThldHi"), ("CISCO-RADIUS-MIB", "crRadiusServerAddr"), ("CISCO-RADIUS-MIB", "crRadiusServerAuthPort"))
if mibBuilder.loadTexts: crRadiusServerRTTHiNotif.setStatus('current')
crRadiusServerRetransNormNotif = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 288, 3, 3)).setObjects(("CISCO-RADIUS-MIB", "crRadiusServerRetransThldNorm"), ("CISCO-RADIUS-MIB", "crRadiusServerAddr"), ("CISCO-RADIUS-MIB", "crRadiusServerAuthPort"))
if mibBuilder.loadTexts: crRadiusServerRetransNormNotif.setStatus('current')
crRadiusServerRetransHiNotif = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 288, 3, 4)).setObjects(("CISCO-RADIUS-MIB", "crRadiusServerRetransThldHi"), ("CISCO-RADIUS-MIB", "crRadiusServerAddr"), ("CISCO-RADIUS-MIB", "crRadiusServerAuthPort"))
if mibBuilder.loadTexts: crRadiusServerRetransHiNotif.setStatus('current')
ciscoRadiusMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 288, 2, 1))
ciscoRadiusMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 288, 2, 2))
ciscoRadiusMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 288, 2, 1, 1)).setObjects(("CISCO-RADIUS-MIB", "crmConfigurationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoRadiusMIBCompliance = ciscoRadiusMIBCompliance.setStatus('deprecated')
ciscoRadiusMIBCompliance2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 288, 2, 1, 2)).setObjects(("CISCO-RADIUS-MIB", "crmConfigurationGroup"), ("CISCO-RADIUS-MIB", "crmAttributesGroup"), ("CISCO-RADIUS-MIB", "crmKeepAliveGroup"), ("CISCO-RADIUS-MIB", "crmAutoInitializeConfigGroup"), ("CISCO-RADIUS-MIB", "crmAttributesGroup2"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoRadiusMIBCompliance2 = ciscoRadiusMIBCompliance2.setStatus('deprecated')
ciscoRadiusMIBCompliance3 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 288, 2, 1, 3)).setObjects(("CISCO-RADIUS-MIB", "crmConfigurationGroup"), ("CISCO-RADIUS-MIB", "crmAttributesGroup"), ("CISCO-RADIUS-MIB", "crmKeepAliveGroup"), ("CISCO-RADIUS-MIB", "crmAutoInitializeConfigGroup"), ("CISCO-RADIUS-MIB", "crmAttributesGroup2"), ("CISCO-RADIUS-MIB", "crmVlanConfigGroup"), ("CISCO-RADIUS-MIB", "crmRadiusKeepAliveUserGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoRadiusMIBCompliance3 = ciscoRadiusMIBCompliance3.setStatus('deprecated')
ciscoRadiusMIBCompliance4 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 288, 2, 1, 4)).setObjects(("CISCO-RADIUS-MIB", "crmConfigurationGroup"), ("CISCO-RADIUS-MIB", "crmConfigurationGroupSup1"), ("CISCO-RADIUS-MIB", "crmRadiusServerNotifGroup"), ("CISCO-RADIUS-MIB", "crmRadiusServerNotifCntlGroup"), ("CISCO-RADIUS-MIB", "crmAttributesGroup"), ("CISCO-RADIUS-MIB", "crmKeepAliveGroup"), ("CISCO-RADIUS-MIB", "crmAutoInitializeConfigGroup"), ("CISCO-RADIUS-MIB", "crmAttributesGroup2"), ("CISCO-RADIUS-MIB", "crmVlanConfigGroup"), ("CISCO-RADIUS-MIB", "crmRadiusKeepAliveUserGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoRadiusMIBCompliance4 = ciscoRadiusMIBCompliance4.setStatus('current')
crmConfigurationGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 288, 2, 2, 1)).setObjects(("CISCO-RADIUS-MIB", "crRadiusLoginAuthentication"), ("CISCO-RADIUS-MIB", "crRadiusAuthKey"), ("CISCO-RADIUS-MIB", "crRadiusTimeout"), ("CISCO-RADIUS-MIB", "crRadiusRetransmits"), ("CISCO-RADIUS-MIB", "crRadiusDeadtime"), ("CISCO-RADIUS-MIB", "crRadiusAccountingLogMaxSize"), ("CISCO-RADIUS-MIB", "crRadiusAccountingMethod"), ("CISCO-RADIUS-MIB", "crRadiusServerTableMaxEntries"), ("CISCO-RADIUS-MIB", "crRadiusServerAddrType"), ("CISCO-RADIUS-MIB", "crRadiusServerAddr"), ("CISCO-RADIUS-MIB", "crRadiusServerAuthPort"), ("CISCO-RADIUS-MIB", "crRadiusServerAcctPort"), ("CISCO-RADIUS-MIB", "crRadiusServerKey"), ("CISCO-RADIUS-MIB", "crRadiusServerType"), ("CISCO-RADIUS-MIB", "crRadiusServerMode"), ("CISCO-RADIUS-MIB", "crRadiusServerRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    crmConfigurationGroup = crmConfigurationGroup.setStatus('current')
crmAttributesGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 288, 2, 2, 2)).setObjects(("CISCO-RADIUS-MIB", "crRadiusFramedIpAddrIncluded"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    crmAttributesGroup = crmAttributesGroup.setStatus('current')
crmVlanConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 288, 2, 2, 3)).setObjects(("CISCO-RADIUS-MIB", "crRadiusVlanAssignmentEnabled"), ("CISCO-RADIUS-MIB", "crVlanGroupVlansLow"), ("CISCO-RADIUS-MIB", "crVlanGroupVlansHigh"), ("CISCO-RADIUS-MIB", "crVlanGroupRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    crmVlanConfigGroup = crmVlanConfigGroup.setStatus('current')
crmKeepAliveGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 288, 2, 2, 4)).setObjects(("CISCO-RADIUS-MIB", "crRadiusKeepAliveEnabled"), ("CISCO-RADIUS-MIB", "crRadiusKeepAliveInterval"), ("CISCO-RADIUS-MIB", "crRadiusKeepAliveServerStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    crmKeepAliveGroup = crmKeepAliveGroup.setStatus('current')
crmAutoInitializeConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 288, 2, 2, 5)).setObjects(("CISCO-RADIUS-MIB", "crRadiusPortAutoInitialize"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    crmAutoInitializeConfigGroup = crmAutoInitializeConfigGroup.setStatus('current')
crmAttributesGroup2 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 288, 2, 2, 6)).setObjects(("CISCO-RADIUS-MIB", "crRadiusFramedMtu"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    crmAttributesGroup2 = crmAttributesGroup2.setStatus('current')
crmRadiusKeepAliveUserGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 288, 2, 2, 7)).setObjects(("CISCO-RADIUS-MIB", "crRadiusKeepAliveUserName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    crmRadiusKeepAliveUserGroup = crmRadiusKeepAliveUserGroup.setStatus('current')
crmRadiusServerNotifGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 288, 2, 2, 8)).setObjects(("CISCO-RADIUS-MIB", "crRadiusServerRTTNormNotif"), ("CISCO-RADIUS-MIB", "crRadiusServerRTTHiNotif"), ("CISCO-RADIUS-MIB", "crRadiusServerRetransNormNotif"), ("CISCO-RADIUS-MIB", "crRadiusServerRetransHiNotif"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    crmRadiusServerNotifGroup = crmRadiusServerNotifGroup.setStatus('current')
crmConfigurationGroupSup1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 288, 2, 2, 9)).setObjects(("CISCO-RADIUS-MIB", "crRadiusServerRTTThldNorm"), ("CISCO-RADIUS-MIB", "crRadiusServerRTTThldHi"), ("CISCO-RADIUS-MIB", "crRadiusServerRetransThldNorm"), ("CISCO-RADIUS-MIB", "crRadiusServerRetransThldHi"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    crmConfigurationGroupSup1 = crmConfigurationGroupSup1.setStatus('current')
crmRadiusServerNotifCntlGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 288, 2, 2, 10)).setObjects(("CISCO-RADIUS-MIB", "crRadiusServerRTTNormNotifEnable"), ("CISCO-RADIUS-MIB", "crRadiusServerRTTHiNotifEnable"), ("CISCO-RADIUS-MIB", "crRadiusServerRetransNormNotifEnable"), ("CISCO-RADIUS-MIB", "crRadiusServerRetransHiNotifEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    crmRadiusServerNotifCntlGroup = crmRadiusServerNotifCntlGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-RADIUS-MIB", crVlanGroupName=crVlanGroupName, crRadiusServerMode=crRadiusServerMode, crRadiusServerRTTNormNotifEnable=crRadiusServerRTTNormNotifEnable, crmKeepAliveGroup=crmKeepAliveGroup, ciscoRadiusMIBConformance=ciscoRadiusMIBConformance, crRadiusServerAuthPort=crRadiusServerAuthPort, crRadiusServerKey=crRadiusServerKey, crRadiusServerRetransThldHi=crRadiusServerRetransThldHi, ciscoRadiusMIBCompliance4=ciscoRadiusMIBCompliance4, crRadiusFramedMtu=crRadiusFramedMtu, ciscoRadiusMIBObjects=ciscoRadiusMIBObjects, crRadiusKeepAliveConfig=crRadiusKeepAliveConfig, crRadiusRetransmits=crRadiusRetransmits, crRadiusServerType=crRadiusServerType, crRadiusKeepAliveUserName=crRadiusKeepAliveUserName, crVlanGroupVlansLow=crVlanGroupVlansLow, crRadiusServerAddr=crRadiusServerAddr, crRadiusServerTableMaxEntries=crRadiusServerTableMaxEntries, crRadiusServerIndex=crRadiusServerIndex, crRadiusAccountingMethod=crRadiusAccountingMethod, crRadiusServerRTTThldHi=crRadiusServerRTTThldHi, crRadiusServerRetransHiNotifEnable=crRadiusServerRetransHiNotifEnable, ciscoRadiusMIBCompliance=ciscoRadiusMIBCompliance, ciscoRadiusMIBGroups=ciscoRadiusMIBGroups, crRadiusServerEntry=crRadiusServerEntry, ciscoRadiusMIB=ciscoRadiusMIB, crRadiusServerRTTThldNorm=crRadiusServerRTTThldNorm, crVlanGroupVlansHigh=crVlanGroupVlansHigh, crRadiusDeadtime=crRadiusDeadtime, crVlanGroupEntry=crVlanGroupEntry, ciscoRadiusMIBNotifications=ciscoRadiusMIBNotifications, crRadiusServerRTTNormNotif=crRadiusServerRTTNormNotif, crRadiusAttributesConfig=crRadiusAttributesConfig, crmAttributesGroup2=crmAttributesGroup2, crRadiusAuthKey=crRadiusAuthKey, CiscoRadiusAuthKey=CiscoRadiusAuthKey, crRadiusServerAddrType=crRadiusServerAddrType, CiscoRadiusRetransPercent=CiscoRadiusRetransPercent, crmRadiusServerNotifGroup=crmRadiusServerNotifGroup, crRadiusServerRowStatus=crRadiusServerRowStatus, crRadiusKeepAliveInterval=crRadiusKeepAliveInterval, crRadiusKeepAliveServerEntry=crRadiusKeepAliveServerEntry, PYSNMP_MODULE_ID=ciscoRadiusMIB, CiscoRadiusRoundTripTimePercent=CiscoRadiusRoundTripTimePercent, crmVlanConfigGroup=crmVlanConfigGroup, crVlanGroupTable=crVlanGroupTable, crVlanGroupRowStatus=crVlanGroupRowStatus, crmConfigurationGroup=crmConfigurationGroup, crmConfigurationGroupSup1=crmConfigurationGroupSup1, crmAutoInitializeConfigGroup=crmAutoInitializeConfigGroup, crRadiusAccountingLogMaxSize=crRadiusAccountingLogMaxSize, crRadiusServerNotifCntl=crRadiusServerNotifCntl, crRadiusServerRetransNormNotifEnable=crRadiusServerRetransNormNotifEnable, ciscoRadiusMIBCompliance2=ciscoRadiusMIBCompliance2, ciscoRadiusMIBCompliance3=ciscoRadiusMIBCompliance3, crmRadiusServerNotifCntlGroup=crmRadiusServerNotifCntlGroup, crRadiusServerAcctPort=crRadiusServerAcctPort, crmAttributesGroup=crmAttributesGroup, ciscoRadiusMIBCompliances=ciscoRadiusMIBCompliances, crRadiusGenericConfig=crRadiusGenericConfig, crRadiusLoginAuthentication=crRadiusLoginAuthentication, crRadiusFramedIpAddrIncluded=crRadiusFramedIpAddrIncluded, crRadiusServerRetransThldNorm=crRadiusServerRetransThldNorm, crRadiusVlanConfigGroup=crRadiusVlanConfigGroup, crRadiusServerRetransHiNotif=crRadiusServerRetransHiNotif, crRadiusPortAutoInitialize=crRadiusPortAutoInitialize, crRadiusKeepAliveServerTable=crRadiusKeepAliveServerTable, crRadiusServerTable=crRadiusServerTable, crRadiusVlanAssignmentEnabled=crRadiusVlanAssignmentEnabled, crRadiusTimeout=crRadiusTimeout, crRadiusServerRTTHiNotifEnable=crRadiusServerRTTHiNotifEnable, crmRadiusKeepAliveUserGroup=crmRadiusKeepAliveUserGroup, crRadiusKeepAliveEnabled=crRadiusKeepAliveEnabled, crRadiusServerRetransNormNotif=crRadiusServerRetransNormNotif, crRadiusKeepAliveServerStatus=crRadiusKeepAliveServerStatus, crRadiusServerConfig=crRadiusServerConfig, crRadiusServerRTTHiNotif=crRadiusServerRTTHiNotif)
