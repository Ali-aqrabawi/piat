#
# PySNMP MIB module CISCO-LWAPP-MOBILITY-MIB (http://snmplabs.com/pysmi)
# ASN.1 source http://mibs.snmplabs.com:80/asn1/CISCO-LWAPP-MOBILITY-MIB
# Produced by pysmi-0.3.4 at Sun Apr 21 23:44:37 2019
# On host aaqrabaw platform Linux version 4.15.0-47-generic by user aaqrabaw
# Using Python version 3.6.5 (default, Apr  1 2018, 05:46:30) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
Bits, Counter64, Counter32, NotificationType, TimeTicks, ModuleIdentity, Integer32, IpAddress, MibIdentifier, Gauge32, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Counter64", "Counter32", "NotificationType", "TimeTicks", "ModuleIdentity", "Integer32", "IpAddress", "MibIdentifier", "Gauge32", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "ObjectIdentity")
DisplayString, TruthValue, TextualConvention, RowStatus, MacAddress = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TruthValue", "TextualConvention", "RowStatus", "MacAddress")
ciscoLwappMobilityMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 576))
ciscoLwappMobilityMIB.setRevisions(('2010-08-23 00:00', '2006-07-19 00:00',))
if mibBuilder.loadTexts: ciscoLwappMobilityMIB.setLastUpdated('201008230000Z')
if mibBuilder.loadTexts: ciscoLwappMobilityMIB.setOrganization('Cisco Systems Inc.')
ciscoLwappMobilityMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 576, 0))
ciscoLwappMobilityMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 576, 1))
ciscoLwappMobilityMIBConform = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 576, 2))
cLMobilityAnchorTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 576, 1, 1), )
if mibBuilder.loadTexts: cLMobilityAnchorTable.setStatus('current')
cLMobilityAnchorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 576, 1, 1, 1), ).setIndexNames((0, "CISCO-LWAPP-MOBILITY-MIB", "cLMobilityAnchorWlanSsid"), (0, "CISCO-LWAPP-MOBILITY-MIB", "cLMobilityAnchorSwitchAddressType"), (0, "CISCO-LWAPP-MOBILITY-MIB", "cLMobilityAnchorSwitchAddress"))
if mibBuilder.loadTexts: cLMobilityAnchorEntry.setStatus('current')
cLMobilityAnchorWlanSsid = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 576, 1, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: cLMobilityAnchorWlanSsid.setStatus('current')
cLMobilityAnchorSwitchAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 576, 1, 1, 1, 2), InetAddressType())
if mibBuilder.loadTexts: cLMobilityAnchorSwitchAddressType.setStatus('current')
cLMobilityAnchorSwitchAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 576, 1, 1, 1, 3), InetAddress())
if mibBuilder.loadTexts: cLMobilityAnchorSwitchAddress.setStatus('current')
cLMobilityAnchorStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 576, 1, 1, 1, 4), Bits().clone(namedValues=NamedValues(("controlpath", 0), ("datapath", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLMobilityAnchorStatus.setStatus('current')
cLMobilityAnchorRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 576, 1, 1, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLMobilityAnchorRowStatus.setStatus('current')
cLMobilityAnchorGlobalDot11Config = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 576, 1, 2))
cLMobilityAnchorGroupKeepAliveNumber = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 576, 1, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(3, 20)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLMobilityAnchorGroupKeepAliveNumber.setStatus('current')
cLMobilityAnchorGroupKeepAliveInterval = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 576, 1, 2, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 30)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLMobilityAnchorGroupKeepAliveInterval.setStatus('current')
cLMobilityAnchorSmtStatus = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 576, 1, 2, 3), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLMobilityAnchorSmtStatus.setStatus('current')
cLMobilityAnchorCurrentSmt = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 576, 1, 2, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLMobilityAnchorCurrentSmt.setStatus('current')
cLMobilityMulticastGroupConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 576, 1, 4))
cLMobilityMulticastMessagingEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 576, 1, 4, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLMobilityMulticastMessagingEnable.setStatus('current')
cLMobilityMulticastGroupTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 576, 1, 4, 2), )
if mibBuilder.loadTexts: cLMobilityMulticastGroupTable.setStatus('current')
cLMobilityMulticastGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 576, 1, 4, 2, 1), ).setIndexNames((0, "CISCO-LWAPP-MOBILITY-MIB", "cLMobilityGroupMacAddress"))
if mibBuilder.loadTexts: cLMobilityMulticastGroupEntry.setStatus('current')
cLMobilityGroupMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 576, 1, 4, 2, 1, 1), MacAddress())
if mibBuilder.loadTexts: cLMobilityGroupMacAddress.setStatus('current')
cLMobilityMulticastGroupIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 576, 1, 4, 2, 1, 2), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLMobilityMulticastGroupIPAddress.setStatus('current')
cLMobilityMulticastGroupIPAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 576, 1, 4, 2, 1, 3), InetAddressType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cLMobilityMulticastGroupIPAddressType.setStatus('current')
cLMobilityGroupMembersTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 576, 1, 5), )
if mibBuilder.loadTexts: cLMobilityGroupMembersTable.setStatus('current')
cLMobilityGroupMembersEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 576, 1, 5, 1), ).setIndexNames((0, "CISCO-LWAPP-MOBILITY-MIB", "cLMobilityGroupMacAddress"))
if mibBuilder.loadTexts: cLMobilityGroupMembersEntry.setStatus('current')
cLMobilityGroupMemberIPAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 576, 1, 5, 1, 1), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLMobilityGroupMemberIPAddressType.setStatus('current')
cLMobilityGroupMemberIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 576, 1, 5, 1, 2), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLMobilityGroupMemberIPAddress.setStatus('current')
cLMobilityGroupMemberControlPathStatusUp = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 576, 1, 5, 1, 3), TruthValue().clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLMobilityGroupMemberControlPathStatusUp.setStatus('current')
cLMobilityGroupMemberDataPathStatusUp = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 576, 1, 5, 1, 4), TruthValue().clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: cLMobilityGroupMemberDataPathStatusUp.setStatus('current')
cLMobilityForeignWlcMapTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 576, 1, 6), )
if mibBuilder.loadTexts: cLMobilityForeignWlcMapTable.setStatus('current')
cLMobilityForeignWlcMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 576, 1, 6, 1), ).setIndexNames((0, "CISCO-LWAPP-MOBILITY-MIB", "cLMobilityAnchorWlanSsid"), (0, "CISCO-LWAPP-MOBILITY-MIB", "cLMobilityForeignWlcMapMacAddress"))
if mibBuilder.loadTexts: cLMobilityForeignWlcMapEntry.setStatus('current')
cLMobilityForeignWlcMapMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 576, 1, 6, 1, 1), MacAddress())
if mibBuilder.loadTexts: cLMobilityForeignWlcMapMacAddress.setStatus('current')
cLMobilityForeignWlcMapIf = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 576, 1, 6, 1, 2), SnmpAdminString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLMobilityForeignWlcMapIf.setStatus('current')
cLMobilityForeignWlcMapRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 576, 1, 6, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cLMobilityForeignWlcMapRowStatus.setStatus('current')
cLMobilityTrapVariables = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 576, 1, 3))
cLMobilityAnchorWlanId = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 576, 1, 3, 1), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cLMobilityAnchorWlanId.setStatus('current')
cLMobilityAnchorAddressType = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 576, 1, 3, 2), InetAddressType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cLMobilityAnchorAddressType.setStatus('current')
cLMobilityAnchorAddress = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 576, 1, 3, 3), InetAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cLMobilityAnchorAddress.setStatus('current')
ciscoLwappMobilityAnchorControlPathDown = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 576, 0, 1)).setObjects(("CISCO-LWAPP-MOBILITY-MIB", "cLMobilityAnchorAddressType"), ("CISCO-LWAPP-MOBILITY-MIB", "cLMobilityAnchorAddress"))
if mibBuilder.loadTexts: ciscoLwappMobilityAnchorControlPathDown.setStatus('current')
ciscoLwappMobilityAnchorControlPathUp = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 576, 0, 2)).setObjects(("CISCO-LWAPP-MOBILITY-MIB", "cLMobilityAnchorAddressType"), ("CISCO-LWAPP-MOBILITY-MIB", "cLMobilityAnchorAddress"))
if mibBuilder.loadTexts: ciscoLwappMobilityAnchorControlPathUp.setStatus('current')
ciscoLwappMobilityAnchorDataPathDown = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 576, 0, 3)).setObjects(("CISCO-LWAPP-MOBILITY-MIB", "cLMobilityAnchorAddressType"), ("CISCO-LWAPP-MOBILITY-MIB", "cLMobilityAnchorAddress"))
if mibBuilder.loadTexts: ciscoLwappMobilityAnchorDataPathDown.setStatus('current')
ciscoLwappMobilityAnchorDataPathUp = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 576, 0, 4)).setObjects(("CISCO-LWAPP-MOBILITY-MIB", "cLMobilityAnchorAddressType"), ("CISCO-LWAPP-MOBILITY-MIB", "cLMobilityAnchorAddress"))
if mibBuilder.loadTexts: ciscoLwappMobilityAnchorDataPathUp.setStatus('current')
ciscoLwappMobilityAllAnchorsOnWlanDown = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 576, 0, 5)).setObjects(("CISCO-LWAPP-MOBILITY-MIB", "cLMobilityAnchorWlanId"))
if mibBuilder.loadTexts: ciscoLwappMobilityAllAnchorsOnWlanDown.setStatus('current')
ciscoLwappMobilityOneAnchorOnWlanUp = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 576, 0, 6)).setObjects(("CISCO-LWAPP-MOBILITY-MIB", "cLMobilityAnchorWlanId"))
if mibBuilder.loadTexts: ciscoLwappMobilityOneAnchorOnWlanUp.setStatus('current')
ciscoLwappMobilityMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 576, 2, 1))
ciscoLwappMobilityMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 576, 2, 2))
ciscoLwappMobilityMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 576, 2, 1, 1)).setObjects(("CISCO-LWAPP-MOBILITY-MIB", "cLNplus1RedundancyRev01ConfigGroup"), ("CISCO-LWAPP-MOBILITY-MIB", "cLNplus1RedundancyRev01StatusGroup"), ("CISCO-LWAPP-MOBILITY-MIB", "cLNplus1RedundancyRev01NotifsGroup"), ("CISCO-LWAPP-MOBILITY-MIB", "cLSymmetricTunnelingRev01ConfigGroup"), ("CISCO-LWAPP-MOBILITY-MIB", "cLSymmetricTunnelingRev01StatusGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoLwappMobilityMIBCompliance = ciscoLwappMobilityMIBCompliance.setStatus('deprecated')
ciscoLwappMobilityMIBComplianceRev01 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 576, 2, 1, 2)).setObjects(("CISCO-LWAPP-MOBILITY-MIB", "cLNplus1RedundancyRev01ConfigGroup"), ("CISCO-LWAPP-MOBILITY-MIB", "cLNplus1RedundancyRev01StatusGroup"), ("CISCO-LWAPP-MOBILITY-MIB", "cLNplus1RedundancyRev01NotifsGroup"), ("CISCO-LWAPP-MOBILITY-MIB", "cLSymmetricTunnelingRev01ConfigGroup"), ("CISCO-LWAPP-MOBILITY-MIB", "cLSymmetricTunnelingRev01StatusGroup"), ("CISCO-LWAPP-MOBILITY-MIB", "cLMobilityGroupRev01ConfigGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoLwappMobilityMIBComplianceRev01 = ciscoLwappMobilityMIBComplianceRev01.setStatus('current')
cLNplus1RedundancyRev01ConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 576, 2, 2, 1)).setObjects(("CISCO-LWAPP-MOBILITY-MIB", "cLMobilityAnchorGroupKeepAliveNumber"), ("CISCO-LWAPP-MOBILITY-MIB", "cLMobilityAnchorGroupKeepAliveInterval"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cLNplus1RedundancyRev01ConfigGroup = cLNplus1RedundancyRev01ConfigGroup.setStatus('current')
cLNplus1RedundancyRev01StatusGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 576, 2, 2, 2)).setObjects(("CISCO-LWAPP-MOBILITY-MIB", "cLMobilityAnchorStatus"), ("CISCO-LWAPP-MOBILITY-MIB", "cLMobilityAnchorRowStatus"), ("CISCO-LWAPP-MOBILITY-MIB", "cLMobilityAnchorWlanId"), ("CISCO-LWAPP-MOBILITY-MIB", "cLMobilityAnchorAddressType"), ("CISCO-LWAPP-MOBILITY-MIB", "cLMobilityAnchorAddress"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cLNplus1RedundancyRev01StatusGroup = cLNplus1RedundancyRev01StatusGroup.setStatus('current')
cLNplus1RedundancyRev01NotifsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 576, 2, 2, 3)).setObjects(("CISCO-LWAPP-MOBILITY-MIB", "ciscoLwappMobilityAnchorControlPathDown"), ("CISCO-LWAPP-MOBILITY-MIB", "ciscoLwappMobilityAnchorControlPathUp"), ("CISCO-LWAPP-MOBILITY-MIB", "ciscoLwappMobilityAnchorDataPathDown"), ("CISCO-LWAPP-MOBILITY-MIB", "ciscoLwappMobilityAnchorDataPathUp"), ("CISCO-LWAPP-MOBILITY-MIB", "ciscoLwappMobilityAllAnchorsOnWlanDown"), ("CISCO-LWAPP-MOBILITY-MIB", "ciscoLwappMobilityOneAnchorOnWlanUp"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cLNplus1RedundancyRev01NotifsGroup = cLNplus1RedundancyRev01NotifsGroup.setStatus('current')
cLSymmetricTunnelingRev01ConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 576, 2, 2, 4)).setObjects(("CISCO-LWAPP-MOBILITY-MIB", "cLMobilityAnchorSmtStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cLSymmetricTunnelingRev01ConfigGroup = cLSymmetricTunnelingRev01ConfigGroup.setStatus('current')
cLSymmetricTunnelingRev01StatusGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 576, 2, 2, 5)).setObjects(("CISCO-LWAPP-MOBILITY-MIB", "cLMobilityAnchorCurrentSmt"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cLSymmetricTunnelingRev01StatusGroup = cLSymmetricTunnelingRev01StatusGroup.setStatus('current')
cLMobilityGroupRev01ConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 576, 2, 2, 6)).setObjects(("CISCO-LWAPP-MOBILITY-MIB", "cLMobilityMulticastMessagingEnable"), ("CISCO-LWAPP-MOBILITY-MIB", "cLMobilityMulticastGroupIPAddress"), ("CISCO-LWAPP-MOBILITY-MIB", "cLMobilityMulticastGroupIPAddressType"), ("CISCO-LWAPP-MOBILITY-MIB", "cLMobilityGroupMemberIPAddressType"), ("CISCO-LWAPP-MOBILITY-MIB", "cLMobilityGroupMemberIPAddress"), ("CISCO-LWAPP-MOBILITY-MIB", "cLMobilityGroupMemberControlPathStatusUp"), ("CISCO-LWAPP-MOBILITY-MIB", "cLMobilityGroupMemberDataPathStatusUp"), ("CISCO-LWAPP-MOBILITY-MIB", "cLMobilityForeignWlcMapIf"), ("CISCO-LWAPP-MOBILITY-MIB", "cLMobilityForeignWlcMapRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cLMobilityGroupRev01ConfigGroup = cLMobilityGroupRev01ConfigGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-LWAPP-MOBILITY-MIB", cLMobilityMulticastGroupIPAddressType=cLMobilityMulticastGroupIPAddressType, ciscoLwappMobilityAnchorControlPathDown=ciscoLwappMobilityAnchorControlPathDown, cLMobilityAnchorTable=cLMobilityAnchorTable, cLMobilityForeignWlcMapTable=cLMobilityForeignWlcMapTable, PYSNMP_MODULE_ID=ciscoLwappMobilityMIB, cLMobilityAnchorStatus=cLMobilityAnchorStatus, cLMobilityAnchorCurrentSmt=cLMobilityAnchorCurrentSmt, ciscoLwappMobilityMIBComplianceRev01=ciscoLwappMobilityMIBComplianceRev01, cLMobilityMulticastGroupConfig=cLMobilityMulticastGroupConfig, ciscoLwappMobilityAnchorDataPathUp=ciscoLwappMobilityAnchorDataPathUp, cLMobilityGroupMembersEntry=cLMobilityGroupMembersEntry, cLMobilityAnchorAddressType=cLMobilityAnchorAddressType, ciscoLwappMobilityOneAnchorOnWlanUp=ciscoLwappMobilityOneAnchorOnWlanUp, cLMobilityForeignWlcMapRowStatus=cLMobilityForeignWlcMapRowStatus, ciscoLwappMobilityMIB=ciscoLwappMobilityMIB, cLMobilityGroupMemberIPAddress=cLMobilityGroupMemberIPAddress, cLMobilityMulticastGroupTable=cLMobilityMulticastGroupTable, cLMobilityForeignWlcMapEntry=cLMobilityForeignWlcMapEntry, ciscoLwappMobilityAnchorDataPathDown=ciscoLwappMobilityAnchorDataPathDown, cLMobilityAnchorRowStatus=cLMobilityAnchorRowStatus, cLMobilityGroupMembersTable=cLMobilityGroupMembersTable, cLMobilityAnchorWlanId=cLMobilityAnchorWlanId, cLMobilityMulticastMessagingEnable=cLMobilityMulticastMessagingEnable, cLMobilityMulticastGroupEntry=cLMobilityMulticastGroupEntry, cLNplus1RedundancyRev01NotifsGroup=cLNplus1RedundancyRev01NotifsGroup, cLMobilityForeignWlcMapIf=cLMobilityForeignWlcMapIf, cLMobilityAnchorSmtStatus=cLMobilityAnchorSmtStatus, cLMobilityAnchorAddress=cLMobilityAnchorAddress, cLMobilityAnchorEntry=cLMobilityAnchorEntry, cLMobilityGroupMemberDataPathStatusUp=cLMobilityGroupMemberDataPathStatusUp, cLMobilityAnchorSwitchAddressType=cLMobilityAnchorSwitchAddressType, cLNplus1RedundancyRev01ConfigGroup=cLNplus1RedundancyRev01ConfigGroup, cLMobilityAnchorGlobalDot11Config=cLMobilityAnchorGlobalDot11Config, cLMobilityGroupMemberControlPathStatusUp=cLMobilityGroupMemberControlPathStatusUp, cLNplus1RedundancyRev01StatusGroup=cLNplus1RedundancyRev01StatusGroup, cLMobilityGroupRev01ConfigGroup=cLMobilityGroupRev01ConfigGroup, cLMobilityTrapVariables=cLMobilityTrapVariables, cLMobilityAnchorGroupKeepAliveInterval=cLMobilityAnchorGroupKeepAliveInterval, cLMobilityAnchorWlanSsid=cLMobilityAnchorWlanSsid, ciscoLwappMobilityMIBNotifs=ciscoLwappMobilityMIBNotifs, ciscoLwappMobilityMIBGroups=ciscoLwappMobilityMIBGroups, cLMobilityGroupMemberIPAddressType=cLMobilityGroupMemberIPAddressType, cLMobilityForeignWlcMapMacAddress=cLMobilityForeignWlcMapMacAddress, ciscoLwappMobilityAllAnchorsOnWlanDown=ciscoLwappMobilityAllAnchorsOnWlanDown, ciscoLwappMobilityAnchorControlPathUp=ciscoLwappMobilityAnchorControlPathUp, cLMobilityGroupMacAddress=cLMobilityGroupMacAddress, cLSymmetricTunnelingRev01ConfigGroup=cLSymmetricTunnelingRev01ConfigGroup, cLMobilityAnchorGroupKeepAliveNumber=cLMobilityAnchorGroupKeepAliveNumber, ciscoLwappMobilityMIBCompliances=ciscoLwappMobilityMIBCompliances, ciscoLwappMobilityMIBCompliance=ciscoLwappMobilityMIBCompliance, cLSymmetricTunnelingRev01StatusGroup=cLSymmetricTunnelingRev01StatusGroup, ciscoLwappMobilityMIBObjects=ciscoLwappMobilityMIBObjects, cLMobilityAnchorSwitchAddress=cLMobilityAnchorSwitchAddress, ciscoLwappMobilityMIBConform=ciscoLwappMobilityMIBConform, cLMobilityMulticastGroupIPAddress=cLMobilityMulticastGroupIPAddress)
