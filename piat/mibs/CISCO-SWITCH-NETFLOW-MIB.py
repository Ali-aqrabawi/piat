#
# PySNMP MIB module CISCO-SWITCH-NETFLOW-MIB (http://snmplabs.com/pysmi)
# ASN.1 source http://mibs.snmplabs.com:80/asn1/CISCO-SWITCH-NETFLOW-MIB
# Produced by pysmi-0.3.4 at Sun Apr 21 23:46:32 2019
# On host aaqrabaw platform Linux version 4.15.0-47-generic by user aaqrabaw
# Using Python version 3.6.5 (default, Apr  1 2018, 05:46:30) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion")
Percent, = mibBuilder.importSymbols("CISCO-QOS-PIB-MIB", "Percent")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
entPhysicalDescr, entPhysicalIndex = mibBuilder.importSymbols("ENTITY-MIB", "entPhysicalDescr", "entPhysicalIndex")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, Counter64, Gauge32, Unsigned32, Bits, TimeTicks, ModuleIdentity, Integer32, MibIdentifier, NotificationType, iso, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "Counter64", "Gauge32", "Unsigned32", "Bits", "TimeTicks", "ModuleIdentity", "Integer32", "MibIdentifier", "NotificationType", "iso", "Counter32")
TextualConvention, TruthValue, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "TruthValue", "DisplayString")
ciscoSwitchNetflowMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 737))
ciscoSwitchNetflowMIB.setRevisions(('2010-05-26 00:00',))
if mibBuilder.loadTexts: ciscoSwitchNetflowMIB.setLastUpdated('201005260000Z')
if mibBuilder.loadTexts: ciscoSwitchNetflowMIB.setOrganization('Cisco Systems, Inc.')
ciscoSwitchNetflowMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 737, 0))
ciscoSwitchNetflowMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 737, 1))
ciscoSwitchNetflowMIBConform = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 737, 2))
csnAccounting = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 737, 1, 1))
csnAccGlobal = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 737, 1, 1, 1))
csnAccNotifControl = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 737, 1, 1, 2))
cshAccUsageThresh = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 737, 1, 1, 3))
csnAccUtilization = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 737, 1, 1, 4))
csnAccNetflowTableSize = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 737, 1, 1, 5))
csnAccSampler = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 737, 1, 1, 6))
class CsnNetflowDirectionTypes(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("none", 1), ("ingress", 2), ("egress", 3), ("ingressAndEgress", 4))

csnNetflowDirectionType = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 737, 1, 1, 1, 1), CsnNetflowDirectionTypes()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: csnNetflowDirectionType.setStatus('current')
csnUsageThreshExceedNotifEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 737, 1, 1, 2, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: csnUsageThreshExceedNotifEnable.setStatus('current')
csnUsageThreshTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 737, 1, 1, 3, 1), )
if mibBuilder.loadTexts: csnUsageThreshTable.setStatus('current')
csnUsageThreshEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 737, 1, 1, 3, 1, 1), ).setIndexNames((0, "CISCO-SWITCH-NETFLOW-MIB", "csnUsageDirection"))
if mibBuilder.loadTexts: csnUsageThreshEntry.setStatus('current')
csnUsageDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 737, 1, 1, 3, 1, 1, 1), CsnNetflowDirectionTypes())
if mibBuilder.loadTexts: csnUsageDirection.setStatus('current')
csnUsageThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 737, 1, 1, 3, 1, 1, 2), Percent()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: csnUsageThreshold.setStatus('current')
csnUsageInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 737, 1, 1, 3, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: csnUsageInterval.setStatus('current')
csnUtilizationTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 737, 1, 1, 4, 1), )
if mibBuilder.loadTexts: csnUtilizationTable.setStatus('current')
csnUtilizationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 737, 1, 1, 4, 1, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"), (0, "CISCO-SWITCH-NETFLOW-MIB", "csnUsageDirection"))
if mibBuilder.loadTexts: csnUtilizationEntry.setStatus('current')
csnUtilization = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 737, 1, 1, 4, 1, 1, 1), Percent()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csnUtilization.setStatus('current')
csnNetflowTableSizeTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 737, 1, 1, 5, 1), )
if mibBuilder.loadTexts: csnNetflowTableSizeTable.setStatus('current')
csnNetflowTableSizeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 737, 1, 1, 5, 1, 1), ).setIndexNames((0, "CISCO-SWITCH-NETFLOW-MIB", "csnUsageDirection"))
if mibBuilder.loadTexts: csnNetflowTableSizeEntry.setStatus('current')
csnNetflowTableTotalEntries = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 737, 1, 1, 5, 1, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csnNetflowTableTotalEntries.setStatus('current')
csnSamplerTotal = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 737, 1, 1, 6, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csnSamplerTotal.setStatus('current')
csnSamplerAvailable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 737, 1, 1, 6, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csnSamplerAvailable.setStatus('current')
csnUsageThreshExceededNotif = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 737, 0, 1)).setObjects(("ENTITY-MIB", "entPhysicalDescr"), ("CISCO-SWITCH-NETFLOW-MIB", "csnUtilization"), ("CISCO-SWITCH-NETFLOW-MIB", "csnUsageThreshold"), ("CISCO-SWITCH-NETFLOW-MIB", "csnUsageInterval"))
if mibBuilder.loadTexts: csnUsageThreshExceededNotif.setStatus('current')
csnMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 737, 2, 1))
csnMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 737, 2, 2))
csnMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 737, 2, 1, 1)).setObjects(("CISCO-SWITCH-NETFLOW-MIB", "csnGlobalGroup"), ("CISCO-SWITCH-NETFLOW-MIB", "csnUsageThreshNotifControlGroup"), ("CISCO-SWITCH-NETFLOW-MIB", "csnUsageThreshGroup"), ("CISCO-SWITCH-NETFLOW-MIB", "csnUtilizationGroup"), ("CISCO-SWITCH-NETFLOW-MIB", "csnUsageThreshNotifGroup"), ("CISCO-SWITCH-NETFLOW-MIB", "csnNetflowTableSizeGroup"), ("CISCO-SWITCH-NETFLOW-MIB", "csnSamplerGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    csnMIBCompliance = csnMIBCompliance.setStatus('current')
csnGlobalGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 737, 2, 2, 1)).setObjects(("CISCO-SWITCH-NETFLOW-MIB", "csnNetflowDirectionType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    csnGlobalGroup = csnGlobalGroup.setStatus('current')
csnUsageThreshNotifControlGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 737, 2, 2, 2)).setObjects(("CISCO-SWITCH-NETFLOW-MIB", "csnUsageThreshExceedNotifEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    csnUsageThreshNotifControlGroup = csnUsageThreshNotifControlGroup.setStatus('current')
csnUsageThreshGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 737, 2, 2, 3)).setObjects(("CISCO-SWITCH-NETFLOW-MIB", "csnUsageThreshold"), ("CISCO-SWITCH-NETFLOW-MIB", "csnUsageInterval"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    csnUsageThreshGroup = csnUsageThreshGroup.setStatus('current')
csnUtilizationGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 737, 2, 2, 4)).setObjects(("CISCO-SWITCH-NETFLOW-MIB", "csnUtilization"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    csnUtilizationGroup = csnUtilizationGroup.setStatus('current')
csnUsageThreshNotifGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 737, 2, 2, 5)).setObjects(("CISCO-SWITCH-NETFLOW-MIB", "csnUsageThreshExceededNotif"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    csnUsageThreshNotifGroup = csnUsageThreshNotifGroup.setStatus('current')
csnNetflowTableSizeGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 737, 2, 2, 6)).setObjects(("CISCO-SWITCH-NETFLOW-MIB", "csnNetflowTableTotalEntries"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    csnNetflowTableSizeGroup = csnNetflowTableSizeGroup.setStatus('current')
csnSamplerGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 737, 2, 2, 7)).setObjects(("CISCO-SWITCH-NETFLOW-MIB", "csnSamplerTotal"), ("CISCO-SWITCH-NETFLOW-MIB", "csnSamplerAvailable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    csnSamplerGroup = csnSamplerGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-SWITCH-NETFLOW-MIB", csnUsageThreshGroup=csnUsageThreshGroup, csnNetflowDirectionType=csnNetflowDirectionType, ciscoSwitchNetflowMIBObjects=ciscoSwitchNetflowMIBObjects, PYSNMP_MODULE_ID=ciscoSwitchNetflowMIB, ciscoSwitchNetflowMIB=ciscoSwitchNetflowMIB, csnUtilizationTable=csnUtilizationTable, csnNetflowTableTotalEntries=csnNetflowTableTotalEntries, csnUsageThreshNotifGroup=csnUsageThreshNotifGroup, csnUtilizationEntry=csnUtilizationEntry, csnMIBCompliance=csnMIBCompliance, csnUsageThreshold=csnUsageThreshold, csnNetflowTableSizeGroup=csnNetflowTableSizeGroup, csnAccUtilization=csnAccUtilization, csnUtilization=csnUtilization, csnAccNotifControl=csnAccNotifControl, csnSamplerAvailable=csnSamplerAvailable, csnAccSampler=csnAccSampler, csnAccNetflowTableSize=csnAccNetflowTableSize, csnGlobalGroup=csnGlobalGroup, csnMIBCompliances=csnMIBCompliances, csnUsageThreshTable=csnUsageThreshTable, csnUsageDirection=csnUsageDirection, csnUtilizationGroup=csnUtilizationGroup, csnMIBGroups=csnMIBGroups, csnUsageInterval=csnUsageInterval, CsnNetflowDirectionTypes=CsnNetflowDirectionTypes, csnNetflowTableSizeEntry=csnNetflowTableSizeEntry, csnSamplerTotal=csnSamplerTotal, csnUsageThreshNotifControlGroup=csnUsageThreshNotifControlGroup, csnSamplerGroup=csnSamplerGroup, csnAccounting=csnAccounting, csnUsageThreshExceededNotif=csnUsageThreshExceededNotif, csnUsageThreshExceedNotifEnable=csnUsageThreshExceedNotifEnable, ciscoSwitchNetflowMIBNotifs=ciscoSwitchNetflowMIBNotifs, ciscoSwitchNetflowMIBConform=ciscoSwitchNetflowMIBConform, csnAccGlobal=csnAccGlobal, cshAccUsageThresh=cshAccUsageThresh, csnUsageThreshEntry=csnUsageThreshEntry, csnNetflowTableSizeTable=csnNetflowTableSizeTable)
