#
# PySNMP MIB module CISCO-ITP-MLR-MIB (http://snmplabs.com/pysmi)
# ASN.1 source http://mibs.snmplabs.com:80/asn1/CISCO-ITP-MLR-MIB
# Produced by pysmi-0.3.4 at Sun Apr 21 23:26:04 2019
# On host aaqrabaw platform Linux version 4.15.0-47-generic by user aaqrabaw
# Using Python version 3.6.5 (default, Apr  1 2018, 05:46:30) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection")
CgsccpGttGlobalTitleInd, CgsccpGttTransType = mibBuilder.importSymbols("CISCO-ITP-GSCCP-MIB", "CgsccpGttGlobalTitleInd", "CgsccpGttTransType")
cgspInstNetwork, cgspEventSequenceNumber, cgspCLLICode = mibBuilder.importSymbols("CISCO-ITP-GSP-MIB", "cgspInstNetwork", "cgspEventSequenceNumber", "cgspCLLICode")
CItpTcNumberingPlan, CItpTcServiceIndicator, CItpTcURL, CItpTcSubSystemNumber, CItpTcGtaLongDisplay, CItpTcNAI, CItpTcNetworkName, CItpTcPointCodeMask, CItpTcTableLoadStatus, CItpTcPointCode = mibBuilder.importSymbols("CISCO-ITP-TC-MIB", "CItpTcNumberingPlan", "CItpTcServiceIndicator", "CItpTcURL", "CItpTcSubSystemNumber", "CItpTcGtaLongDisplay", "CItpTcNAI", "CItpTcNetworkName", "CItpTcPointCodeMask", "CItpTcTableLoadStatus", "CItpTcPointCode")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
Counter64, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, Counter32, ModuleIdentity, Integer32, TimeTicks, MibIdentifier, IpAddress, iso, Bits, Gauge32, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "Counter32", "ModuleIdentity", "Integer32", "TimeTicks", "MibIdentifier", "IpAddress", "iso", "Bits", "Gauge32", "NotificationType")
TruthValue, DisplayString, TimeStamp, RowStatus, DateAndTime, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "DisplayString", "TimeStamp", "RowStatus", "DateAndTime", "TextualConvention")
ciscoMlrMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 396))
ciscoMlrMIB.setRevisions(('2004-09-22 00:00', '2004-04-14 00:00', '2004-03-23 00:00',))
if mibBuilder.loadTexts: ciscoMlrMIB.setLastUpdated('200409220000Z')
if mibBuilder.loadTexts: ciscoMlrMIB.setOrganization('Cisco Systems, Inc.')
ciscoMlrMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 396, 0))
ciscoMlrMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 396, 1))
ciscoMlrMIBConform = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 396, 2))
class CmlrAddressDigits(TextualConvention, OctetString):
    reference = 'GSM 04.08 Table 10.5.118,ANSI T1.114.5 Figure 8 and ETSI TS 123 038 V5.0.0 (2002-03)'
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 32)

class CmlrAddressType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("bch", 1), ("gsmDa", 2))

class CmlrId(TextualConvention, Unsigned32):
    status = 'current'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(0, 65535)

class CmlrName(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 20)

class CmlrResultOctet(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ConstraintsUnion(ValueSizeConstraint(0, 64), ValueSizeConstraint(255, 255), )
class CmlrResultParameters(TextualConvention, Bits):
    status = 'current'
    namedValues = NamedValues(("network", 0), ("octet", 1), ("tranType", 2), ("gti", 3), ("np", 4), ("nai", 5), ("pc", 6), ("ssn", 7))

class CmlrResultType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))
    namedValues = NamedValues(("none", 1), ("asname", 2), ("group", 3), ("gt", 4), ("pc", 5), ("pcSsn", 6), ("block", 7), ("continue", 8), ("address", 9), ("ruleset", 10))

class CmlrRuleProtocol(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("none", 1), ("gsmMap", 2), ("ansi41", 3))

class CmlrRuleSetName(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 20)

class CmlrMinimumDigits(TextualConvention, Unsigned32):
    status = 'current'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(1, 20)

class CmlrMaximumDigits(TextualConvention, Unsigned32):
    status = 'current'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(1, 20)

cmlrScalars = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 0))
cmlrTableLoadNotifEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 0, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmlrTableLoadNotifEnabled.setStatus('current')
cmlrInstTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 1), )
if mibBuilder.loadTexts: cmlrInstTable.setStatus('current')
cmlrInstTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 1, 1), ).setIndexNames((0, "CISCO-ITP-GSP-MIB", "cgspInstNetwork"))
if mibBuilder.loadTexts: cmlrInstTableEntry.setStatus('current')
cmlrInstLastChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 1, 1, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmlrInstLastChanged.setStatus('current')
cmlrInstLastLoadTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 1, 1, 2), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmlrInstLastLoadTime.setStatus('current')
cmlrInstLoadStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 1, 1, 3), CItpTcTableLoadStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmlrInstLoadStatus.setStatus('current')
cmlrInstLastURL = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 1, 1, 4), CItpTcURL()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmlrInstLastURL.setStatus('current')
cmlrInstRoutedCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 1, 1, 5), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmlrInstRoutedCounts.setStatus('current')
cmlrInstAbortCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 1, 1, 6), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmlrInstAbortCounts.setStatus('current')
cmlrInstContinueCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 1, 1, 7), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmlrInstContinueCounts.setStatus('current')
cmlrInstSmsMoCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 1, 1, 8), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmlrInstSmsMoCounts.setStatus('current')
cmlrInstSmsMtCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 1, 1, 9), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmlrInstSmsMtCounts.setStatus('current')
cmlrInstSriSmCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 1, 1, 10), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmlrInstSriSmCounts.setStatus('current')
cmlrInstSmdPpCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 1, 1, 11), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmlrInstSmdPpCounts.setStatus('current')
cmlrInstAlertScCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 1, 1, 12), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmlrInstAlertScCounts.setStatus('current')
cmlrInstSmsRequestCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 1, 1, 13), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmlrInstSmsRequestCounts.setStatus('current')
cmlrInstSmsNotifCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 1, 1, 14), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmlrInstSmsNotifCounts.setStatus('current')
cmlrInstUnsupSCCPmsgTypeCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 1, 1, 15), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmlrInstUnsupSCCPmsgTypeCounts.setStatus('current')
cmlrInstUnsupSegSCCPmsgCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 1, 1, 16), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmlrInstUnsupSegSCCPmsgCounts.setStatus('current')
cmlrInstUnsupportedMsgCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 1, 1, 17), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmlrInstUnsupportedMsgCounts.setStatus('current')
cmlrInstParsingErrorCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 1, 1, 18), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmlrInstParsingErrorCounts.setStatus('current')
cmlrInstNoResultCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 1, 1, 19), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmlrInstNoResultCounts.setStatus('current')
cmlrInstResultContinueCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 1, 1, 20), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmlrInstResultContinueCounts.setStatus('current')
cmlrInstNoServerDiscardCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 1, 1, 21), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmlrInstNoServerDiscardCounts.setStatus('current')
cmlrInstResultGttCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 1, 1, 22), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmlrInstResultGttCounts.setStatus('current')
cmlrInstUnparsedCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 1, 1, 23), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmlrInstUnparsedCounts.setStatus('current')
cmlrInstResultBlockCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 1, 1, 24), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmlrInstResultBlockCounts.setStatus('current')
cmlrInstGTImismatchCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 1, 1, 25), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmlrInstGTImismatchCounts.setStatus('current')
cmlrInstAddrConvFailureCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 1, 1, 26), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmlrInstAddrConvFailureCounts.setStatus('current')
cmlrInstDestUnavailableCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 1, 1, 27), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmlrInstDestUnavailableCounts.setStatus('current')
cmlrInstFailedTrigMatchCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 1, 1, 28), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmlrInstFailedTrigMatchCounts.setStatus('current')
cmlrInstDiscontinuityTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 1, 1, 29), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmlrInstDiscontinuityTime.setStatus('current')
cmlrInstNoServerContinueCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 1, 1, 30), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmlrInstNoServerContinueCounts.setStatus('current')
cmlrInstResultAsCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 1, 1, 31), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmlrInstResultAsCounts.setStatus('current')
cmlrInstResultPcCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 1, 1, 32), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmlrInstResultPcCounts.setStatus('current')
cmlrInstResultPcSsnCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 1, 1, 33), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: cmlrInstResultPcSsnCounts.setStatus('current')
cmlrTriggerTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 2), )
if mibBuilder.loadTexts: cmlrTriggerTable.setStatus('current')
cmlrTriggerTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 2, 1), ).setIndexNames((0, "CISCO-ITP-GSP-MIB", "cgspInstNetwork"), (0, "CISCO-ITP-MLR-MIB", "cmlrTableName"), (0, "CISCO-ITP-MLR-MIB", "cmlrTriggerNumber"))
if mibBuilder.loadTexts: cmlrTriggerTableEntry.setStatus('current')
cmlrTableName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 2, 1, 1), CmlrName())
if mibBuilder.loadTexts: cmlrTableName.setStatus('current')
cmlrTriggerNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 2, 1, 2), CmlrId())
if mibBuilder.loadTexts: cmlrTriggerNumber.setStatus('current')
cmlrTriggerParameters = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 2, 1, 3), Bits().clone(namedValues=NamedValues(("block", 0), ("continue", 1), ("matchAll", 2), ("cdpa", 3), ("cgpa", 4), ("pc", 5), ("gt", 6), ("tt", 7), ("gti", 8), ("np", 9), ("nai", 10), ("ssn", 11), ("pid", 12), ("network", 13), ("ruleset", 14), ("dpc", 15), ("opc", 16), ("opcMask", 17), ("si", 18)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmlrTriggerParameters.setStatus('current')
cmlrTriggerGt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 2, 1, 4), CItpTcGtaLongDisplay().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmlrTriggerGt.setStatus('current')
cmlrTriggerTransType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 2, 1, 5), CgsccpGttTransType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmlrTriggerTransType.setStatus('current')
cmlrTriggerGti = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 2, 1, 6), CgsccpGttGlobalTitleInd()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmlrTriggerGti.setStatus('current')
cmlrTriggerNp = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 2, 1, 7), CItpTcNumberingPlan()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmlrTriggerNp.setStatus('current')
cmlrTriggerNai = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 2, 1, 8), CItpTcNAI()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmlrTriggerNai.setStatus('current')
cmlrTriggerPc = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 2, 1, 9), CItpTcPointCode()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmlrTriggerPc.setStatus('current')
cmlrTriggerSsn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 2, 1, 10), CItpTcSubSystemNumber()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmlrTriggerSsn.setStatus('current')
cmlrTriggerDpc = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 2, 1, 11), CItpTcPointCode()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmlrTriggerDpc.setStatus('current')
cmlrTriggerOpc = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 2, 1, 12), CItpTcPointCode()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmlrTriggerOpc.setStatus('current')
cmlrTriggerOpcMask = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 2, 1, 13), CItpTcPointCodeMask()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmlrTriggerOpcMask.setStatus('current')
cmlrTriggerSi = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 2, 1, 14), CItpTcServiceIndicator().clone('snmm')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmlrTriggerSi.setStatus('current')
cmlrTriggerNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 2, 1, 15), CItpTcNetworkName().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmlrTriggerNetwork.setStatus('current')
cmlrTriggerRuleset = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 2, 1, 16), CmlrRuleSetName().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmlrTriggerRuleset.setStatus('current')
cmlrTriggerActive = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 2, 1, 17), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmlrTriggerActive.setStatus('current')
cmlrTriggerStartDateAndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 2, 1, 18), DateAndTime().clone(hexValue="0000000000000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmlrTriggerStartDateAndTime.setStatus('current')
cmlrTriggerEndDateAndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 2, 1, 19), DateAndTime().clone(hexValue="0000000000000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmlrTriggerEndDateAndTime.setStatus('current')
cmlTriggerPreliminaryMatchCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 2, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmlTriggerPreliminaryMatchCounts.setStatus('current')
cmlrTriggerMatchCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 2, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmlrTriggerMatchCounts.setStatus('current')
cmlrTriggerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 2, 1, 22), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmlrTriggerRowStatus.setStatus('current')
cmlrSubTriggerTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 3), )
if mibBuilder.loadTexts: cmlrSubTriggerTable.setStatus('current')
cmlrSubTriggerTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 3, 1), ).setIndexNames((0, "CISCO-ITP-GSP-MIB", "cgspInstNetwork"), (0, "CISCO-ITP-MLR-MIB", "cmlrTableName"), (0, "CISCO-ITP-MLR-MIB", "cmlrTriggerNumber"), (0, "CISCO-ITP-MLR-MIB", "cmlrSubTriggerNumber"))
if mibBuilder.loadTexts: cmlrSubTriggerTableEntry.setStatus('current')
cmlrSubTriggerNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 3, 1, 1), CmlrId())
if mibBuilder.loadTexts: cmlrSubTriggerNumber.setStatus('current')
cmlrSubTriggerParameters = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 3, 1, 2), Bits().clone(namedValues=NamedValues(("block", 0), ("continue", 1), ("matchAll", 2), ("cdpa", 3), ("cgpa", 4), ("pc", 5), ("gt", 6), ("tt", 7), ("gti", 8), ("np", 9), ("nai", 10), ("ssn", 11), ("pid", 12), ("network", 13), ("ruleset", 14)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmlrSubTriggerParameters.setStatus('current')
cmlrSubTriggerGt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 3, 1, 4), CItpTcGtaLongDisplay().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmlrSubTriggerGt.setStatus('current')
cmlrSubTriggerTransType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 3, 1, 5), CgsccpGttTransType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmlrSubTriggerTransType.setStatus('current')
cmlrSubTriggerGti = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 3, 1, 6), CgsccpGttGlobalTitleInd()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmlrSubTriggerGti.setStatus('current')
cmlrSubTriggerNp = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 3, 1, 7), CItpTcNumberingPlan()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmlrSubTriggerNp.setStatus('current')
cmlrSubTriggerNai = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 3, 1, 8), CItpTcNAI()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmlrSubTriggerNai.setStatus('current')
cmlrSubTriggerPc = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 3, 1, 9), CItpTcPointCode()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmlrSubTriggerPc.setStatus('current')
cmlrSubTriggerSsn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 3, 1, 10), CItpTcSubSystemNumber()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmlrSubTriggerSsn.setStatus('current')
cmlrSubTriggerNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 3, 1, 11), CItpTcNetworkName().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmlrSubTriggerNetwork.setStatus('current')
cmlrSubTriggerRuleset = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 3, 1, 12), CmlrRuleSetName().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmlrSubTriggerRuleset.setStatus('current')
cmlrSubTriggerMatchCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 3, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmlrSubTriggerMatchCounts.setStatus('current')
cmlrSubTriggerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 3, 1, 14), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmlrSubTriggerRowStatus.setStatus('current')
cmlrAddressTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 4), )
if mibBuilder.loadTexts: cmlrAddressTable.setStatus('current')
cmlrAddressTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 4, 1), ).setIndexNames((0, "CISCO-ITP-GSP-MIB", "cgspInstNetwork"), (0, "CISCO-ITP-MLR-MIB", "cmlrAddressTableName"), (0, "CISCO-ITP-MLR-MIB", "cmlrAddressType"), (0, "CISCO-ITP-MLR-MIB", "cmlrAddressDigits"), (0, "CISCO-ITP-MLR-MIB", "cmlrAddressExactMatch"))
if mibBuilder.loadTexts: cmlrAddressTableEntry.setStatus('current')
cmlrAddressTableName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 4, 1, 1), CmlrName())
if mibBuilder.loadTexts: cmlrAddressTableName.setStatus('current')
cmlrAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 4, 1, 2), CmlrAddressType())
if mibBuilder.loadTexts: cmlrAddressType.setStatus('current')
cmlrAddressDigits = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 4, 1, 3), CmlrAddressDigits())
if mibBuilder.loadTexts: cmlrAddressDigits.setStatus('current')
cmlrAddressExactMatch = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 4, 1, 4), TruthValue())
if mibBuilder.loadTexts: cmlrAddressExactMatch.setStatus('current')
cmlrAddressResultParameters = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 4, 1, 5), CmlrResultParameters()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmlrAddressResultParameters.setStatus('current')
cmlrAddressResultNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 4, 1, 6), CItpTcNetworkName()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmlrAddressResultNetwork.setStatus('current')
cmlrAddressResultType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 4, 1, 7), CmlrResultType().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmlrAddressResultType.setStatus('current')
cmlrAddressResultOctet = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 4, 1, 8), CmlrResultOctet().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmlrAddressResultOctet.setStatus('current')
cmlrAddressResultTransType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 4, 1, 9), CgsccpGttTransType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmlrAddressResultTransType.setStatus('current')
cmlrAddressResultGti = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 4, 1, 10), CgsccpGttGlobalTitleInd()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmlrAddressResultGti.setStatus('current')
cmlrAddressResultNp = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 4, 1, 11), CItpTcNumberingPlan()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmlrAddressResultNp.setStatus('current')
cmlrAddressResultNai = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 4, 1, 12), CItpTcNAI()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmlrAddressResultNai.setStatus('current')
cmlrAddressResultPc = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 4, 1, 13), CItpTcPointCode()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmlrAddressResultPc.setStatus('current')
cmlrAddressResultSsn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 4, 1, 14), CItpTcSubSystemNumber()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmlrAddressResultSsn.setStatus('current')
cmlrAddressMatchCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 4, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmlrAddressMatchCounts.setStatus('current')
cmlrAddressRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 4, 1, 16), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmlrAddressRowStatus.setStatus('current')
cmlrRuleSetTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 5), )
if mibBuilder.loadTexts: cmlrRuleSetTable.setStatus('current')
cmlrRuleSetTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 5, 1), ).setIndexNames((0, "CISCO-ITP-GSP-MIB", "cgspInstNetwork"), (0, "CISCO-ITP-MLR-MIB", "cmlrRuleSetName"))
if mibBuilder.loadTexts: cmlrRuleSetTableEntry.setStatus('current')
cmlrRuleSetName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 5, 1, 1), CmlrRuleSetName())
if mibBuilder.loadTexts: cmlrRuleSetName.setStatus('current')
cmlrRuleSetSegmented = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 5, 1, 2), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmlrRuleSetSegmented.setStatus('current')
cmlrRuleSetProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 5, 1, 3), CmlrRuleProtocol().clone('gsmMap')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmlrRuleSetProtocol.setStatus('current')
cmlrRuleSetSearchType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 5, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("seq", 1), ("bestMatch", 2))).clone('seq')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmlrRuleSetSearchType.setStatus('current')
cmlrRuleSetStartDateAndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 5, 1, 5), DateAndTime().clone(hexValue="0000000000000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmlrRuleSetStartDateAndTime.setStatus('current')
cmlrRuleSetEndDateAndTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 5, 1, 6), DateAndTime().clone(hexValue="0000000000000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmlrRuleSetEndDateAndTime.setStatus('current')
cmlrRuleSetRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 5, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmlrRuleSetRowStatus.setStatus('current')
cmlrRuleTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 6), )
if mibBuilder.loadTexts: cmlrRuleTable.setStatus('current')
cmlrRuleTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 6, 1), ).setIndexNames((0, "CISCO-ITP-GSP-MIB", "cgspInstNetwork"), (0, "CISCO-ITP-MLR-MIB", "cmlrRuleSetName"), (0, "CISCO-ITP-MLR-MIB", "cmlrRuleNumber"))
if mibBuilder.loadTexts: cmlrRuleTableEntry.setStatus('current')
cmlrRuleNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 6, 1, 1), CmlrId())
if mibBuilder.loadTexts: cmlrRuleNumber.setStatus('current')
cmlrRuleOperationType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 6, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 255))).clone(namedValues=NamedValues(("unknown", 0), ("alertSc", 1), ("smdPp", 2), ("smsMo", 3), ("smsMt", 4), ("smsReg", 5), ("sriSm", 6), ("smsNotify", 7), ("all", 255)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmlrRuleOperationType.setStatus('current')
cmlrRuleProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 6, 1, 3), CmlrRuleProtocol()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmlrRuleProtocol.setStatus('current')
cmlrRuleInputParameters = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 6, 1, 4), Bits().clone(namedValues=NamedValues(("destPort", 0), ("destSmeGta", 1), ("destSmeExact", 2), ("destSmeNai", 3), ("destSmeNp", 4), ("destSmeImsi", 5), ("destSmeMin", 6), ("destSmscGta", 7), ("destSmscExact", 8), ("destSmscNai", 9), ("destSmscNp", 10), ("origSmeGta", 11), ("origSmeExact", 12), ("origSmeNai", 13), ("origSmeNp", 14), ("origSmscGta", 15), ("origSmscExact", 16), ("origSmscNai", 17), ("origSmscNp", 18), ("pid", 19), ("tid", 20), ("default", 21), ("destSmeTable", 22), ("origSmeTable", 23), ("destSmeMinDigits", 24), ("destSmeMaxDigits", 25), ("destSmeTableImsi", 26), ("destSmeTableNai", 27), ("destSmeTableNp", 28), ("destSmscMinDigits", 29), ("destSmscMaxDigits", 30), ("origSmeMinDigits", 31), ("origSmeMaxDigits", 32), ("origSmeTableNai", 33), ("origSmeTableNp", 34), ("origImsiGta", 35), ("origImsiExact", 36), ("origImsiNai", 37), ("origImsiNp", 38), ("origImsiMinDigits", 39), ("origImsiMaxDigits", 40), ("origImsiUnknown", 41), ("origImsiTable", 42), ("origSmscMinDigits", 43), ("origSmscMaxDigits", 44), ("multiMessageDialog", 45)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmlrRuleInputParameters.setStatus('current')
cmlrRuleDestPort = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 6, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmlrRuleDestPort.setStatus('current')
cmlrRuleDestSmeGta = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 6, 1, 6), CItpTcGtaLongDisplay().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmlrRuleDestSmeGta.setStatus('current')
cmlrRuleDestSmeNai = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 6, 1, 7), CItpTcNAI()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmlrRuleDestSmeNai.setStatus('current')
cmlrRuleDestSmeNp = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 6, 1, 8), CItpTcNumberingPlan()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmlrRuleDestSmeNp.setStatus('current')
cmlrRuleDestSmscGta = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 6, 1, 9), CItpTcGtaLongDisplay().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmlrRuleDestSmscGta.setStatus('current')
cmlrRuleDestSmscNai = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 6, 1, 10), CItpTcNAI()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmlrRuleDestSmscNai.setStatus('current')
cmlrRuleDestSmscNp = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 6, 1, 11), CItpTcNumberingPlan()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmlrRuleDestSmscNp.setStatus('current')
cmlrRuleOrigSmeGta = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 6, 1, 12), CItpTcGtaLongDisplay().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmlrRuleOrigSmeGta.setStatus('current')
cmlrRuleOrigSmeNai = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 6, 1, 13), CItpTcNAI()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmlrRuleOrigSmeNai.setStatus('current')
cmlrRuleOrigSmeNp = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 6, 1, 14), CItpTcNumberingPlan()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmlrRuleOrigSmeNp.setStatus('current')
cmlrRuleOrigSmscGta = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 6, 1, 15), CItpTcGtaLongDisplay().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmlrRuleOrigSmscGta.setStatus('current')
cmlrRuleOrigSmscNai = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 6, 1, 16), CItpTcNAI()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmlrRuleOrigSmscNai.setStatus('current')
cmlrRuleOrigSmscNp = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 6, 1, 17), CItpTcNumberingPlan()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmlrRuleOrigSmscNp.setStatus('current')
cmlrRuleProtocolId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 6, 1, 18), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmlrRuleProtocolId.setStatus('current')
cmlrRuleTeleserviceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 6, 1, 19), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmlrRuleTeleserviceId.setStatus('current')
cmlrRuleAddressTable = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 6, 1, 20), CmlrName().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmlrRuleAddressTable.setStatus('current')
cmlrRuleResultParameters = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 6, 1, 21), CmlrResultParameters()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmlrRuleResultParameters.setStatus('current')
cmlrRuleResultNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 6, 1, 22), CItpTcNetworkName()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmlrRuleResultNetwork.setStatus('current')
cmlrRuleResultType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 6, 1, 23), CmlrResultType().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmlrRuleResultType.setStatus('current')
cmlrRuleResultOctet = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 6, 1, 24), CmlrResultOctet().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmlrRuleResultOctet.setStatus('current')
cmlrRuleResultTransType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 6, 1, 25), CgsccpGttTransType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmlrRuleResultTransType.setStatus('current')
cmlrRuleResultGti = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 6, 1, 26), CgsccpGttGlobalTitleInd()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmlrRuleResultGti.setStatus('current')
cmlrRuleResultNp = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 6, 1, 27), CItpTcNumberingPlan()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmlrRuleResultNp.setStatus('current')
cmlrRuleResultNai = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 6, 1, 28), CItpTcNAI()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmlrRuleResultNai.setStatus('current')
cmlrRuleResultPc = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 6, 1, 29), CItpTcPointCode()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmlrRuleResultPc.setStatus('current')
cmlrRuleResultSsn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 6, 1, 30), CItpTcSubSystemNumber()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmlrRuleResultSsn.setStatus('current')
cmlrRuleMatchCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 6, 1, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmlrRuleMatchCounts.setStatus('current')
cmlrRuleRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 6, 1, 32), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmlrRuleRowStatus.setStatus('current')
cmlrRuleOrigAddressTable = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 6, 1, 33), CmlrName().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmlrRuleOrigAddressTable.setStatus('current')
cmlrRuleDestSmeMinDigits = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 6, 1, 34), CmlrMinimumDigits()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmlrRuleDestSmeMinDigits.setStatus('current')
cmlrRuleDestSmeMaxDigits = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 6, 1, 35), CmlrMaximumDigits()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmlrRuleDestSmeMaxDigits.setStatus('current')
cmlrRuleDestSmeTableNai = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 6, 1, 36), CItpTcNAI()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmlrRuleDestSmeTableNai.setStatus('current')
cmlrRuleDestSmeTableNp = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 6, 1, 37), CItpTcNumberingPlan()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmlrRuleDestSmeTableNp.setStatus('current')
cmlrRuleDestSmscMinDigits = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 6, 1, 38), CmlrMinimumDigits()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmlrRuleDestSmscMinDigits.setStatus('current')
cmlrRuleDestSmscMaxDigits = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 6, 1, 39), CmlrMaximumDigits()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmlrRuleDestSmscMaxDigits.setStatus('current')
cmlrRuleOrigSmeMinDigits = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 6, 1, 40), CmlrMinimumDigits()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmlrRuleOrigSmeMinDigits.setStatus('current')
cmlrRuleOrigSmeMaxDigits = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 6, 1, 41), CmlrMaximumDigits()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmlrRuleOrigSmeMaxDigits.setStatus('current')
cmlrRuleOrigSmeTableNai = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 6, 1, 42), CItpTcNAI()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmlrRuleOrigSmeTableNai.setStatus('current')
cmlrRuleOrigSmeTableNp = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 6, 1, 43), CItpTcNumberingPlan()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmlrRuleOrigSmeTableNp.setStatus('current')
cmlrRuleOrigImsiGta = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 6, 1, 44), CItpTcGtaLongDisplay().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmlrRuleOrigImsiGta.setStatus('current')
cmlrRuleOrigImsiNai = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 6, 1, 45), CItpTcNAI()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmlrRuleOrigImsiNai.setStatus('current')
cmlrRuleOrigImsiNp = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 6, 1, 46), CItpTcNumberingPlan()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmlrRuleOrigImsiNp.setStatus('current')
cmlrRuleOrigImsiMinDigits = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 6, 1, 47), CmlrMinimumDigits()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmlrRuleOrigImsiMinDigits.setStatus('current')
cmlrRuleOrigImsiMaxDigits = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 6, 1, 48), CmlrMaximumDigits()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmlrRuleOrigImsiMaxDigits.setStatus('current')
cmlrRuleOrigImsiTable = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 6, 1, 49), CmlrName().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmlrRuleOrigImsiTable.setStatus('current')
cmlrRuleOrigSmscMinDigits = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 6, 1, 50), CmlrMinimumDigits()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmlrRuleOrigSmscMinDigits.setStatus('current')
cmlrRuleOrigSmscMaxDigits = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 6, 1, 51), CmlrMaximumDigits()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmlrRuleOrigSmscMaxDigits.setStatus('current')
cmlrResultSetTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 8), )
if mibBuilder.loadTexts: cmlrResultSetTable.setStatus('current')
cmlrResultSetTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 8, 1), ).setIndexNames((0, "CISCO-ITP-GSP-MIB", "cgspInstNetwork"), (0, "CISCO-ITP-MLR-MIB", "cmlrResultSetName"))
if mibBuilder.loadTexts: cmlrResultSetTableEntry.setStatus('current')
cmlrResultSetName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 8, 1, 1), CmlrName())
if mibBuilder.loadTexts: cmlrResultSetName.setStatus('current')
cmlrResultSetUnavailDiscard = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 8, 1, 2), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmlrResultSetUnavailDiscard.setStatus('current')
cmlrResultSetRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 8, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmlrResultSetRowStatus.setStatus('current')
cmlrResultTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 9), )
if mibBuilder.loadTexts: cmlrResultTable.setStatus('current')
cmlrResultTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 9, 1), ).setIndexNames((0, "CISCO-ITP-GSP-MIB", "cgspInstNetwork"), (0, "CISCO-ITP-MLR-MIB", "cmlrResultSetName"), (0, "CISCO-ITP-MLR-MIB", "cmlrResultNumber"))
if mibBuilder.loadTexts: cmlrResultTableEntry.setStatus('current')
cmlrResultNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 9, 1, 1), CmlrId())
if mibBuilder.loadTexts: cmlrResultNumber.setStatus('current')
cmlrResultType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 9, 1, 2), CmlrResultType().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmlrResultType.setStatus('current')
cmlrResultNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 9, 1, 3), CItpTcNetworkName()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmlrResultNetwork.setStatus('current')
cmlrResultOctet = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 9, 1, 4), CmlrResultOctet().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmlrResultOctet.setStatus('current')
cmlrResultPc = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 9, 1, 5), CItpTcPointCode()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmlrResultPc.setStatus('current')
cmlrResultSsn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 9, 1, 6), CItpTcSubSystemNumber()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmlrResultSsn.setStatus('current')
cmlrResultWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 9, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmlrResultWeight.setStatus('current')
cmlrResultCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 9, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmlrResultCounts.setStatus('current')
cmlrResultRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 396, 1, 9, 1, 9), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cmlrResultRowStatus.setStatus('current')
ciscoMlrTableLoad = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 396, 0, 1)).setObjects(("CISCO-ITP-GSP-MIB", "cgspEventSequenceNumber"), ("CISCO-ITP-GSP-MIB", "cgspCLLICode"), ("CISCO-ITP-MLR-MIB", "cmlrInstLoadStatus"), ("CISCO-ITP-MLR-MIB", "cmlrInstLastURL"))
if mibBuilder.loadTexts: ciscoMlrTableLoad.setStatus('current')
ciscoMlrMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 396, 2, 1))
ciscoMlrMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 396, 2, 2))
ciscoMlrMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 396, 2, 1, 1)).setObjects(("CISCO-ITP-MLR-MIB", "ciscoMlrTableGroup"), ("CISCO-ITP-MLR-MIB", "ciscoMlrTriggerGroup"), ("CISCO-ITP-MLR-MIB", "ciscoMlrAddressGroup"), ("CISCO-ITP-MLR-MIB", "ciscoMlrRuleSetGroup"), ("CISCO-ITP-MLR-MIB", "ciscoMlrResultGroup"), ("CISCO-ITP-MLR-MIB", "ciscoMlrNotificationsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoMlrMIBCompliance = ciscoMlrMIBCompliance.setStatus('deprecated')
ciscoMlrMIBComplianceRev1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 396, 2, 1, 2)).setObjects(("CISCO-ITP-MLR-MIB", "ciscoMlrTableGroup"), ("CISCO-ITP-MLR-MIB", "ciscoMlrTriggerGroup"), ("CISCO-ITP-MLR-MIB", "ciscoMlrAddressGroup"), ("CISCO-ITP-MLR-MIB", "ciscoMlrRuleSetGroupRev1"), ("CISCO-ITP-MLR-MIB", "ciscoMlrResultGroup"), ("CISCO-ITP-MLR-MIB", "ciscoMlrNotificationsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoMlrMIBComplianceRev1 = ciscoMlrMIBComplianceRev1.setStatus('deprecated')
ciscoMlrMIBComplianceRev2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 396, 2, 1, 3)).setObjects(("CISCO-ITP-MLR-MIB", "ciscoMlrTableGroup"), ("CISCO-ITP-MLR-MIB", "ciscoMlrTriggerGroup"), ("CISCO-ITP-MLR-MIB", "ciscoMlrAddressGroup"), ("CISCO-ITP-MLR-MIB", "ciscoMlrRuleSetGroupRev2"), ("CISCO-ITP-MLR-MIB", "ciscoMlrResultGroup"), ("CISCO-ITP-MLR-MIB", "ciscoMlrNotificationsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoMlrMIBComplianceRev2 = ciscoMlrMIBComplianceRev2.setStatus('current')
ciscoMlrTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 396, 2, 2, 1)).setObjects(("CISCO-ITP-MLR-MIB", "cmlrTableLoadNotifEnabled"), ("CISCO-ITP-MLR-MIB", "cmlrInstLastChanged"), ("CISCO-ITP-MLR-MIB", "cmlrInstLastLoadTime"), ("CISCO-ITP-MLR-MIB", "cmlrInstLoadStatus"), ("CISCO-ITP-MLR-MIB", "cmlrInstLastURL"), ("CISCO-ITP-MLR-MIB", "cmlrInstRoutedCounts"), ("CISCO-ITP-MLR-MIB", "cmlrInstAbortCounts"), ("CISCO-ITP-MLR-MIB", "cmlrInstContinueCounts"), ("CISCO-ITP-MLR-MIB", "cmlrInstSmsMoCounts"), ("CISCO-ITP-MLR-MIB", "cmlrInstSmsMtCounts"), ("CISCO-ITP-MLR-MIB", "cmlrInstSriSmCounts"), ("CISCO-ITP-MLR-MIB", "cmlrInstSmdPpCounts"), ("CISCO-ITP-MLR-MIB", "cmlrInstAlertScCounts"), ("CISCO-ITP-MLR-MIB", "cmlrInstSmsRequestCounts"), ("CISCO-ITP-MLR-MIB", "cmlrInstSmsNotifCounts"), ("CISCO-ITP-MLR-MIB", "cmlrInstUnsupSCCPmsgTypeCounts"), ("CISCO-ITP-MLR-MIB", "cmlrInstUnsupSegSCCPmsgCounts"), ("CISCO-ITP-MLR-MIB", "cmlrInstUnsupportedMsgCounts"), ("CISCO-ITP-MLR-MIB", "cmlrInstParsingErrorCounts"), ("CISCO-ITP-MLR-MIB", "cmlrInstNoResultCounts"), ("CISCO-ITP-MLR-MIB", "cmlrInstResultContinueCounts"), ("CISCO-ITP-MLR-MIB", "cmlrInstNoServerDiscardCounts"), ("CISCO-ITP-MLR-MIB", "cmlrInstResultGttCounts"), ("CISCO-ITP-MLR-MIB", "cmlrInstUnparsedCounts"), ("CISCO-ITP-MLR-MIB", "cmlrInstResultBlockCounts"), ("CISCO-ITP-MLR-MIB", "cmlrInstGTImismatchCounts"), ("CISCO-ITP-MLR-MIB", "cmlrInstAddrConvFailureCounts"), ("CISCO-ITP-MLR-MIB", "cmlrInstDestUnavailableCounts"), ("CISCO-ITP-MLR-MIB", "cmlrInstFailedTrigMatchCounts"), ("CISCO-ITP-MLR-MIB", "cmlrInstDiscontinuityTime"), ("CISCO-ITP-MLR-MIB", "cmlrInstNoServerContinueCounts"), ("CISCO-ITP-MLR-MIB", "cmlrInstResultAsCounts"), ("CISCO-ITP-MLR-MIB", "cmlrInstResultPcCounts"), ("CISCO-ITP-MLR-MIB", "cmlrInstResultPcSsnCounts"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoMlrTableGroup = ciscoMlrTableGroup.setStatus('current')
ciscoMlrTriggerGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 396, 2, 2, 2)).setObjects(("CISCO-ITP-MLR-MIB", "cmlrTriggerParameters"), ("CISCO-ITP-MLR-MIB", "cmlrTriggerGt"), ("CISCO-ITP-MLR-MIB", "cmlrTriggerTransType"), ("CISCO-ITP-MLR-MIB", "cmlrTriggerGti"), ("CISCO-ITP-MLR-MIB", "cmlrTriggerNp"), ("CISCO-ITP-MLR-MIB", "cmlrTriggerNai"), ("CISCO-ITP-MLR-MIB", "cmlrTriggerPc"), ("CISCO-ITP-MLR-MIB", "cmlrTriggerSsn"), ("CISCO-ITP-MLR-MIB", "cmlrTriggerDpc"), ("CISCO-ITP-MLR-MIB", "cmlrTriggerOpc"), ("CISCO-ITP-MLR-MIB", "cmlrTriggerOpcMask"), ("CISCO-ITP-MLR-MIB", "cmlrTriggerSi"), ("CISCO-ITP-MLR-MIB", "cmlrTriggerNetwork"), ("CISCO-ITP-MLR-MIB", "cmlrTriggerRuleset"), ("CISCO-ITP-MLR-MIB", "cmlrTriggerActive"), ("CISCO-ITP-MLR-MIB", "cmlrTriggerStartDateAndTime"), ("CISCO-ITP-MLR-MIB", "cmlrTriggerEndDateAndTime"), ("CISCO-ITP-MLR-MIB", "cmlTriggerPreliminaryMatchCounts"), ("CISCO-ITP-MLR-MIB", "cmlrTriggerMatchCounts"), ("CISCO-ITP-MLR-MIB", "cmlrTriggerRowStatus"), ("CISCO-ITP-MLR-MIB", "cmlrSubTriggerParameters"), ("CISCO-ITP-MLR-MIB", "cmlrSubTriggerGt"), ("CISCO-ITP-MLR-MIB", "cmlrSubTriggerTransType"), ("CISCO-ITP-MLR-MIB", "cmlrSubTriggerGti"), ("CISCO-ITP-MLR-MIB", "cmlrSubTriggerNp"), ("CISCO-ITP-MLR-MIB", "cmlrSubTriggerNai"), ("CISCO-ITP-MLR-MIB", "cmlrSubTriggerPc"), ("CISCO-ITP-MLR-MIB", "cmlrSubTriggerSsn"), ("CISCO-ITP-MLR-MIB", "cmlrSubTriggerNetwork"), ("CISCO-ITP-MLR-MIB", "cmlrSubTriggerRuleset"), ("CISCO-ITP-MLR-MIB", "cmlrSubTriggerMatchCounts"), ("CISCO-ITP-MLR-MIB", "cmlrSubTriggerRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoMlrTriggerGroup = ciscoMlrTriggerGroup.setStatus('current')
ciscoMlrAddressGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 396, 2, 2, 3)).setObjects(("CISCO-ITP-MLR-MIB", "cmlrAddressResultParameters"), ("CISCO-ITP-MLR-MIB", "cmlrAddressResultNetwork"), ("CISCO-ITP-MLR-MIB", "cmlrAddressResultType"), ("CISCO-ITP-MLR-MIB", "cmlrAddressResultOctet"), ("CISCO-ITP-MLR-MIB", "cmlrAddressResultTransType"), ("CISCO-ITP-MLR-MIB", "cmlrAddressResultGti"), ("CISCO-ITP-MLR-MIB", "cmlrAddressResultNp"), ("CISCO-ITP-MLR-MIB", "cmlrAddressResultNai"), ("CISCO-ITP-MLR-MIB", "cmlrAddressResultPc"), ("CISCO-ITP-MLR-MIB", "cmlrAddressResultSsn"), ("CISCO-ITP-MLR-MIB", "cmlrAddressMatchCounts"), ("CISCO-ITP-MLR-MIB", "cmlrAddressRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoMlrAddressGroup = ciscoMlrAddressGroup.setStatus('current')
ciscoMlrRuleSetGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 396, 2, 2, 4)).setObjects(("CISCO-ITP-MLR-MIB", "cmlrRuleSetSegmented"), ("CISCO-ITP-MLR-MIB", "cmlrRuleSetProtocol"), ("CISCO-ITP-MLR-MIB", "cmlrRuleSetSearchType"), ("CISCO-ITP-MLR-MIB", "cmlrRuleSetStartDateAndTime"), ("CISCO-ITP-MLR-MIB", "cmlrRuleSetEndDateAndTime"), ("CISCO-ITP-MLR-MIB", "cmlrRuleSetRowStatus"), ("CISCO-ITP-MLR-MIB", "cmlrRuleOperationType"), ("CISCO-ITP-MLR-MIB", "cmlrRuleProtocol"), ("CISCO-ITP-MLR-MIB", "cmlrRuleInputParameters"), ("CISCO-ITP-MLR-MIB", "cmlrRuleDestPort"), ("CISCO-ITP-MLR-MIB", "cmlrRuleDestSmeGta"), ("CISCO-ITP-MLR-MIB", "cmlrRuleDestSmeNai"), ("CISCO-ITP-MLR-MIB", "cmlrRuleDestSmeNp"), ("CISCO-ITP-MLR-MIB", "cmlrRuleDestSmscGta"), ("CISCO-ITP-MLR-MIB", "cmlrRuleDestSmscNai"), ("CISCO-ITP-MLR-MIB", "cmlrRuleDestSmscNp"), ("CISCO-ITP-MLR-MIB", "cmlrRuleOrigSmeGta"), ("CISCO-ITP-MLR-MIB", "cmlrRuleOrigSmeNai"), ("CISCO-ITP-MLR-MIB", "cmlrRuleOrigSmeNp"), ("CISCO-ITP-MLR-MIB", "cmlrRuleOrigSmscGta"), ("CISCO-ITP-MLR-MIB", "cmlrRuleOrigSmscNai"), ("CISCO-ITP-MLR-MIB", "cmlrRuleOrigSmscNp"), ("CISCO-ITP-MLR-MIB", "cmlrRuleProtocolId"), ("CISCO-ITP-MLR-MIB", "cmlrRuleTeleserviceId"), ("CISCO-ITP-MLR-MIB", "cmlrRuleAddressTable"), ("CISCO-ITP-MLR-MIB", "cmlrRuleResultParameters"), ("CISCO-ITP-MLR-MIB", "cmlrRuleResultNetwork"), ("CISCO-ITP-MLR-MIB", "cmlrRuleResultType"), ("CISCO-ITP-MLR-MIB", "cmlrRuleResultOctet"), ("CISCO-ITP-MLR-MIB", "cmlrRuleResultTransType"), ("CISCO-ITP-MLR-MIB", "cmlrRuleResultGti"), ("CISCO-ITP-MLR-MIB", "cmlrRuleResultNp"), ("CISCO-ITP-MLR-MIB", "cmlrRuleResultNai"), ("CISCO-ITP-MLR-MIB", "cmlrRuleResultPc"), ("CISCO-ITP-MLR-MIB", "cmlrRuleResultSsn"), ("CISCO-ITP-MLR-MIB", "cmlrRuleMatchCounts"), ("CISCO-ITP-MLR-MIB", "cmlrRuleRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoMlrRuleSetGroup = ciscoMlrRuleSetGroup.setStatus('deprecated')
ciscoMlrResultGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 396, 2, 2, 5)).setObjects(("CISCO-ITP-MLR-MIB", "cmlrResultSetUnavailDiscard"), ("CISCO-ITP-MLR-MIB", "cmlrResultSetRowStatus"), ("CISCO-ITP-MLR-MIB", "cmlrResultNetwork"), ("CISCO-ITP-MLR-MIB", "cmlrResultType"), ("CISCO-ITP-MLR-MIB", "cmlrResultOctet"), ("CISCO-ITP-MLR-MIB", "cmlrResultPc"), ("CISCO-ITP-MLR-MIB", "cmlrResultSsn"), ("CISCO-ITP-MLR-MIB", "cmlrResultWeight"), ("CISCO-ITP-MLR-MIB", "cmlrResultCounts"), ("CISCO-ITP-MLR-MIB", "cmlrResultRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoMlrResultGroup = ciscoMlrResultGroup.setStatus('current')
ciscoMlrNotificationsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 396, 2, 2, 6)).setObjects(("CISCO-ITP-MLR-MIB", "ciscoMlrTableLoad"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoMlrNotificationsGroup = ciscoMlrNotificationsGroup.setStatus('current')
ciscoMlrRuleSetGroupRev1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 396, 2, 2, 7)).setObjects(("CISCO-ITP-MLR-MIB", "cmlrRuleSetSegmented"), ("CISCO-ITP-MLR-MIB", "cmlrRuleSetProtocol"), ("CISCO-ITP-MLR-MIB", "cmlrRuleSetSearchType"), ("CISCO-ITP-MLR-MIB", "cmlrRuleSetStartDateAndTime"), ("CISCO-ITP-MLR-MIB", "cmlrRuleSetEndDateAndTime"), ("CISCO-ITP-MLR-MIB", "cmlrRuleSetRowStatus"), ("CISCO-ITP-MLR-MIB", "cmlrRuleOperationType"), ("CISCO-ITP-MLR-MIB", "cmlrRuleProtocol"), ("CISCO-ITP-MLR-MIB", "cmlrRuleInputParameters"), ("CISCO-ITP-MLR-MIB", "cmlrRuleDestPort"), ("CISCO-ITP-MLR-MIB", "cmlrRuleDestSmeGta"), ("CISCO-ITP-MLR-MIB", "cmlrRuleDestSmeNai"), ("CISCO-ITP-MLR-MIB", "cmlrRuleDestSmeNp"), ("CISCO-ITP-MLR-MIB", "cmlrRuleDestSmscGta"), ("CISCO-ITP-MLR-MIB", "cmlrRuleDestSmscNai"), ("CISCO-ITP-MLR-MIB", "cmlrRuleDestSmscNp"), ("CISCO-ITP-MLR-MIB", "cmlrRuleOrigSmeGta"), ("CISCO-ITP-MLR-MIB", "cmlrRuleOrigSmeNai"), ("CISCO-ITP-MLR-MIB", "cmlrRuleOrigSmeNp"), ("CISCO-ITP-MLR-MIB", "cmlrRuleOrigSmscGta"), ("CISCO-ITP-MLR-MIB", "cmlrRuleOrigSmscNai"), ("CISCO-ITP-MLR-MIB", "cmlrRuleOrigSmscNp"), ("CISCO-ITP-MLR-MIB", "cmlrRuleProtocolId"), ("CISCO-ITP-MLR-MIB", "cmlrRuleTeleserviceId"), ("CISCO-ITP-MLR-MIB", "cmlrRuleAddressTable"), ("CISCO-ITP-MLR-MIB", "cmlrRuleResultParameters"), ("CISCO-ITP-MLR-MIB", "cmlrRuleResultNetwork"), ("CISCO-ITP-MLR-MIB", "cmlrRuleResultType"), ("CISCO-ITP-MLR-MIB", "cmlrRuleResultOctet"), ("CISCO-ITP-MLR-MIB", "cmlrRuleResultTransType"), ("CISCO-ITP-MLR-MIB", "cmlrRuleResultGti"), ("CISCO-ITP-MLR-MIB", "cmlrRuleResultNp"), ("CISCO-ITP-MLR-MIB", "cmlrRuleResultNai"), ("CISCO-ITP-MLR-MIB", "cmlrRuleResultPc"), ("CISCO-ITP-MLR-MIB", "cmlrRuleResultSsn"), ("CISCO-ITP-MLR-MIB", "cmlrRuleMatchCounts"), ("CISCO-ITP-MLR-MIB", "cmlrRuleRowStatus"), ("CISCO-ITP-MLR-MIB", "cmlrRuleOrigAddressTable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoMlrRuleSetGroupRev1 = ciscoMlrRuleSetGroupRev1.setStatus('deprecated')
ciscoMlrRuleSetGroupRev2 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 396, 2, 2, 8)).setObjects(("CISCO-ITP-MLR-MIB", "cmlrRuleSetSegmented"), ("CISCO-ITP-MLR-MIB", "cmlrRuleSetProtocol"), ("CISCO-ITP-MLR-MIB", "cmlrRuleSetSearchType"), ("CISCO-ITP-MLR-MIB", "cmlrRuleSetStartDateAndTime"), ("CISCO-ITP-MLR-MIB", "cmlrRuleSetEndDateAndTime"), ("CISCO-ITP-MLR-MIB", "cmlrRuleSetRowStatus"), ("CISCO-ITP-MLR-MIB", "cmlrRuleOperationType"), ("CISCO-ITP-MLR-MIB", "cmlrRuleProtocol"), ("CISCO-ITP-MLR-MIB", "cmlrRuleInputParameters"), ("CISCO-ITP-MLR-MIB", "cmlrRuleDestPort"), ("CISCO-ITP-MLR-MIB", "cmlrRuleDestSmeGta"), ("CISCO-ITP-MLR-MIB", "cmlrRuleDestSmeNai"), ("CISCO-ITP-MLR-MIB", "cmlrRuleDestSmeNp"), ("CISCO-ITP-MLR-MIB", "cmlrRuleDestSmscGta"), ("CISCO-ITP-MLR-MIB", "cmlrRuleDestSmscNai"), ("CISCO-ITP-MLR-MIB", "cmlrRuleDestSmscNp"), ("CISCO-ITP-MLR-MIB", "cmlrRuleOrigSmeGta"), ("CISCO-ITP-MLR-MIB", "cmlrRuleOrigSmeNai"), ("CISCO-ITP-MLR-MIB", "cmlrRuleOrigSmeNp"), ("CISCO-ITP-MLR-MIB", "cmlrRuleOrigSmscGta"), ("CISCO-ITP-MLR-MIB", "cmlrRuleOrigSmscNai"), ("CISCO-ITP-MLR-MIB", "cmlrRuleOrigSmscNp"), ("CISCO-ITP-MLR-MIB", "cmlrRuleProtocolId"), ("CISCO-ITP-MLR-MIB", "cmlrRuleTeleserviceId"), ("CISCO-ITP-MLR-MIB", "cmlrRuleAddressTable"), ("CISCO-ITP-MLR-MIB", "cmlrRuleResultParameters"), ("CISCO-ITP-MLR-MIB", "cmlrRuleResultNetwork"), ("CISCO-ITP-MLR-MIB", "cmlrRuleResultType"), ("CISCO-ITP-MLR-MIB", "cmlrRuleResultOctet"), ("CISCO-ITP-MLR-MIB", "cmlrRuleResultTransType"), ("CISCO-ITP-MLR-MIB", "cmlrRuleResultGti"), ("CISCO-ITP-MLR-MIB", "cmlrRuleResultNp"), ("CISCO-ITP-MLR-MIB", "cmlrRuleResultNai"), ("CISCO-ITP-MLR-MIB", "cmlrRuleResultPc"), ("CISCO-ITP-MLR-MIB", "cmlrRuleResultSsn"), ("CISCO-ITP-MLR-MIB", "cmlrRuleMatchCounts"), ("CISCO-ITP-MLR-MIB", "cmlrRuleRowStatus"), ("CISCO-ITP-MLR-MIB", "cmlrRuleOrigAddressTable"), ("CISCO-ITP-MLR-MIB", "cmlrRuleDestSmeMinDigits"), ("CISCO-ITP-MLR-MIB", "cmlrRuleDestSmeMaxDigits"), ("CISCO-ITP-MLR-MIB", "cmlrRuleDestSmeTableNai"), ("CISCO-ITP-MLR-MIB", "cmlrRuleDestSmeTableNp"), ("CISCO-ITP-MLR-MIB", "cmlrRuleDestSmscMinDigits"), ("CISCO-ITP-MLR-MIB", "cmlrRuleDestSmscMaxDigits"), ("CISCO-ITP-MLR-MIB", "cmlrRuleOrigSmeMinDigits"), ("CISCO-ITP-MLR-MIB", "cmlrRuleOrigSmeMaxDigits"), ("CISCO-ITP-MLR-MIB", "cmlrRuleOrigSmeTableNai"), ("CISCO-ITP-MLR-MIB", "cmlrRuleOrigSmeTableNp"), ("CISCO-ITP-MLR-MIB", "cmlrRuleOrigImsiGta"), ("CISCO-ITP-MLR-MIB", "cmlrRuleOrigImsiNai"), ("CISCO-ITP-MLR-MIB", "cmlrRuleOrigImsiNp"), ("CISCO-ITP-MLR-MIB", "cmlrRuleOrigImsiMinDigits"), ("CISCO-ITP-MLR-MIB", "cmlrRuleOrigImsiMaxDigits"), ("CISCO-ITP-MLR-MIB", "cmlrRuleOrigImsiTable"), ("CISCO-ITP-MLR-MIB", "cmlrRuleOrigSmscMinDigits"), ("CISCO-ITP-MLR-MIB", "cmlrRuleOrigSmscMaxDigits"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoMlrRuleSetGroupRev2 = ciscoMlrRuleSetGroupRev2.setStatus('current')
mibBuilder.exportSymbols("CISCO-ITP-MLR-MIB", ciscoMlrMIBCompliances=ciscoMlrMIBCompliances, cmlrSubTriggerRowStatus=cmlrSubTriggerRowStatus, CmlrMinimumDigits=CmlrMinimumDigits, cmlrInstResultPcSsnCounts=cmlrInstResultPcSsnCounts, cmlrTriggerStartDateAndTime=cmlrTriggerStartDateAndTime, cmlrRuleOrigAddressTable=cmlrRuleOrigAddressTable, cmlrRuleSetEndDateAndTime=cmlrRuleSetEndDateAndTime, cmlrRuleTeleserviceId=cmlrRuleTeleserviceId, cmlrInstDiscontinuityTime=cmlrInstDiscontinuityTime, cmlrResultNetwork=cmlrResultNetwork, cmlrRuleInputParameters=cmlrRuleInputParameters, cmlrTableLoadNotifEnabled=cmlrTableLoadNotifEnabled, cmlrInstDestUnavailableCounts=cmlrInstDestUnavailableCounts, cmlrRuleOrigImsiNp=cmlrRuleOrigImsiNp, cmlrRuleOrigSmeMinDigits=cmlrRuleOrigSmeMinDigits, ciscoMlrMIB=ciscoMlrMIB, cmlrRuleResultPc=cmlrRuleResultPc, cmlrRuleDestSmeTableNai=cmlrRuleDestSmeTableNai, CmlrAddressDigits=CmlrAddressDigits, cmlrRuleTable=cmlrRuleTable, cmlrInstContinueCounts=cmlrInstContinueCounts, CmlrResultParameters=CmlrResultParameters, cmlrRuleOrigImsiNai=cmlrRuleOrigImsiNai, ciscoMlrRuleSetGroupRev2=ciscoMlrRuleSetGroupRev2, cmlrAddressDigits=cmlrAddressDigits, cmlrInstRoutedCounts=cmlrInstRoutedCounts, ciscoMlrMIBNotifs=ciscoMlrMIBNotifs, cmlrRuleResultTransType=cmlrRuleResultTransType, cmlrRuleDestSmscMaxDigits=cmlrRuleDestSmscMaxDigits, cmlrRuleOrigSmeGta=cmlrRuleOrigSmeGta, cmlrRuleOrigSmeMaxDigits=cmlrRuleOrigSmeMaxDigits, cmlrTriggerTable=cmlrTriggerTable, cmlrRuleDestSmeMaxDigits=cmlrRuleDestSmeMaxDigits, cmlrRuleSetSearchType=cmlrRuleSetSearchType, cmlrRuleResultType=cmlrRuleResultType, CmlrAddressType=CmlrAddressType, cmlrTriggerNetwork=cmlrTriggerNetwork, cmlrRuleProtocol=cmlrRuleProtocol, cmlrTriggerActive=cmlrTriggerActive, cmlrInstResultPcCounts=cmlrInstResultPcCounts, ciscoMlrNotificationsGroup=ciscoMlrNotificationsGroup, cmlrTriggerNumber=cmlrTriggerNumber, cmlrSubTriggerTransType=cmlrSubTriggerTransType, cmlrInstParsingErrorCounts=cmlrInstParsingErrorCounts, cmlrRuleDestPort=cmlrRuleDestPort, cmlrResultOctet=cmlrResultOctet, cmlrResultCounts=cmlrResultCounts, CmlrResultType=CmlrResultType, cmlrRuleOrigSmeNai=cmlrRuleOrigSmeNai, cmlrInstLastChanged=cmlrInstLastChanged, cmlrTriggerOpc=cmlrTriggerOpc, cmlrAddressResultNetwork=cmlrAddressResultNetwork, cmlrAddressResultNp=cmlrAddressResultNp, cmlrTriggerEndDateAndTime=cmlrTriggerEndDateAndTime, cmlrAddressExactMatch=cmlrAddressExactMatch, cmlrTriggerMatchCounts=cmlrTriggerMatchCounts, ciscoMlrMIBConform=ciscoMlrMIBConform, cmlrInstNoServerDiscardCounts=cmlrInstNoServerDiscardCounts, cmlrRuleResultOctet=cmlrRuleResultOctet, cmlrSubTriggerPc=cmlrSubTriggerPc, CmlrId=CmlrId, cmlrRuleResultParameters=cmlrRuleResultParameters, cmlrResultPc=cmlrResultPc, cmlrRuleDestSmeTableNp=cmlrRuleDestSmeTableNp, cmlrInstAddrConvFailureCounts=cmlrInstAddrConvFailureCounts, cmlrAddressTableName=cmlrAddressTableName, cmlrSubTriggerRuleset=cmlrSubTriggerRuleset, ciscoMlrResultGroup=ciscoMlrResultGroup, cmlrRuleDestSmscMinDigits=cmlrRuleDestSmscMinDigits, cmlrRuleRowStatus=cmlrRuleRowStatus, cmlrResultSsn=cmlrResultSsn, cmlrInstNoServerContinueCounts=cmlrInstNoServerContinueCounts, cmlrTriggerOpcMask=cmlrTriggerOpcMask, cmlrInstSmsMoCounts=cmlrInstSmsMoCounts, cmlrSubTriggerGt=cmlrSubTriggerGt, cmlrTriggerNp=cmlrTriggerNp, cmlrAddressResultType=cmlrAddressResultType, ciscoMlrTableGroup=ciscoMlrTableGroup, cmlrSubTriggerNai=cmlrSubTriggerNai, cmlrRuleOrigSmeTableNp=cmlrRuleOrigSmeTableNp, cmlrInstUnsupSegSCCPmsgCounts=cmlrInstUnsupSegSCCPmsgCounts, cmlrRuleResultNetwork=cmlrRuleResultNetwork, cmlrInstGTImismatchCounts=cmlrInstGTImismatchCounts, cmlrTriggerRowStatus=cmlrTriggerRowStatus, cmlrRuleResultNp=cmlrRuleResultNp, cmlTriggerPreliminaryMatchCounts=cmlTriggerPreliminaryMatchCounts, cmlrRuleOrigSmscNai=cmlrRuleOrigSmscNai, cmlrTableName=cmlrTableName, cmlrResultNumber=cmlrResultNumber, cmlrSubTriggerNumber=cmlrSubTriggerNumber, cmlrRuleSetSegmented=cmlrRuleSetSegmented, cmlrRuleSetTable=cmlrRuleSetTable, cmlrInstLoadStatus=cmlrInstLoadStatus, cmlrTriggerSi=cmlrTriggerSi, ciscoMlrTriggerGroup=ciscoMlrTriggerGroup, cmlrRuleDestSmscNai=cmlrRuleDestSmscNai, cmlrRuleOrigSmscMaxDigits=cmlrRuleOrigSmscMaxDigits, cmlrResultType=cmlrResultType, cmlrRuleOrigImsiMinDigits=cmlrRuleOrigImsiMinDigits, cmlrResultTableEntry=cmlrResultTableEntry, cmlrRuleDestSmscGta=cmlrRuleDestSmscGta, ciscoMlrMIBComplianceRev2=ciscoMlrMIBComplianceRev2, cmlrSubTriggerSsn=cmlrSubTriggerSsn, cmlrRuleDestSmeGta=cmlrRuleDestSmeGta, cmlrSubTriggerNetwork=cmlrSubTriggerNetwork, CmlrRuleProtocol=CmlrRuleProtocol, cmlrRuleAddressTable=cmlrRuleAddressTable, cmlrSubTriggerMatchCounts=cmlrSubTriggerMatchCounts, cmlrInstNoResultCounts=cmlrInstNoResultCounts, cmlrTriggerGt=cmlrTriggerGt, cmlrTriggerDpc=cmlrTriggerDpc, cmlrInstUnsupSCCPmsgTypeCounts=cmlrInstUnsupSCCPmsgTypeCounts, cmlrAddressResultNai=cmlrAddressResultNai, cmlrInstLastLoadTime=cmlrInstLastLoadTime, cmlrAddressRowStatus=cmlrAddressRowStatus, cmlrRuleMatchCounts=cmlrRuleMatchCounts, cmlrSubTriggerParameters=cmlrSubTriggerParameters, cmlrAddressMatchCounts=cmlrAddressMatchCounts, cmlrRuleNumber=cmlrRuleNumber, cmlrAddressResultParameters=cmlrAddressResultParameters, cmlrRuleDestSmeNp=cmlrRuleDestSmeNp, cmlrRuleProtocolId=cmlrRuleProtocolId, cmlrResultSetTableEntry=cmlrResultSetTableEntry, ciscoMlrMIBCompliance=ciscoMlrMIBCompliance, cmlrInstSmsRequestCounts=cmlrInstSmsRequestCounts, cmlrTriggerTransType=cmlrTriggerTransType, ciscoMlrTableLoad=ciscoMlrTableLoad, cmlrInstUnsupportedMsgCounts=cmlrInstUnsupportedMsgCounts, cmlrRuleOrigSmeNp=cmlrRuleOrigSmeNp, cmlrRuleSetStartDateAndTime=cmlrRuleSetStartDateAndTime, cmlrSubTriggerTable=cmlrSubTriggerTable, CmlrMaximumDigits=CmlrMaximumDigits, cmlrRuleDestSmscNp=cmlrRuleDestSmscNp, ciscoMlrRuleSetGroupRev1=ciscoMlrRuleSetGroupRev1, cmlrRuleOrigImsiMaxDigits=cmlrRuleOrigImsiMaxDigits, ciscoMlrMIBComplianceRev1=ciscoMlrMIBComplianceRev1, cmlrResultRowStatus=cmlrResultRowStatus, cmlrResultWeight=cmlrResultWeight, cmlrTriggerParameters=cmlrTriggerParameters, cmlrInstResultGttCounts=cmlrInstResultGttCounts, cmlrRuleOrigSmeTableNai=cmlrRuleOrigSmeTableNai, cmlrResultSetTable=cmlrResultSetTable, ciscoMlrAddressGroup=ciscoMlrAddressGroup, cmlrRuleResultGti=cmlrRuleResultGti, cmlrRuleSetName=cmlrRuleSetName, cmlrSubTriggerTableEntry=cmlrSubTriggerTableEntry, cmlrResultTable=cmlrResultTable, cmlrSubTriggerNp=cmlrSubTriggerNp, CmlrResultOctet=CmlrResultOctet, cmlrTriggerPc=cmlrTriggerPc, ciscoMlrMIBObjects=ciscoMlrMIBObjects, cmlrInstAbortCounts=cmlrInstAbortCounts, cmlrRuleOrigSmscNp=cmlrRuleOrigSmscNp, cmlrRuleOperationType=cmlrRuleOperationType, ciscoMlrRuleSetGroup=ciscoMlrRuleSetGroup, cmlrRuleOrigImsiGta=cmlrRuleOrigImsiGta, cmlrRuleSetTableEntry=cmlrRuleSetTableEntry, cmlrTriggerGti=cmlrTriggerGti, cmlrAddressTable=cmlrAddressTable, cmlrInstSriSmCounts=cmlrInstSriSmCounts, cmlrRuleSetRowStatus=cmlrRuleSetRowStatus, cmlrInstSmsMtCounts=cmlrInstSmsMtCounts, cmlrAddressResultSsn=cmlrAddressResultSsn, cmlrSubTriggerGti=cmlrSubTriggerGti, cmlrAddressResultPc=cmlrAddressResultPc, cmlrTriggerTableEntry=cmlrTriggerTableEntry, cmlrInstResultContinueCounts=cmlrInstResultContinueCounts, CmlrRuleSetName=CmlrRuleSetName, cmlrScalars=cmlrScalars, cmlrRuleResultSsn=cmlrRuleResultSsn, cmlrTriggerRuleset=cmlrTriggerRuleset, cmlrAddressResultTransType=cmlrAddressResultTransType, cmlrRuleSetProtocol=cmlrRuleSetProtocol, cmlrInstSmsNotifCounts=cmlrInstSmsNotifCounts, cmlrRuleDestSmeMinDigits=cmlrRuleDestSmeMinDigits, cmlrInstTableEntry=cmlrInstTableEntry, cmlrRuleResultNai=cmlrRuleResultNai, CmlrName=CmlrName, cmlrAddressTableEntry=cmlrAddressTableEntry, cmlrAddressResultGti=cmlrAddressResultGti, cmlrInstFailedTrigMatchCounts=cmlrInstFailedTrigMatchCounts, cmlrRuleTableEntry=cmlrRuleTableEntry, cmlrAddressType=cmlrAddressType, cmlrRuleDestSmeNai=cmlrRuleDestSmeNai, cmlrResultSetName=cmlrResultSetName, cmlrRuleOrigImsiTable=cmlrRuleOrigImsiTable, cmlrResultSetUnavailDiscard=cmlrResultSetUnavailDiscard, cmlrTriggerSsn=cmlrTriggerSsn, cmlrInstUnparsedCounts=cmlrInstUnparsedCounts, cmlrInstResultBlockCounts=cmlrInstResultBlockCounts, ciscoMlrMIBGroups=ciscoMlrMIBGroups, PYSNMP_MODULE_ID=ciscoMlrMIB, cmlrInstTable=cmlrInstTable, cmlrInstSmdPpCounts=cmlrInstSmdPpCounts, cmlrResultSetRowStatus=cmlrResultSetRowStatus, cmlrInstAlertScCounts=cmlrInstAlertScCounts, cmlrInstLastURL=cmlrInstLastURL, cmlrInstResultAsCounts=cmlrInstResultAsCounts, cmlrTriggerNai=cmlrTriggerNai, cmlrRuleOrigSmscMinDigits=cmlrRuleOrigSmscMinDigits, cmlrRuleOrigSmscGta=cmlrRuleOrigSmscGta, cmlrAddressResultOctet=cmlrAddressResultOctet)
