#
# PySNMP MIB module CISCO-CFS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source http://mibs.snmplabs.com:80/asn1/CISCO-CFS-MIB
# Produced by pysmi-0.3.4 at Sun Apr 21 23:24:58 2019
# On host aaqrabaw platform Linux version 4.15.0-47-generic by user aaqrabaw
# Using Python version 3.6.5 (default, Apr  1 2018, 05:46:30) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
TimeTicks, Counter32, Gauge32, Bits, ObjectIdentity, Integer32, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, MibIdentifier, NotificationType, IpAddress, ModuleIdentity, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "Counter32", "Gauge32", "Bits", "ObjectIdentity", "Integer32", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "MibIdentifier", "NotificationType", "IpAddress", "ModuleIdentity", "Unsigned32")
TimeStamp, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TimeStamp", "TextualConvention", "DisplayString")
ciscoCFSMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 433))
ciscoCFSMIB.setRevisions(('2006-06-13 00:00', '2005-11-30 00:00', '2005-04-27 00:00', '2004-12-24 00:00', '2004-12-03 00:00', '2004-09-15 00:00',))
if mibBuilder.loadTexts: ciscoCFSMIB.setLastUpdated('200606130000Z')
if mibBuilder.loadTexts: ciscoCFSMIB.setOrganization('Cisco Systems, Inc.')
ciscoCFSMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 433, 0))
ciscoCFSMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 433, 1))
ciscoCFSMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 433, 2))
cfsFeature = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 433, 1, 1))
cfsNotifObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 433, 1, 2))
cfsDiscoveryObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 433, 1, 3))
cfsDistCtrlObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 433, 1, 4))
class CiscoCFSAction(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))
    namedValues = NamedValues(("noop", 1), ("enable", 2), ("disable", 3), ("commit", 4), ("abort", 5), ("clear", 6))

class CiscoCFSFeatureStatus(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("unknown", 1), ("enabled", 2), ("disabled", 3))

class CiscoCFSFeatureActionResult(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))
    namedValues = NamedValues(("none", 1), ("success", 2), ("failed", 3), ("inProgress", 4), ("partialSuccess", 5))

class CiscoCFSScopeType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("none", 1), ("vsanID", 2))

class CiscoCFSScopeValue(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 255)

cfsFeatureOpTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 433, 1, 1, 1), )
if mibBuilder.loadTexts: cfsFeatureOpTable.setStatus('current')
cfsFeatureOpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 433, 1, 1, 1, 1), ).setIndexNames((0, "CISCO-CFS-MIB", "cfsFeatureOpName"))
if mibBuilder.loadTexts: cfsFeatureOpEntry.setStatus('current')
cfsFeatureOpName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 433, 1, 1, 1, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)))
if mibBuilder.loadTexts: cfsFeatureOpName.setStatus('current')
cfsFeatureOpAction = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 433, 1, 1, 1, 1, 2), CiscoCFSAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cfsFeatureOpAction.setStatus('current')
cfsFeatureOpScopeType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 433, 1, 1, 1, 1, 3), CiscoCFSScopeType().clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cfsFeatureOpScopeType.setStatus('current')
cfsFeatureOpScopeVal = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 433, 1, 1, 1, 1, 4), CiscoCFSScopeValue().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone(hexValue="")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cfsFeatureOpScopeVal.setStatus('current')
cfsFeatureOpLastAction = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 433, 1, 1, 1, 1, 5), CiscoCFSAction()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfsFeatureOpLastAction.setStatus('current')
cfsFeatureOpLastScopeType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 433, 1, 1, 1, 1, 6), CiscoCFSScopeType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfsFeatureOpLastScopeType.setStatus('current')
cfsFeatureOpLastScopeVal = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 433, 1, 1, 1, 1, 7), CiscoCFSScopeValue().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfsFeatureOpLastScopeVal.setStatus('current')
cfsFeatureOpLastActionResult = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 433, 1, 1, 1, 1, 8), CiscoCFSFeatureActionResult()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfsFeatureOpLastActionResult.setStatus('current')
cfsFeatureOpLastFailureReason = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 433, 1, 1, 1, 1, 9), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfsFeatureOpLastFailureReason.setStatus('current')
cfsFeatureOpShowCfgOption = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 433, 1, 1, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("runningConfig", 1), ("pendingConfig", 2))).clone('runningConfig')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cfsFeatureOpShowCfgOption.setStatus('deprecated')
cfsFeatureOpStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 433, 1, 1, 1, 1, 11), CiscoCFSFeatureStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfsFeatureOpStatus.setStatus('current')
cfsFeatureOpAttribs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 433, 1, 1, 1, 1, 12), Bits().clone(namedValues=NamedValues(("fcFabric", 0), ("ipNetwork", 1), ("vsanScope", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfsFeatureOpAttribs.setStatus('current')
cfsPendingConfOwnerTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 433, 1, 1, 2), )
if mibBuilder.loadTexts: cfsPendingConfOwnerTable.setStatus('current')
cfsPendingConfOwnerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 433, 1, 1, 2, 1), ).setIndexNames((0, "CISCO-CFS-MIB", "cfsFeatureOpName"), (0, "CISCO-CFS-MIB", "cfsPendingConfOwnerScopeType"), (0, "CISCO-CFS-MIB", "cfsPendingConfOwnerScopeVal"))
if mibBuilder.loadTexts: cfsPendingConfOwnerEntry.setStatus('current')
cfsPendingConfOwnerScopeType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 433, 1, 1, 2, 1, 1), CiscoCFSScopeType())
if mibBuilder.loadTexts: cfsPendingConfOwnerScopeType.setStatus('current')
cfsPendingConfOwnerScopeVal = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 433, 1, 1, 2, 1, 2), CiscoCFSScopeValue().subtype(subtypeSpec=ValueSizeConstraint(0, 32)))
if mibBuilder.loadTexts: cfsPendingConfOwnerScopeVal.setStatus('current')
cfsPendingConfOwnerAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 433, 1, 1, 2, 1, 3), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfsPendingConfOwnerAddrType.setStatus('current')
cfsPendingConfOwnerAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 433, 1, 1, 2, 1, 4), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfsPendingConfOwnerAddr.setStatus('current')
cfsPendingConfOwnerIDType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 433, 1, 1, 2, 1, 5), Bits().clone(namedValues=NamedValues(("other", 0), ("snmpCommunityName", 1), ("snmpv3SecurityName", 2), ("cliLoginName", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfsPendingConfOwnerIDType.setStatus('current')
cfsPendingConfOwnerID = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 433, 1, 1, 2, 1, 6), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfsPendingConfOwnerID.setStatus('current')
cfsMergeStatusTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 433, 1, 1, 3), )
if mibBuilder.loadTexts: cfsMergeStatusTable.setStatus('current')
cfsMergeStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 433, 1, 1, 3, 1), ).setIndexNames((0, "CISCO-CFS-MIB", "cfsFeatureOpName"), (0, "CISCO-CFS-MIB", "cfsMergeStatusScopeType"), (0, "CISCO-CFS-MIB", "cfsMergeStatusScopeVal"))
if mibBuilder.loadTexts: cfsMergeStatusEntry.setStatus('current')
cfsMergeStatusScopeType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 433, 1, 1, 3, 1, 1), CiscoCFSScopeType())
if mibBuilder.loadTexts: cfsMergeStatusScopeType.setStatus('current')
cfsMergeStatusScopeVal = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 433, 1, 1, 3, 1, 2), CiscoCFSScopeValue().subtype(subtypeSpec=ValueSizeConstraint(0, 32)))
if mibBuilder.loadTexts: cfsMergeStatusScopeVal.setStatus('current')
cfsMergeStatusValue = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 433, 1, 1, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("success", 1), ("inProgress", 2), ("failure", 3), ("waiting", 4), ("other", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfsMergeStatusValue.setStatus('current')
cfsMergeMembersTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 433, 1, 1, 4), )
if mibBuilder.loadTexts: cfsMergeMembersTable.setStatus('current')
cfsMergeMembersEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 433, 1, 1, 4, 1), ).setIndexNames((0, "CISCO-CFS-MIB", "cfsFeatureOpName"), (0, "CISCO-CFS-MIB", "cfsMergeStatusScopeType"), (0, "CISCO-CFS-MIB", "cfsMergeStatusScopeVal"), (0, "CISCO-CFS-MIB", "cfsMergeMemberAddrType"), (0, "CISCO-CFS-MIB", "cfsMergeMemberAddr"))
if mibBuilder.loadTexts: cfsMergeMembersEntry.setStatus('current')
cfsMergeMemberAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 433, 1, 1, 4, 1, 1), InetAddressType())
if mibBuilder.loadTexts: cfsMergeMemberAddrType.setStatus('current')
cfsMergeMemberAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 433, 1, 1, 4, 1, 2), InetAddress().subtype(subtypeSpec=ValueSizeConstraint(0, 32)))
if mibBuilder.loadTexts: cfsMergeMemberAddr.setStatus('current')
cfsMergeMemberFabricType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 433, 1, 1, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("local", 2), ("remote", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfsMergeMemberFabricType.setStatus('current')
cfsMergeMemberRole = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 433, 1, 1, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("master", 2), ("peer", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfsMergeMemberRole.setStatus('current')
cfsStartPeersDiscovery = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 433, 1, 3, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("startDiscovery", 1), ("noOp", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cfsStartPeersDiscovery.setStatus('current')
cfsPeersDiscoveryResult = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 433, 1, 3, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("notInitiated", 1), ("inProgress", 2), ("successful", 3), ("failed", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfsPeersDiscoveryResult.setStatus('current')
cfsPeersDiscoveryFailureReason = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 433, 1, 3, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfsPeersDiscoveryFailureReason.setStatus('current')
cfsPeersTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 433, 1, 1, 5), )
if mibBuilder.loadTexts: cfsPeersTable.setStatus('current')
cfsPeersEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 433, 1, 1, 5, 1), ).setIndexNames((0, "CISCO-CFS-MIB", "cfsPeerAddrType"), (0, "CISCO-CFS-MIB", "cfsPeerAddr"))
if mibBuilder.loadTexts: cfsPeersEntry.setStatus('current')
cfsPeerAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 433, 1, 1, 5, 1, 1), InetAddressType())
if mibBuilder.loadTexts: cfsPeerAddrType.setStatus('current')
cfsPeerAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 433, 1, 1, 5, 1, 2), InetAddress().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfsPeerAddr.setStatus('current')
cfsFeaturePeersTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 433, 1, 1, 6), )
if mibBuilder.loadTexts: cfsFeaturePeersTable.setStatus('current')
cfsFeaturePeersEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 433, 1, 1, 6, 1), ).setIndexNames((0, "CISCO-CFS-MIB", "cfsFeatureOpName"), (0, "CISCO-CFS-MIB", "cfsFeaturePeersScopeType"), (0, "CISCO-CFS-MIB", "cfsFeaturePeersScopeVal"), (0, "CISCO-CFS-MIB", "cfsFeaturePeersAddrType"), (0, "CISCO-CFS-MIB", "cfsFeaturePeersAddr"))
if mibBuilder.loadTexts: cfsFeaturePeersEntry.setStatus('current')
cfsFeaturePeersScopeType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 433, 1, 1, 6, 1, 1), CiscoCFSScopeType())
if mibBuilder.loadTexts: cfsFeaturePeersScopeType.setStatus('current')
cfsFeaturePeersScopeVal = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 433, 1, 1, 6, 1, 2), CiscoCFSScopeValue().subtype(subtypeSpec=ValueSizeConstraint(0, 32)))
if mibBuilder.loadTexts: cfsFeaturePeersScopeVal.setStatus('current')
cfsFeaturePeersAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 433, 1, 1, 6, 1, 3), InetAddressType())
if mibBuilder.loadTexts: cfsFeaturePeersAddrType.setStatus('current')
cfsFeaturePeersAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 433, 1, 1, 6, 1, 4), InetAddress().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfsFeaturePeersAddr.setStatus('current')
cfsFeatureOpExtTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 433, 1, 1, 7), )
if mibBuilder.loadTexts: cfsFeatureOpExtTable.setStatus('current')
cfsFeatureOpExtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 433, 1, 1, 7, 1), ).setIndexNames((0, "CISCO-CFS-MIB", "cfsFeatureOpName"), (0, "CISCO-CFS-MIB", "cfsFeatureOpExtScopeType"), (0, "CISCO-CFS-MIB", "cfsFeatureOpExtScopeVal"))
if mibBuilder.loadTexts: cfsFeatureOpExtEntry.setStatus('current')
cfsFeatureOpExtScopeType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 433, 1, 1, 7, 1, 1), CiscoCFSScopeType())
if mibBuilder.loadTexts: cfsFeatureOpExtScopeType.setStatus('current')
cfsFeatureOpExtScopeVal = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 433, 1, 1, 7, 1, 2), CiscoCFSScopeValue().subtype(subtypeSpec=ValueSizeConstraint(0, 32)))
if mibBuilder.loadTexts: cfsFeatureOpExtScopeVal.setStatus('current')
cfsFeatureOpExtLastAction = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 433, 1, 1, 7, 1, 3), CiscoCFSAction()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfsFeatureOpExtLastAction.setStatus('current')
cfsFeatureOpExtLastActionResult = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 433, 1, 1, 7, 1, 4), CiscoCFSFeatureActionResult()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfsFeatureOpExtLastActionResult.setStatus('current')
cfsFeatureOpExtLastFailureReason = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 433, 1, 1, 7, 1, 5), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfsFeatureOpExtLastFailureReason.setStatus('current')
cfsFeatureOpExtShowCfgOption = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 433, 1, 1, 7, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("runningConfig", 1), ("pendingConfig", 2))).clone('runningConfig')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cfsFeatureOpExtShowCfgOption.setStatus('current')
cfsFeatureOpExtLastActionTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 433, 1, 1, 7, 1, 7), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfsFeatureOpExtLastActionTime.setStatus('current')
cfsDistCtrl = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 433, 1, 4, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cfsDistCtrl.setStatus('current')
cfsDistCtrlTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 433, 1, 4, 2), )
if mibBuilder.loadTexts: cfsDistCtrlTable.setStatus('current')
cfsDistCtrlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 433, 1, 4, 2, 1), ).setIndexNames((0, "CISCO-CFS-MIB", "cfsDistCtrlAddrType"))
if mibBuilder.loadTexts: cfsDistCtrlEntry.setStatus('current')
cfsDistCtrlAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 433, 1, 4, 2, 1, 1), InetAddressType())
if mibBuilder.loadTexts: cfsDistCtrlAddrType.setStatus('current')
cfsDistCtrlAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 433, 1, 4, 2, 1, 2), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cfsDistCtrlAddr.setStatus('current')
cfsDistCtrlAction = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 433, 1, 4, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cfsDistCtrlAction.setStatus('current')
cfsMergeFailFeatureName = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 433, 1, 2, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cfsMergeFailFeatureName.setStatus('current')
cfsMergeFailScopeType = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 433, 1, 2, 2), CiscoCFSScopeType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cfsMergeFailScopeType.setStatus('current')
cfsMergeFailScopeVal = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 433, 1, 2, 3), CiscoCFSScopeValue().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cfsMergeFailScopeVal.setStatus('current')
cfsMergeFailReasonDescription = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 433, 1, 2, 4), SnmpAdminString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cfsMergeFailReasonDescription.setStatus('current')
ciscoCFSFeatureActionNotif = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 433, 0, 1)).setObjects(("CISCO-CFS-MIB", "cfsFeatureOpLastAction"), ("CISCO-CFS-MIB", "cfsFeatureOpLastScopeType"), ("CISCO-CFS-MIB", "cfsFeatureOpLastScopeVal"), ("CISCO-CFS-MIB", "cfsFeatureOpLastActionResult"))
if mibBuilder.loadTexts: ciscoCFSFeatureActionNotif.setStatus('current')
ciscoCFSMergeFailNotif = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 433, 0, 2)).setObjects(("CISCO-CFS-MIB", "cfsMergeFailFeatureName"), ("CISCO-CFS-MIB", "cfsMergeFailScopeType"), ("CISCO-CFS-MIB", "cfsMergeFailScopeVal"), ("CISCO-CFS-MIB", "cfsMergeFailReasonDescription"))
if mibBuilder.loadTexts: ciscoCFSMergeFailNotif.setStatus('current')
ciscoCFSDiscoveryCompleteNotif = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 433, 0, 3)).setObjects(("CISCO-CFS-MIB", "cfsPeersDiscoveryResult"), ("CISCO-CFS-MIB", "cfsPeersDiscoveryFailureReason"))
if mibBuilder.loadTexts: ciscoCFSDiscoveryCompleteNotif.setStatus('current')
ciscoCFSMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 433, 2, 1))
ciscoCFSMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 433, 2, 2))
ciscoCFSMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 433, 2, 1, 1)).setObjects(("CISCO-CFS-MIB", "cfsFeatureOpGroup"), ("CISCO-CFS-MIB", "cfsPendingConfOwnerGroup"), ("CISCO-CFS-MIB", "cfsFeatureActionNotifGroup"), ("CISCO-CFS-MIB", "cfsFeatureNotifObjectsGroup"), ("CISCO-CFS-MIB", "cfsMergeFailNotifGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoCFSMIBCompliance = ciscoCFSMIBCompliance.setStatus('deprecated')
ciscoCFSMIBComplianceRev1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 433, 2, 1, 2)).setObjects(("CISCO-CFS-MIB", "cfsFeatureOpGroupRev1"), ("CISCO-CFS-MIB", "cfsPendingConfOwnerGroup"), ("CISCO-CFS-MIB", "cfsFeatureActionNotifGroup"), ("CISCO-CFS-MIB", "cfsMembersGroup"), ("CISCO-CFS-MIB", "cfsPeerDiscoveryNotifGroup"), ("CISCO-CFS-MIB", "cfsFeatureOpExtGroup"), ("CISCO-CFS-MIB", "cfsFeatureNotifObjectsGroup"), ("CISCO-CFS-MIB", "cfsMergeFailNotifGroup"), ("CISCO-CFS-MIB", "cfsDistCtrlGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoCFSMIBComplianceRev1 = ciscoCFSMIBComplianceRev1.setStatus('deprecated')
ciscoCFSMIBComplianceRev2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 433, 2, 1, 3)).setObjects(("CISCO-CFS-MIB", "cfsFeatureOpGroupRev2"), ("CISCO-CFS-MIB", "cfsPendingConfOwnerGroup"), ("CISCO-CFS-MIB", "cfsFeatureActionNotifGroup"), ("CISCO-CFS-MIB", "cfsMembersGroup"), ("CISCO-CFS-MIB", "cfsPeerDiscoveryNotifGroup"), ("CISCO-CFS-MIB", "cfsFeatureOpExtGroup"), ("CISCO-CFS-MIB", "cfsFeatureNotifObjectsGroup"), ("CISCO-CFS-MIB", "cfsMergeFailNotifGroup"), ("CISCO-CFS-MIB", "cfsDistCtrlGroup"), ("CISCO-CFS-MIB", "cfsDistCtrlInetGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoCFSMIBComplianceRev2 = ciscoCFSMIBComplianceRev2.setStatus('deprecated')
ciscoCFSMIBComplianceRev3 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 433, 2, 1, 4)).setObjects(("CISCO-CFS-MIB", "cfsFeatureOpGroupRev2"), ("CISCO-CFS-MIB", "cfsPendingConfOwnerGroup"), ("CISCO-CFS-MIB", "cfsFeatureActionNotifGroup"), ("CISCO-CFS-MIB", "cfsMembersGroup"), ("CISCO-CFS-MIB", "cfsPeerDiscoveryNotifGroup"), ("CISCO-CFS-MIB", "cfsFeatureOpExtGroupRev1"), ("CISCO-CFS-MIB", "cfsFeatureNotifObjectsGroup"), ("CISCO-CFS-MIB", "cfsMergeFailNotifGroup"), ("CISCO-CFS-MIB", "cfsDistCtrlGroup"), ("CISCO-CFS-MIB", "cfsDistCtrlInetGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoCFSMIBComplianceRev3 = ciscoCFSMIBComplianceRev3.setStatus('current')
cfsFeatureOpGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 433, 2, 2, 1)).setObjects(("CISCO-CFS-MIB", "cfsFeatureOpAction"), ("CISCO-CFS-MIB", "cfsFeatureOpScopeType"), ("CISCO-CFS-MIB", "cfsFeatureOpScopeVal"), ("CISCO-CFS-MIB", "cfsFeatureOpLastAction"), ("CISCO-CFS-MIB", "cfsFeatureOpLastScopeType"), ("CISCO-CFS-MIB", "cfsFeatureOpLastScopeVal"), ("CISCO-CFS-MIB", "cfsFeatureOpLastActionResult"), ("CISCO-CFS-MIB", "cfsFeatureOpLastFailureReason"), ("CISCO-CFS-MIB", "cfsFeatureOpShowCfgOption"), ("CISCO-CFS-MIB", "cfsFeatureOpStatus"), ("CISCO-CFS-MIB", "cfsMergeStatusValue"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cfsFeatureOpGroup = cfsFeatureOpGroup.setStatus('deprecated')
cfsPendingConfOwnerGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 433, 2, 2, 2)).setObjects(("CISCO-CFS-MIB", "cfsPendingConfOwnerAddrType"), ("CISCO-CFS-MIB", "cfsPendingConfOwnerAddr"), ("CISCO-CFS-MIB", "cfsPendingConfOwnerIDType"), ("CISCO-CFS-MIB", "cfsPendingConfOwnerID"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cfsPendingConfOwnerGroup = cfsPendingConfOwnerGroup.setStatus('current')
cfsFeatureNotifObjectsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 433, 2, 2, 3)).setObjects(("CISCO-CFS-MIB", "cfsMergeFailFeatureName"), ("CISCO-CFS-MIB", "cfsMergeFailScopeType"), ("CISCO-CFS-MIB", "cfsMergeFailScopeVal"), ("CISCO-CFS-MIB", "cfsMergeFailReasonDescription"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cfsFeatureNotifObjectsGroup = cfsFeatureNotifObjectsGroup.setStatus('current')
cfsFeatureActionNotifGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 433, 2, 2, 4)).setObjects(("CISCO-CFS-MIB", "ciscoCFSFeatureActionNotif"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cfsFeatureActionNotifGroup = cfsFeatureActionNotifGroup.setStatus('current')
cfsMergeFailNotifGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 433, 2, 2, 5)).setObjects(("CISCO-CFS-MIB", "ciscoCFSMergeFailNotif"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cfsMergeFailNotifGroup = cfsMergeFailNotifGroup.setStatus('current')
cfsMembersGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 433, 2, 2, 6)).setObjects(("CISCO-CFS-MIB", "cfsMergeMemberFabricType"), ("CISCO-CFS-MIB", "cfsMergeMemberRole"), ("CISCO-CFS-MIB", "cfsStartPeersDiscovery"), ("CISCO-CFS-MIB", "cfsPeersDiscoveryResult"), ("CISCO-CFS-MIB", "cfsPeersDiscoveryFailureReason"), ("CISCO-CFS-MIB", "cfsPeerAddr"), ("CISCO-CFS-MIB", "cfsFeaturePeersAddr"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cfsMembersGroup = cfsMembersGroup.setStatus('current')
cfsFeatureOpExtGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 433, 2, 2, 7)).setObjects(("CISCO-CFS-MIB", "cfsFeatureOpExtLastAction"), ("CISCO-CFS-MIB", "cfsFeatureOpExtLastActionResult"), ("CISCO-CFS-MIB", "cfsFeatureOpExtLastFailureReason"), ("CISCO-CFS-MIB", "cfsFeatureOpExtShowCfgOption"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cfsFeatureOpExtGroup = cfsFeatureOpExtGroup.setStatus('deprecated')
cfsPeerDiscoveryNotifGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 433, 2, 2, 8)).setObjects(("CISCO-CFS-MIB", "ciscoCFSDiscoveryCompleteNotif"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cfsPeerDiscoveryNotifGroup = cfsPeerDiscoveryNotifGroup.setStatus('current')
cfsFeatureOpGroupRev1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 433, 2, 2, 9)).setObjects(("CISCO-CFS-MIB", "cfsFeatureOpAction"), ("CISCO-CFS-MIB", "cfsFeatureOpScopeType"), ("CISCO-CFS-MIB", "cfsFeatureOpScopeVal"), ("CISCO-CFS-MIB", "cfsFeatureOpLastAction"), ("CISCO-CFS-MIB", "cfsFeatureOpLastScopeType"), ("CISCO-CFS-MIB", "cfsFeatureOpLastScopeVal"), ("CISCO-CFS-MIB", "cfsFeatureOpLastActionResult"), ("CISCO-CFS-MIB", "cfsFeatureOpLastFailureReason"), ("CISCO-CFS-MIB", "cfsFeatureOpStatus"), ("CISCO-CFS-MIB", "cfsMergeStatusValue"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cfsFeatureOpGroupRev1 = cfsFeatureOpGroupRev1.setStatus('deprecated')
cfsDistCtrlGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 433, 2, 2, 10)).setObjects(("CISCO-CFS-MIB", "cfsDistCtrl"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cfsDistCtrlGroup = cfsDistCtrlGroup.setStatus('current')
cfsDistCtrlInetGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 433, 2, 2, 11)).setObjects(("CISCO-CFS-MIB", "cfsDistCtrlAddr"), ("CISCO-CFS-MIB", "cfsDistCtrlAction"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cfsDistCtrlInetGroup = cfsDistCtrlInetGroup.setStatus('current')
cfsFeatureOpGroupRev2 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 433, 2, 2, 12)).setObjects(("CISCO-CFS-MIB", "cfsFeatureOpAction"), ("CISCO-CFS-MIB", "cfsFeatureOpScopeType"), ("CISCO-CFS-MIB", "cfsFeatureOpScopeVal"), ("CISCO-CFS-MIB", "cfsFeatureOpLastAction"), ("CISCO-CFS-MIB", "cfsFeatureOpLastScopeType"), ("CISCO-CFS-MIB", "cfsFeatureOpLastScopeVal"), ("CISCO-CFS-MIB", "cfsFeatureOpLastActionResult"), ("CISCO-CFS-MIB", "cfsFeatureOpLastFailureReason"), ("CISCO-CFS-MIB", "cfsFeatureOpStatus"), ("CISCO-CFS-MIB", "cfsMergeStatusValue"), ("CISCO-CFS-MIB", "cfsFeatureOpAttribs"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cfsFeatureOpGroupRev2 = cfsFeatureOpGroupRev2.setStatus('current')
cfsFeatureOpExtGroupRev1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 433, 2, 2, 13)).setObjects(("CISCO-CFS-MIB", "cfsFeatureOpExtLastAction"), ("CISCO-CFS-MIB", "cfsFeatureOpExtLastActionTime"), ("CISCO-CFS-MIB", "cfsFeatureOpExtLastActionResult"), ("CISCO-CFS-MIB", "cfsFeatureOpExtLastFailureReason"), ("CISCO-CFS-MIB", "cfsFeatureOpExtShowCfgOption"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cfsFeatureOpExtGroupRev1 = cfsFeatureOpExtGroupRev1.setStatus('current')
mibBuilder.exportSymbols("CISCO-CFS-MIB", cfsStartPeersDiscovery=cfsStartPeersDiscovery, ciscoCFSMIBConformance=ciscoCFSMIBConformance, cfsNotifObjects=cfsNotifObjects, cfsFeatureOpExtLastAction=cfsFeatureOpExtLastAction, ciscoCFSMIBComplianceRev1=ciscoCFSMIBComplianceRev1, cfsMergeMembersTable=cfsMergeMembersTable, cfsPendingConfOwnerIDType=cfsPendingConfOwnerIDType, cfsFeatureOpAttribs=cfsFeatureOpAttribs, cfsFeatureOpAction=cfsFeatureOpAction, cfsFeaturePeersScopeVal=cfsFeaturePeersScopeVal, cfsDistCtrlObjects=cfsDistCtrlObjects, cfsDiscoveryObjects=cfsDiscoveryObjects, cfsMergeStatusScopeVal=cfsMergeStatusScopeVal, cfsFeatureNotifObjectsGroup=cfsFeatureNotifObjectsGroup, ciscoCFSMergeFailNotif=ciscoCFSMergeFailNotif, cfsPendingConfOwnerGroup=cfsPendingConfOwnerGroup, ciscoCFSMIBCompliance=ciscoCFSMIBCompliance, cfsPendingConfOwnerScopeVal=cfsPendingConfOwnerScopeVal, CiscoCFSFeatureStatus=CiscoCFSFeatureStatus, cfsDistCtrlAddr=cfsDistCtrlAddr, cfsDistCtrlGroup=cfsDistCtrlGroup, cfsMergeFailReasonDescription=cfsMergeFailReasonDescription, CiscoCFSScopeValue=CiscoCFSScopeValue, cfsMergeMemberRole=cfsMergeMemberRole, cfsPendingConfOwnerID=cfsPendingConfOwnerID, cfsFeatureOpShowCfgOption=cfsFeatureOpShowCfgOption, cfsDistCtrlEntry=cfsDistCtrlEntry, cfsFeaturePeersScopeType=cfsFeaturePeersScopeType, cfsFeatureOpExtGroupRev1=cfsFeatureOpExtGroupRev1, cfsMergeFailScopeVal=cfsMergeFailScopeVal, cfsFeatureOpEntry=cfsFeatureOpEntry, cfsFeatureOpExtShowCfgOption=cfsFeatureOpExtShowCfgOption, CiscoCFSAction=CiscoCFSAction, cfsFeatureActionNotifGroup=cfsFeatureActionNotifGroup, cfsMergeStatusScopeType=cfsMergeStatusScopeType, ciscoCFSDiscoveryCompleteNotif=ciscoCFSDiscoveryCompleteNotif, cfsFeatureOpScopeVal=cfsFeatureOpScopeVal, cfsFeatureOpExtLastActionTime=cfsFeatureOpExtLastActionTime, cfsFeature=cfsFeature, cfsFeatureOpLastScopeType=cfsFeatureOpLastScopeType, cfsPeersDiscoveryFailureReason=cfsPeersDiscoveryFailureReason, cfsFeatureOpExtLastFailureReason=cfsFeatureOpExtLastFailureReason, CiscoCFSFeatureActionResult=CiscoCFSFeatureActionResult, cfsFeatureOpLastScopeVal=cfsFeatureOpLastScopeVal, cfsPeersTable=cfsPeersTable, PYSNMP_MODULE_ID=ciscoCFSMIB, cfsMembersGroup=cfsMembersGroup, cfsDistCtrlInetGroup=cfsDistCtrlInetGroup, ciscoCFSMIBObjects=ciscoCFSMIBObjects, cfsMergeStatusEntry=cfsMergeStatusEntry, cfsPendingConfOwnerAddrType=cfsPendingConfOwnerAddrType, cfsDistCtrlTable=cfsDistCtrlTable, cfsDistCtrlAddrType=cfsDistCtrlAddrType, cfsFeatureOpExtGroup=cfsFeatureOpExtGroup, cfsPeerAddrType=cfsPeerAddrType, cfsPendingConfOwnerScopeType=cfsPendingConfOwnerScopeType, ciscoCFSMIBNotifs=ciscoCFSMIBNotifs, cfsMergeMembersEntry=cfsMergeMembersEntry, cfsMergeStatusTable=cfsMergeStatusTable, ciscoCFSMIB=ciscoCFSMIB, cfsMergeStatusValue=cfsMergeStatusValue, cfsMergeMemberAddr=cfsMergeMemberAddr, cfsFeatureOpGroupRev2=cfsFeatureOpGroupRev2, cfsFeaturePeersAddr=cfsFeaturePeersAddr, cfsPeerDiscoveryNotifGroup=cfsPeerDiscoveryNotifGroup, cfsFeatureOpScopeType=cfsFeatureOpScopeType, cfsFeatureOpLastActionResult=cfsFeatureOpLastActionResult, cfsMergeMemberAddrType=cfsMergeMemberAddrType, cfsFeaturePeersTable=cfsFeaturePeersTable, cfsPendingConfOwnerTable=cfsPendingConfOwnerTable, cfsMergeMemberFabricType=cfsMergeMemberFabricType, cfsPendingConfOwnerAddr=cfsPendingConfOwnerAddr, cfsDistCtrlAction=cfsDistCtrlAction, cfsFeatureOpExtScopeVal=cfsFeatureOpExtScopeVal, cfsFeatureOpLastAction=cfsFeatureOpLastAction, cfsDistCtrl=cfsDistCtrl, cfsPeersEntry=cfsPeersEntry, cfsFeaturePeersEntry=cfsFeaturePeersEntry, ciscoCFSMIBComplianceRev3=ciscoCFSMIBComplianceRev3, ciscoCFSMIBComplianceRev2=ciscoCFSMIBComplianceRev2, cfsFeaturePeersAddrType=cfsFeaturePeersAddrType, cfsMergeFailScopeType=cfsMergeFailScopeType, cfsFeatureOpStatus=cfsFeatureOpStatus, cfsFeatureOpExtTable=cfsFeatureOpExtTable, cfsFeatureOpGroupRev1=cfsFeatureOpGroupRev1, cfsFeatureOpName=cfsFeatureOpName, cfsFeatureOpExtLastActionResult=cfsFeatureOpExtLastActionResult, cfsFeatureOpTable=cfsFeatureOpTable, cfsMergeFailFeatureName=cfsMergeFailFeatureName, cfsFeatureOpExtScopeType=cfsFeatureOpExtScopeType, ciscoCFSMIBCompliances=ciscoCFSMIBCompliances, ciscoCFSMIBGroups=ciscoCFSMIBGroups, cfsFeatureOpLastFailureReason=cfsFeatureOpLastFailureReason, cfsMergeFailNotifGroup=cfsMergeFailNotifGroup, ciscoCFSFeatureActionNotif=ciscoCFSFeatureActionNotif, cfsPendingConfOwnerEntry=cfsPendingConfOwnerEntry, cfsFeatureOpGroup=cfsFeatureOpGroup, cfsFeatureOpExtEntry=cfsFeatureOpExtEntry, CiscoCFSScopeType=CiscoCFSScopeType, cfsPeerAddr=cfsPeerAddr, cfsPeersDiscoveryResult=cfsPeersDiscoveryResult)
