#
# PySNMP MIB module CISCO-ISDNU-IF-MIB (http://snmplabs.com/pysmi)
# ASN.1 source http://mibs.snmplabs.com:80/asn1/CISCO-ISDNU-IF-MIB
# Produced by pysmi-0.3.4 at Sun Apr 21 23:40:00 2019
# On host aaqrabaw platform Linux version 4.15.0-47-generic by user aaqrabaw
# Using Python version 3.6.5 (default, Apr  1 2018, 05:46:30) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
TimeTicks, ObjectIdentity, iso, ModuleIdentity, Gauge32, IpAddress, Integer32, MibIdentifier, Counter32, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, Counter64, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "ObjectIdentity", "iso", "ModuleIdentity", "Gauge32", "IpAddress", "Integer32", "MibIdentifier", "Counter32", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "Counter64", "Unsigned32")
TruthValue, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "TextualConvention", "DisplayString")
ciscoIsdnuIfMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 18))
if mibBuilder.loadTexts: ciscoIsdnuIfMIB.setLastUpdated('9603180000Z')
if mibBuilder.loadTexts: ciscoIsdnuIfMIB.setOrganization('Cisco Systems, Inc.')
ciuIfObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 18, 1))
ciuInterface = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 18, 1, 1))
ciuIfExternalSTPort = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 18, 1, 2))
ciuIfMIBNotificationEnables = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 18, 1, 3))
ciuIfStaticConfigTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 18, 1, 1, 1), )
if mibBuilder.loadTexts: ciuIfStaticConfigTable.setStatus('current')
ciuIfStaticConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 18, 1, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: ciuIfStaticConfigEntry.setStatus('current')
ciuIfType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 18, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("addOnU", 2), ("onBoardU", 3), ("onBoardIntegUandSTPort", 4), ("addOnIntegUandSTPort", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciuIfType.setStatus('current')
ciuIfStatusTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 18, 1, 1, 2), )
if mibBuilder.loadTexts: ciuIfStatusTable.setStatus('current')
ciuIfStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 18, 1, 1, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: ciuIfStatusEntry.setStatus('current')
ciuIfStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 18, 1, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("activated", 1), ("activationPending", 2), ("deactivated", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciuIfStatus.setStatus('current')
ciuIfEocCommand = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 18, 1, 1, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 48))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciuIfEocCommand.setStatus('current')
ciuIfOverHeadBits = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 18, 1, 1, 2, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciuIfOverHeadBits.setStatus('current')
ciuIfFebeErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 18, 1, 1, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciuIfFebeErrors.setStatus('current')
ciuIfNebeErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 18, 1, 1, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciuIfNebeErrors.setStatus('current')
ciuIfLoopStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 18, 1, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("none", 1), ("type2Loopback", 2), ("type3Loopback", 3), ("ntQuietMode", 4), ("ilmtMode", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciuIfLoopStatus.setStatus('current')
ciuIfExternalSTPortStatusTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 18, 1, 2, 1), )
if mibBuilder.loadTexts: ciuIfExternalSTPortStatusTable.setStatus('current')
ciuIfExternalSTPortStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 18, 1, 2, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CISCO-ISDNU-IF-MIB", "ciuIfExternalSTPortNumber"))
if mibBuilder.loadTexts: ciuIfExternalSTPortStatusEntry.setStatus('current')
ciuIfExternalSTPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 18, 1, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8)))
if mibBuilder.loadTexts: ciuIfExternalSTPortNumber.setStatus('current')
ciuIfExternalSTPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 18, 1, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("activated", 1), ("activationPending", 2), ("deactivated", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciuIfExternalSTPortStatus.setStatus('current')
ciuIfEnableULoopStatusNotification = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 18, 1, 3, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ciuIfEnableULoopStatusNotification.setStatus('current')
ciuIfMIBNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 18, 2))
ciuIfMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 18, 2, 0))
ciuIfLoopStatusNotification = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 18, 2, 0, 1)).setObjects(("CISCO-ISDNU-IF-MIB", "ciuIfLoopStatus"))
if mibBuilder.loadTexts: ciuIfLoopStatusNotification.setStatus('current')
ciuIfMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 18, 3))
ciuIfMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 18, 3, 1))
ciuIfMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 18, 3, 2))
ciuIfMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 18, 3, 1, 1)).setObjects(("CISCO-ISDNU-IF-MIB", "ciuIfMIBGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciuIfMIBCompliance = ciuIfMIBCompliance.setStatus('current')
ciuIfMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 18, 3, 2, 1)).setObjects(("CISCO-ISDNU-IF-MIB", "ciuIfType"), ("CISCO-ISDNU-IF-MIB", "ciuIfStatus"), ("CISCO-ISDNU-IF-MIB", "ciuIfEocCommand"), ("CISCO-ISDNU-IF-MIB", "ciuIfOverHeadBits"), ("CISCO-ISDNU-IF-MIB", "ciuIfFebeErrors"), ("CISCO-ISDNU-IF-MIB", "ciuIfNebeErrors"), ("CISCO-ISDNU-IF-MIB", "ciuIfLoopStatus"), ("CISCO-ISDNU-IF-MIB", "ciuIfExternalSTPortStatus"), ("CISCO-ISDNU-IF-MIB", "ciuIfEnableULoopStatusNotification"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciuIfMIBGroup = ciuIfMIBGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-ISDNU-IF-MIB", PYSNMP_MODULE_ID=ciscoIsdnuIfMIB, ciuIfStaticConfigTable=ciuIfStaticConfigTable, ciuIfLoopStatusNotification=ciuIfLoopStatusNotification, ciuIfMIBGroups=ciuIfMIBGroups, ciuIfOverHeadBits=ciuIfOverHeadBits, ciuIfMIBGroup=ciuIfMIBGroup, ciuIfExternalSTPortStatusTable=ciuIfExternalSTPortStatusTable, ciuIfStatusTable=ciuIfStatusTable, ciuInterface=ciuInterface, ciscoIsdnuIfMIB=ciscoIsdnuIfMIB, ciuIfMIBCompliances=ciuIfMIBCompliances, ciuIfMIBNotifications=ciuIfMIBNotifications, ciuIfMIBNotificationPrefix=ciuIfMIBNotificationPrefix, ciuIfEocCommand=ciuIfEocCommand, ciuIfStatusEntry=ciuIfStatusEntry, ciuIfStatus=ciuIfStatus, ciuIfEnableULoopStatusNotification=ciuIfEnableULoopStatusNotification, ciuIfLoopStatus=ciuIfLoopStatus, ciuIfNebeErrors=ciuIfNebeErrors, ciuIfMIBConformance=ciuIfMIBConformance, ciuIfMIBCompliance=ciuIfMIBCompliance, ciuIfFebeErrors=ciuIfFebeErrors, ciuIfExternalSTPortStatus=ciuIfExternalSTPortStatus, ciuIfObjects=ciuIfObjects, ciuIfExternalSTPort=ciuIfExternalSTPort, ciuIfExternalSTPortNumber=ciuIfExternalSTPortNumber, ciuIfMIBNotificationEnables=ciuIfMIBNotificationEnables, ciuIfType=ciuIfType, ciuIfStaticConfigEntry=ciuIfStaticConfigEntry, ciuIfExternalSTPortStatusEntry=ciuIfExternalSTPortStatusEntry)
