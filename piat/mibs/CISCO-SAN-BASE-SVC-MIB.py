#
# PySNMP MIB module CISCO-SAN-BASE-SVC-MIB (http://snmplabs.com/pysmi)
# ASN.1 source http://mibs.snmplabs.com:80/asn1/CISCO-SAN-BASE-SVC-MIB
# Produced by pysmi-0.3.4 at Sun Apr 21 23:39:36 2019
# On host aaqrabaw platform Linux version 4.15.0-47-generic by user aaqrabaw
# Using Python version 3.6.5 (default, Apr  1 2018, 05:46:30) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
FcNameId, = mibBuilder.importSymbols("CISCO-ST-TC", "FcNameId")
ifDescr, InterfaceIndex = mibBuilder.importSymbols("IF-MIB", "ifDescr", "InterfaceIndex")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, TimeTicks, MibIdentifier, iso, ObjectIdentity, Unsigned32, Bits, ModuleIdentity, Counter64, NotificationType, IpAddress, Gauge32, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "TimeTicks", "MibIdentifier", "iso", "ObjectIdentity", "Unsigned32", "Bits", "ModuleIdentity", "Counter64", "NotificationType", "IpAddress", "Gauge32", "Integer32")
TextualConvention, StorageType, TimeStamp, TruthValue, RowStatus, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "StorageType", "TimeStamp", "TruthValue", "RowStatus", "DisplayString")
ciscoSanBaseSvcMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 702))
ciscoSanBaseSvcMIB.setRevisions(('2009-06-11 00:00',))
if mibBuilder.loadTexts: ciscoSanBaseSvcMIB.setLastUpdated('200906110000Z')
if mibBuilder.loadTexts: ciscoSanBaseSvcMIB.setOrganization('Cisco Systems Inc.')
ciscoSanBaseSvcMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 702, 0))
ciscoSanBaseSvcMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 702, 1))
ciscoSanBaseSvcMIBConform = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 702, 2))
cSanBaseSvcConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 702, 1, 1))
cSanBaseSvcInterface = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 702, 1, 2))
class CiscoSanBaseSvcInterfaceStatus(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("unknown", 1), ("initializing", 2), ("offline", 3), ("online", 4))

class CiscoSanBaseSvcClusterStatus(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))
    namedValues = NamedValues(("unknown", 1), ("inactive", 2), ("degraded", 3), ("recovery", 4), ("active", 5))

class CiscoSanBaseSvcClusterIndex(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(8, 8)
    fixedLength = 8

cSanBaseSvcClusterTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 702, 1, 1, 1), )
if mibBuilder.loadTexts: cSanBaseSvcClusterTable.setStatus('current')
cSanBaseSvcClusterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 702, 1, 1, 1, 1), ).setIndexNames((0, "CISCO-SAN-BASE-SVC-MIB", "cSanBaseSvcClusterId"))
if mibBuilder.loadTexts: cSanBaseSvcClusterEntry.setStatus('current')
cSanBaseSvcClusterId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 702, 1, 1, 1, 1, 1), CiscoSanBaseSvcClusterIndex())
if mibBuilder.loadTexts: cSanBaseSvcClusterId.setStatus('current')
cSanBaseSvcClusterName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 702, 1, 1, 1, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cSanBaseSvcClusterName.setStatus('current')
cSanBaseSvcClusterState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 702, 1, 1, 1, 1, 3), CiscoSanBaseSvcClusterStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSanBaseSvcClusterState.setStatus('current')
cSanBaseSvcClusterMasterInetAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 702, 1, 1, 1, 1, 4), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSanBaseSvcClusterMasterInetAddrType.setStatus('current')
cSanBaseSvcClusterMasterInetAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 702, 1, 1, 1, 1, 5), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSanBaseSvcClusterMasterInetAddr.setStatus('current')
cSanBaseSvcClusterStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 702, 1, 1, 1, 1, 6), StorageType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cSanBaseSvcClusterStorageType.setStatus('current')
cSanBaseSvcClusterRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 702, 1, 1, 1, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cSanBaseSvcClusterRowStatus.setStatus('current')
cSanBaseSvcClusterApplication = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 702, 1, 1, 1, 1, 8), SnmpAdminString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cSanBaseSvcClusterApplication.setStatus('current')
cSanBaseSvcClusterMembersTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 702, 1, 1, 2), )
if mibBuilder.loadTexts: cSanBaseSvcClusterMembersTable.setStatus('current')
cSanBaseSvcClusterMembersEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 702, 1, 1, 2, 1), ).setIndexNames((0, "CISCO-SAN-BASE-SVC-MIB", "cSanBaseSvcClusterId"), (0, "CISCO-SAN-BASE-SVC-MIB", "cSanBaseSvcClusterMemberInetAddrType"), (0, "CISCO-SAN-BASE-SVC-MIB", "cSanBaseSvcClusterMemberInetAddr"))
if mibBuilder.loadTexts: cSanBaseSvcClusterMembersEntry.setStatus('current')
cSanBaseSvcClusterMemberInetAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 702, 1, 1, 2, 1, 1), InetAddressType())
if mibBuilder.loadTexts: cSanBaseSvcClusterMemberInetAddrType.setStatus('current')
cSanBaseSvcClusterMemberInetAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 702, 1, 1, 2, 1, 2), InetAddress().subtype(subtypeSpec=ValueSizeConstraint(0, 32)))
if mibBuilder.loadTexts: cSanBaseSvcClusterMemberInetAddr.setStatus('current')
cSanBaseSvcClusterMemberFabric = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 702, 1, 1, 2, 1, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cSanBaseSvcClusterMemberFabric.setStatus('current')
cSanBaseSvcClusterMemberIsLocal = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 702, 1, 1, 2, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSanBaseSvcClusterMemberIsLocal.setStatus('current')
cSanBaseSvcClusterMemberIsMaster = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 702, 1, 1, 2, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSanBaseSvcClusterMemberIsMaster.setStatus('current')
cSanBaseSvcClusterMemberStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 702, 1, 1, 2, 1, 6), StorageType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cSanBaseSvcClusterMemberStorageType.setStatus('current')
cSanBaseSvcClusterMemberRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 702, 1, 1, 2, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cSanBaseSvcClusterMemberRowStatus.setStatus('current')
cSanBaseSvcInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 702, 1, 1, 3), )
if mibBuilder.loadTexts: cSanBaseSvcInterfaceTable.setStatus('current')
cSanBaseSvcInterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 702, 1, 1, 3, 1), ).setIndexNames((0, "CISCO-SAN-BASE-SVC-MIB", "cSanBaseSvcInterfaceIndex"))
if mibBuilder.loadTexts: cSanBaseSvcInterfaceEntry.setStatus('current')
cSanBaseSvcInterfaceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 702, 1, 1, 3, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: cSanBaseSvcInterfaceIndex.setStatus('current')
cSanBaseSvcInterfaceState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 702, 1, 1, 3, 1, 2), CiscoSanBaseSvcInterfaceStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSanBaseSvcInterfaceState.setStatus('current')
cSanBaseSvcInterfaceClusterId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 702, 1, 1, 3, 1, 3), CiscoSanBaseSvcClusterIndex()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cSanBaseSvcInterfaceClusterId.setStatus('current')
cSanBaseSvcInterfaceStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 702, 1, 1, 3, 1, 4), StorageType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cSanBaseSvcInterfaceStorageType.setStatus('current')
cSanBaseSvcInterfaceRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 702, 1, 1, 3, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cSanBaseSvcInterfaceRowStatus.setStatus('current')
cSanBaseSvcDevicePortTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 702, 1, 1, 4), )
if mibBuilder.loadTexts: cSanBaseSvcDevicePortTable.setStatus('current')
cSanBaseSvcDevicePortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 702, 1, 1, 4, 1), ).setIndexNames((0, "CISCO-SAN-BASE-SVC-MIB", "cSanBaseSvcDevicePortName"))
if mibBuilder.loadTexts: cSanBaseSvcDevicePortEntry.setStatus('current')
cSanBaseSvcDevicePortName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 702, 1, 1, 4, 1, 1), FcNameId())
if mibBuilder.loadTexts: cSanBaseSvcDevicePortName.setStatus('current')
cSanBaseSvcDevicePortClusterId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 702, 1, 1, 4, 1, 2), CiscoSanBaseSvcClusterIndex()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cSanBaseSvcDevicePortClusterId.setStatus('current')
cSanBaseSvcDevicePortStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 702, 1, 1, 4, 1, 3), StorageType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cSanBaseSvcDevicePortStorageType.setStatus('current')
cSanBaseSvcDevicePortRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 702, 1, 1, 4, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cSanBaseSvcDevicePortRowStatus.setStatus('current')
cSanBaseSvcConfigTableLastChanged = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 702, 1, 1, 5), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSanBaseSvcConfigTableLastChanged.setStatus('current')
cSanBaseSvcDevicePortTableLastChanged = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 702, 1, 1, 6), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSanBaseSvcDevicePortTableLastChanged.setStatus('current')
cSanBaseSvcNotifyEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 702, 1, 1, 7), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cSanBaseSvcNotifyEnable.setStatus('current')
cSanBaseSvcClusterMemberIfTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 702, 1, 2, 1), )
if mibBuilder.loadTexts: cSanBaseSvcClusterMemberIfTable.setStatus('current')
cSanBaseSvcClusterMemberIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 702, 1, 2, 1, 1), ).setIndexNames((0, "CISCO-SAN-BASE-SVC-MIB", "cSanBaseSvcClusterId"), (0, "CISCO-SAN-BASE-SVC-MIB", "cSanBaseSvcClusterMemberInetAddrType"), (0, "CISCO-SAN-BASE-SVC-MIB", "cSanBaseSvcClusterMemberInetAddr"), (0, "CISCO-SAN-BASE-SVC-MIB", "cSanBaseSvcClusterInterfaceIndex"))
if mibBuilder.loadTexts: cSanBaseSvcClusterMemberIfEntry.setStatus('current')
cSanBaseSvcClusterInterfaceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 702, 1, 2, 1, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: cSanBaseSvcClusterInterfaceIndex.setStatus('current')
cSanBaseSvcClusterInterfaceState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 702, 1, 2, 1, 1, 2), CiscoSanBaseSvcInterfaceStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cSanBaseSvcClusterInterfaceState.setStatus('current')
ciscoSanBaseSvcInterfaceCreate = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 702, 0, 1)).setObjects(("IF-MIB", "ifDescr"))
if mibBuilder.loadTexts: ciscoSanBaseSvcInterfaceCreate.setStatus('current')
ciscoSanBaseSvcInterfaceDelete = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 702, 0, 2)).setObjects(("IF-MIB", "ifDescr"))
if mibBuilder.loadTexts: ciscoSanBaseSvcInterfaceDelete.setStatus('current')
ciscoSanBaseSvcClusterNewMaster = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 702, 0, 3)).setObjects(("CISCO-SAN-BASE-SVC-MIB", "cSanBaseSvcClusterName"), ("CISCO-SAN-BASE-SVC-MIB", "cSanBaseSvcClusterMasterInetAddrType"), ("CISCO-SAN-BASE-SVC-MIB", "cSanBaseSvcClusterMasterInetAddr"))
if mibBuilder.loadTexts: ciscoSanBaseSvcClusterNewMaster.setStatus('current')
ciscoSanBaseSvcMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 702, 2, 1))
ciscoSanBaseSvcMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 702, 2, 2))
ciscoSanBaseSvcMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 702, 2, 1, 1)).setObjects(("CISCO-SAN-BASE-SVC-MIB", "ciscoSanBaseSvcConfigGroup"), ("CISCO-SAN-BASE-SVC-MIB", "ciscoSanBaseSvcNotifControlGroup"), ("CISCO-SAN-BASE-SVC-MIB", "ciscoSanBaseSvcNotifsGroup"), ("CISCO-SAN-BASE-SVC-MIB", "ciscoSanBaseSvcInterfaceGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSanBaseSvcMIBCompliance = ciscoSanBaseSvcMIBCompliance.setStatus('current')
ciscoSanBaseSvcConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 702, 2, 2, 1)).setObjects(("CISCO-SAN-BASE-SVC-MIB", "cSanBaseSvcClusterState"), ("CISCO-SAN-BASE-SVC-MIB", "cSanBaseSvcClusterMasterInetAddrType"), ("CISCO-SAN-BASE-SVC-MIB", "cSanBaseSvcClusterMasterInetAddr"), ("CISCO-SAN-BASE-SVC-MIB", "cSanBaseSvcClusterMemberIsLocal"), ("CISCO-SAN-BASE-SVC-MIB", "cSanBaseSvcInterfaceState"), ("CISCO-SAN-BASE-SVC-MIB", "cSanBaseSvcInterfaceClusterId"), ("CISCO-SAN-BASE-SVC-MIB", "cSanBaseSvcDevicePortClusterId"), ("CISCO-SAN-BASE-SVC-MIB", "cSanBaseSvcConfigTableLastChanged"), ("CISCO-SAN-BASE-SVC-MIB", "cSanBaseSvcClusterMemberFabric"), ("CISCO-SAN-BASE-SVC-MIB", "cSanBaseSvcClusterName"), ("CISCO-SAN-BASE-SVC-MIB", "cSanBaseSvcInterfaceRowStatus"), ("CISCO-SAN-BASE-SVC-MIB", "cSanBaseSvcClusterRowStatus"), ("CISCO-SAN-BASE-SVC-MIB", "cSanBaseSvcClusterMemberIsMaster"), ("CISCO-SAN-BASE-SVC-MIB", "cSanBaseSvcClusterMemberRowStatus"), ("CISCO-SAN-BASE-SVC-MIB", "cSanBaseSvcClusterStorageType"), ("CISCO-SAN-BASE-SVC-MIB", "cSanBaseSvcClusterMemberStorageType"), ("CISCO-SAN-BASE-SVC-MIB", "cSanBaseSvcInterfaceStorageType"), ("CISCO-SAN-BASE-SVC-MIB", "cSanBaseSvcDevicePortStorageType"), ("CISCO-SAN-BASE-SVC-MIB", "cSanBaseSvcDevicePortRowStatus"), ("CISCO-SAN-BASE-SVC-MIB", "cSanBaseSvcClusterApplication"), ("CISCO-SAN-BASE-SVC-MIB", "cSanBaseSvcDevicePortTableLastChanged"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSanBaseSvcConfigGroup = ciscoSanBaseSvcConfigGroup.setStatus('current')
ciscoSanBaseSvcNotifControlGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 702, 2, 2, 2)).setObjects(("CISCO-SAN-BASE-SVC-MIB", "cSanBaseSvcNotifyEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSanBaseSvcNotifControlGroup = ciscoSanBaseSvcNotifControlGroup.setStatus('current')
ciscoSanBaseSvcNotifsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 702, 2, 2, 3)).setObjects(("CISCO-SAN-BASE-SVC-MIB", "ciscoSanBaseSvcInterfaceCreate"), ("CISCO-SAN-BASE-SVC-MIB", "ciscoSanBaseSvcInterfaceDelete"), ("CISCO-SAN-BASE-SVC-MIB", "ciscoSanBaseSvcClusterNewMaster"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSanBaseSvcNotifsGroup = ciscoSanBaseSvcNotifsGroup.setStatus('current')
ciscoSanBaseSvcInterfaceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 702, 2, 2, 4)).setObjects(("CISCO-SAN-BASE-SVC-MIB", "cSanBaseSvcClusterInterfaceState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSanBaseSvcInterfaceGroup = ciscoSanBaseSvcInterfaceGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-SAN-BASE-SVC-MIB", ciscoSanBaseSvcInterfaceDelete=ciscoSanBaseSvcInterfaceDelete, cSanBaseSvcClusterMemberIsMaster=cSanBaseSvcClusterMemberIsMaster, cSanBaseSvcInterfaceStorageType=cSanBaseSvcInterfaceStorageType, cSanBaseSvcClusterMembersEntry=cSanBaseSvcClusterMembersEntry, CiscoSanBaseSvcClusterStatus=CiscoSanBaseSvcClusterStatus, cSanBaseSvcClusterMasterInetAddrType=cSanBaseSvcClusterMasterInetAddrType, ciscoSanBaseSvcMIBConform=ciscoSanBaseSvcMIBConform, cSanBaseSvcInterfaceIndex=cSanBaseSvcInterfaceIndex, cSanBaseSvcInterfaceTable=cSanBaseSvcInterfaceTable, cSanBaseSvcClusterEntry=cSanBaseSvcClusterEntry, cSanBaseSvcDevicePortName=cSanBaseSvcDevicePortName, cSanBaseSvcClusterId=cSanBaseSvcClusterId, ciscoSanBaseSvcMIBNotifs=ciscoSanBaseSvcMIBNotifs, ciscoSanBaseSvcNotifControlGroup=ciscoSanBaseSvcNotifControlGroup, cSanBaseSvcClusterApplication=cSanBaseSvcClusterApplication, cSanBaseSvcConfig=cSanBaseSvcConfig, cSanBaseSvcNotifyEnable=cSanBaseSvcNotifyEnable, cSanBaseSvcClusterName=cSanBaseSvcClusterName, cSanBaseSvcClusterMemberStorageType=cSanBaseSvcClusterMemberStorageType, cSanBaseSvcDevicePortStorageType=cSanBaseSvcDevicePortStorageType, cSanBaseSvcDevicePortEntry=cSanBaseSvcDevicePortEntry, cSanBaseSvcDevicePortRowStatus=cSanBaseSvcDevicePortRowStatus, ciscoSanBaseSvcInterfaceCreate=ciscoSanBaseSvcInterfaceCreate, CiscoSanBaseSvcClusterIndex=CiscoSanBaseSvcClusterIndex, ciscoSanBaseSvcMIBGroups=ciscoSanBaseSvcMIBGroups, cSanBaseSvcClusterInterfaceState=cSanBaseSvcClusterInterfaceState, cSanBaseSvcClusterMemberFabric=cSanBaseSvcClusterMemberFabric, cSanBaseSvcDevicePortClusterId=cSanBaseSvcDevicePortClusterId, cSanBaseSvcClusterMemberRowStatus=cSanBaseSvcClusterMemberRowStatus, cSanBaseSvcClusterState=cSanBaseSvcClusterState, cSanBaseSvcClusterRowStatus=cSanBaseSvcClusterRowStatus, cSanBaseSvcClusterMemberInetAddr=cSanBaseSvcClusterMemberInetAddr, cSanBaseSvcClusterStorageType=cSanBaseSvcClusterStorageType, cSanBaseSvcInterfaceRowStatus=cSanBaseSvcInterfaceRowStatus, cSanBaseSvcConfigTableLastChanged=cSanBaseSvcConfigTableLastChanged, cSanBaseSvcInterfaceClusterId=cSanBaseSvcInterfaceClusterId, cSanBaseSvcInterfaceState=cSanBaseSvcInterfaceState, CiscoSanBaseSvcInterfaceStatus=CiscoSanBaseSvcInterfaceStatus, ciscoSanBaseSvcMIBCompliances=ciscoSanBaseSvcMIBCompliances, ciscoSanBaseSvcInterfaceGroup=ciscoSanBaseSvcInterfaceGroup, cSanBaseSvcClusterMemberIfEntry=cSanBaseSvcClusterMemberIfEntry, cSanBaseSvcClusterMemberIsLocal=cSanBaseSvcClusterMemberIsLocal, cSanBaseSvcClusterMembersTable=cSanBaseSvcClusterMembersTable, cSanBaseSvcInterfaceEntry=cSanBaseSvcInterfaceEntry, cSanBaseSvcDevicePortTableLastChanged=cSanBaseSvcDevicePortTableLastChanged, ciscoSanBaseSvcMIB=ciscoSanBaseSvcMIB, cSanBaseSvcClusterMemberIfTable=cSanBaseSvcClusterMemberIfTable, ciscoSanBaseSvcMIBCompliance=ciscoSanBaseSvcMIBCompliance, cSanBaseSvcClusterInterfaceIndex=cSanBaseSvcClusterInterfaceIndex, ciscoSanBaseSvcNotifsGroup=ciscoSanBaseSvcNotifsGroup, cSanBaseSvcClusterTable=cSanBaseSvcClusterTable, cSanBaseSvcClusterMemberInetAddrType=cSanBaseSvcClusterMemberInetAddrType, ciscoSanBaseSvcConfigGroup=ciscoSanBaseSvcConfigGroup, PYSNMP_MODULE_ID=ciscoSanBaseSvcMIB, cSanBaseSvcInterface=cSanBaseSvcInterface, cSanBaseSvcDevicePortTable=cSanBaseSvcDevicePortTable, cSanBaseSvcClusterMasterInetAddr=cSanBaseSvcClusterMasterInetAddr, ciscoSanBaseSvcMIBObjects=ciscoSanBaseSvcMIBObjects, ciscoSanBaseSvcClusterNewMaster=ciscoSanBaseSvcClusterNewMaster)
