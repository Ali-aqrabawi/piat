#
# PySNMP MIB module CISCO-CAT6K-CROSSBAR-MIB (http://snmplabs.com/pysmi)
# ASN.1 source http://mibs.snmplabs.com:80/asn1/CISCO-CAT6K-CROSSBAR-MIB
# Produced by pysmi-0.3.4 at Sun Apr 21 23:39:20 2019
# On host aaqrabaw platform Linux version 4.15.0-47-generic by user aaqrabaw
# Using Python version 3.6.5 (default, Apr  1 2018, 05:46:30) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection")
Percent, = mibBuilder.importSymbols("CISCO-QOS-PIB-MIB", "Percent")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
entPhysicalName, entPhysicalIndex, entPhysicalVendorType, entPhysicalDescr = mibBuilder.importSymbols("ENTITY-MIB", "entPhysicalName", "entPhysicalIndex", "entPhysicalVendorType", "entPhysicalDescr")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
NotificationType, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, ModuleIdentity, TimeTicks, Integer32, MibIdentifier, iso, Counter32, Gauge32, IpAddress, Counter64, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "ModuleIdentity", "TimeTicks", "Integer32", "MibIdentifier", "iso", "Counter32", "Gauge32", "IpAddress", "Counter64", "Bits")
TruthValue, DisplayString, TextualConvention, DateAndTime, TimeStamp = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "DisplayString", "TextualConvention", "DateAndTime", "TimeStamp")
ciscoCat6kCrossbarMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 217))
ciscoCat6kCrossbarMIB.setRevisions(('2013-09-16 00:00', '2012-05-31 00:00', '2009-02-15 00:00', '2007-12-18 00:00', '2006-12-19 00:00', '2004-11-19 00:00', '2004-08-11 00:00', '2004-06-11 00:00', '2003-09-29 00:00', '2003-04-02 00:00', '2002-12-05 00:00', '2001-06-25 00:00',))
if mibBuilder.loadTexts: ciscoCat6kCrossbarMIB.setLastUpdated('201309160000Z')
if mibBuilder.loadTexts: ciscoCat6kCrossbarMIB.setOrganization('Cisco Systems, Inc.')
ciscoCat6kXbarMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 217, 1))
cc6kxbarConfiguration = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 217, 1, 1))
cc6kxbarStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 217, 1, 2))
cc6kxbarStatistics = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 217, 1, 3))
cc6kxbarSwBusObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 217, 1, 4))
cc6kxbarIntBusObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 217, 1, 5))
cc6kxbarFlowCtrlObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 217, 1, 6))
cc6kxbarSystemCapacityObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 217, 1, 7))
cc6kxbarErrorRecoveryObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 217, 1, 8))
cc6kxbarTrafficMonitorObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 217, 1, 9))
cc6kxbarTrafficMonitorSwBusObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 217, 1, 9, 1))
cc6kxbarTrafficMonitorChObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 217, 1, 9, 2))
class ModuleSlotNumber(TextualConvention, Unsigned32):
    status = 'current'
    displayHint = 'd'

class FabricChannelNumber(TextualConvention, Unsigned32):
    status = 'current'
    displayHint = 'd'

class ChannelStatus(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))
    namedValues = NamedValues(("ok", 1), ("syncError", 2), ("heartbeatError", 3), ("crcError", 4), ("bufferError", 5), ("timeoutError", 6), ("unused", 7))

cc6kxbarFallbackMode = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 217, 1, 1, 1), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cc6kxbarFallbackMode.setStatus('current')
cc6kxbarBusOnlyModeAllowed = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 217, 1, 1, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cc6kxbarBusOnlyModeAllowed.setStatus('current')
cc6kxbarTruncatedModeAllowed = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 217, 1, 1, 3), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cc6kxbarTruncatedModeAllowed.setStatus('current')
cc6kxbarMinFabricPresent = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 217, 1, 1, 4), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cc6kxbarMinFabricPresent.setStatus('current')
cc6kxbarLcdBannerTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 217, 1, 1, 5), )
if mibBuilder.loadTexts: cc6kxbarLcdBannerTable.setStatus('current')
cc6kxbarLcdBannerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 217, 1, 1, 5, 1), ).setIndexNames((0, "CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarLcdBannerIndex"))
if mibBuilder.loadTexts: cc6kxbarLcdBannerEntry.setStatus('current')
cc6kxbarLcdBannerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 217, 1, 1, 5, 1, 1), Unsigned32())
if mibBuilder.loadTexts: cc6kxbarLcdBannerIndex.setStatus('current')
cc6kxbarLcdBannerBanner = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 217, 1, 1, 5, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cc6kxbarLcdBannerBanner.setStatus('current')
cc6kxbarLcdBannerMaxSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 217, 1, 1, 5, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cc6kxbarLcdBannerMaxSize.setStatus('current')
cc6kxbarTruncatedModeOper = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 217, 1, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cc6kxbarTruncatedModeOper.setStatus('current')
cc6kxbarDcefOnlyModeAllowed = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 217, 1, 1, 7), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cc6kxbarDcefOnlyModeAllowed.setStatus('current')
cc6kxbarForceBusMode = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 217, 1, 1, 8), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cc6kxbarForceBusMode.setStatus('current')
cc6kxbarBusOnlyModeOper = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 217, 1, 1, 9), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cc6kxbarBusOnlyModeOper.setStatus('current')
cc6kxbarFabricActiveSlot = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 217, 1, 2, 1), ModuleSlotNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cc6kxbarFabricActiveSlot.setStatus('current')
cc6kxbarFabricBackupSlot = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 217, 1, 2, 2), ModuleSlotNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cc6kxbarFabricBackupSlot.setStatus('current')
cc6kxbarModuleModeTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 217, 1, 2, 3), )
if mibBuilder.loadTexts: cc6kxbarModuleModeTable.setStatus('current')
cc6kxbarModuleModeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 217, 1, 2, 3, 1), ).setIndexNames((0, "CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarModuleModeModule"))
if mibBuilder.loadTexts: cc6kxbarModuleModeEntry.setStatus('current')
cc6kxbarModuleModeModule = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 217, 1, 2, 3, 1, 1), ModuleSlotNumber())
if mibBuilder.loadTexts: cc6kxbarModuleModeModule.setStatus('current')
cc6kxbarModuleModeSwitchingMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 217, 1, 2, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("busmode", 1), ("crossbarmode", 2), ("dcefmode", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cc6kxbarModuleModeSwitchingMode.setStatus('current')
cc6kxbarModuleChannelTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 217, 1, 2, 4), )
if mibBuilder.loadTexts: cc6kxbarModuleChannelTable.setStatus('current')
cc6kxbarModuleChannelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 217, 1, 2, 4, 1), ).setIndexNames((0, "CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarModuleChannelModule"), (0, "CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarModuleChannelChannel"))
if mibBuilder.loadTexts: cc6kxbarModuleChannelEntry.setStatus('current')
cc6kxbarModuleChannelModule = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 217, 1, 2, 4, 1, 1), ModuleSlotNumber())
if mibBuilder.loadTexts: cc6kxbarModuleChannelModule.setStatus('current')
cc6kxbarModuleChannelChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 217, 1, 2, 4, 1, 2), FabricChannelNumber())
if mibBuilder.loadTexts: cc6kxbarModuleChannelChannel.setStatus('current')
cc6kxbarModuleChannelModStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 217, 1, 2, 4, 1, 3), ChannelStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cc6kxbarModuleChannelModStatus.setStatus('current')
cc6kxbarModuleChannelFabStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 217, 1, 2, 4, 1, 4), ChannelStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cc6kxbarModuleChannelFabStatus.setStatus('current')
cc6kxbarModuleChannelSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 217, 1, 2, 4, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cc6kxbarModuleChannelSpeed.setStatus('current')
cc6kxbarStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 217, 1, 3, 1), )
if mibBuilder.loadTexts: cc6kxbarStatisticsTable.setStatus('current')
cc6kxbarStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 217, 1, 3, 1, 1), ).setIndexNames((0, "CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarStatisticsModule"), (0, "CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarStatisticsChannel"))
if mibBuilder.loadTexts: cc6kxbarStatisticsEntry.setStatus('current')
cc6kxbarStatisticsModule = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 217, 1, 3, 1, 1, 1), ModuleSlotNumber())
if mibBuilder.loadTexts: cc6kxbarStatisticsModule.setStatus('current')
cc6kxbarStatisticsChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 217, 1, 3, 1, 1, 2), FabricChannelNumber())
if mibBuilder.loadTexts: cc6kxbarStatisticsChannel.setStatus('current')
cc6kxbarStatisticsInErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 217, 1, 3, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cc6kxbarStatisticsInErrors.setStatus('current')
cc6kxbarStatisticsOutErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 217, 1, 3, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cc6kxbarStatisticsOutErrors.setStatus('current')
cc6kxbarStatisticsOutDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 217, 1, 3, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cc6kxbarStatisticsOutDropped.setStatus('current')
cc6kxbarStatisticsInUtil = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 217, 1, 3, 1, 1, 6), Percent()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cc6kxbarStatisticsInUtil.setStatus('current')
cc6kxbarStatisticsOutUtil = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 217, 1, 3, 1, 1, 7), Percent()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cc6kxbarStatisticsOutUtil.setStatus('current')
cc6kxbarStatisticsPeakInUtil = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 217, 1, 3, 1, 1, 8), Percent()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cc6kxbarStatisticsPeakInUtil.setStatus('current')
cc6kxbarStatisticsPeakTmInUtil = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 217, 1, 3, 1, 1, 9), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cc6kxbarStatisticsPeakTmInUtil.setStatus('current')
cc6kxbarStatisticsPeakOutUtil = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 217, 1, 3, 1, 1, 10), Percent()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cc6kxbarStatisticsPeakOutUtil.setStatus('current')
cc6kxbarStatisticsPeakTmOutUtil = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 217, 1, 3, 1, 1, 11), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cc6kxbarStatisticsPeakTmOutUtil.setStatus('current')
cc6kxbarStatisticsLbusDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 217, 1, 3, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cc6kxbarStatisticsLbusDrops.setStatus('current')
cc6kxbarErrorTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 217, 1, 3, 2), )
if mibBuilder.loadTexts: cc6kxbarErrorTable.setStatus('current')
cc6kxbarErrorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 217, 1, 3, 2, 1), ).setIndexNames((0, "CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarErrorModule"), (0, "CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarErrorChannel"))
if mibBuilder.loadTexts: cc6kxbarErrorEntry.setStatus('current')
cc6kxbarErrorModule = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 217, 1, 3, 2, 1, 1), ModuleSlotNumber())
if mibBuilder.loadTexts: cc6kxbarErrorModule.setStatus('current')
cc6kxbarErrorChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 217, 1, 3, 2, 1, 2), FabricChannelNumber())
if mibBuilder.loadTexts: cc6kxbarErrorChannel.setStatus('current')
cc6kxbarErrorModuleCrc = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 217, 1, 3, 2, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cc6kxbarErrorModuleCrc.setStatus('current')
cc6kxbarErrorModuleHbeat = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 217, 1, 3, 2, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cc6kxbarErrorModuleHbeat.setStatus('current')
cc6kxbarErrorModuleSync = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 217, 1, 3, 2, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cc6kxbarErrorModuleSync.setStatus('current')
cc6kxbarErrorModuleDDRSync = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 217, 1, 3, 2, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cc6kxbarErrorModuleDDRSync.setStatus('current')
cc6kxbarErrorChannelSync = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 217, 1, 3, 2, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cc6kxbarErrorChannelSync.setStatus('current')
cc6kxbarErrorChannelBuffer = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 217, 1, 3, 2, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cc6kxbarErrorChannelBuffer.setStatus('current')
cc6kxbarErrorChannelTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 217, 1, 3, 2, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cc6kxbarErrorChannelTimeout.setStatus('current')
cc6kxbarSwBusSwitchingStatus = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 217, 1, 4, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("normal", 1), ("stalled", 2), ("isolated", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cc6kxbarSwBusSwitchingStatus.setStatus('current')
cc6kxbarSwBusFailureDuration = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 217, 1, 4, 2), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: cc6kxbarSwBusFailureDuration.setStatus('current')
cc6kxbarSwBusNotifEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 217, 1, 4, 3), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cc6kxbarSwBusNotifEnable.setStatus('current')
cc6kxbarSwBusUtilization = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 217, 1, 4, 4), Percent()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cc6kxbarSwBusUtilization.setStatus('current')
cc6kxbarSwBusPeakUtilization = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 217, 1, 4, 5), Percent()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cc6kxbarSwBusPeakUtilization.setStatus('current')
cc6kxbarSwBusPeakTimeUtil = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 217, 1, 4, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cc6kxbarSwBusPeakTimeUtil.setStatus('current')
cc6kxbarIntBusNotifEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 217, 1, 5, 1), Bits().clone(namedValues=NamedValues(("intBusCRCErrExcd", 0), ("intBusCRCErrRcvrd", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cc6kxbarIntBusNotifEnable.setStatus('current')
cc6kxbarIntBusCRCErrTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 217, 1, 5, 2), )
if mibBuilder.loadTexts: cc6kxbarIntBusCRCErrTable.setStatus('current')
cc6kxbarIntBusCRCErrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 217, 1, 5, 2, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"))
if mibBuilder.loadTexts: cc6kxbarIntBusCRCErrEntry.setStatus('current')
cc6kxbarIntBusCRCErrExcdStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 217, 1, 5, 2, 1, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cc6kxbarIntBusCRCErrExcdStatus.setStatus('current')
cc6kxbarIntBusCRCErrExcdCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 217, 1, 5, 2, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cc6kxbarIntBusCRCErrExcdCount.setStatus('current')
cc6kxbarFlowCtrlNotifEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 217, 1, 6, 1), Bits().clone(namedValues=NamedValues(("busThreshExcd", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cc6kxbarFlowCtrlNotifEnable.setStatus('current')
cc6kxbarFlowCtrlBusFIFOThrMode = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 217, 1, 6, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("off", 1), ("on", 2), ("auto", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cc6kxbarFlowCtrlBusFIFOThrMode.setStatus('current')
cc6kxbarFlowCtrlBusFIFOThrValue = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 217, 1, 6, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("original", 1), ("lower", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cc6kxbarFlowCtrlBusFIFOThrValue.setStatus('current')
cc6kxbarFlowCtrlBusFIFOTransTime = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 217, 1, 6, 4), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cc6kxbarFlowCtrlBusFIFOTransTime.setStatus('current')
cc6kxbarSysCapPfcOperMode = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 217, 1, 7, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("unknown", 1), ("pfc3a", 2), ("pfc3b", 3), ("pfc3bxl", 4), ("pfc3cst1", 5), ("pfc3cxlst1", 6), ("pfc3c", 7), ("pfc3cxl", 8), ("pfc4", 9), ("pfc4xl", 10), ("pfc4xxl", 11), ("pfc4lite", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cc6kxbarSysCapPfcOperMode.setStatus('current')
cc6kxbarSysCapSwitchResTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 217, 1, 7, 2), )
if mibBuilder.loadTexts: cc6kxbarSysCapSwitchResTable.setStatus('current')
cc6kxbarSysCapSwitchResEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 217, 1, 7, 2, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"))
if mibBuilder.loadTexts: cc6kxbarSysCapSwitchResEntry.setStatus('current')
cc6kxbarSysCapSwitchResSeries = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 217, 1, 7, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("unknown", 1), ("supervisor", 2), ("classic", 3), ("fabric", 4), ("dcef720", 5), ("cef720", 6), ("dcef256", 7), ("cef256", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cc6kxbarSysCapSwitchResSeries.setStatus('current')
cc6kxbarSysCapSwitchResCefMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 217, 1, 7, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notApplicable", 1), ("dcef", 2), ("cef", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cc6kxbarSysCapSwitchResCefMode.setStatus('current')
cc6kxbarErrRcvryThreshLink = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 217, 1, 8, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cc6kxbarErrRcvryThreshLink.setStatus('current')
cc6kxbarErrRcvryThreshPersLink = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 217, 1, 8, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cc6kxbarErrRcvryThreshPersLink.setStatus('current')
cc6kxbarErrRcvrySwitchoverEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 217, 1, 8, 3), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cc6kxbarErrRcvrySwitchoverEnable.setStatus('current')
cc6kxbarErrRcvryPersLinkResync = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 217, 1, 8, 4), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cc6kxbarErrRcvryPersLinkResync.setStatus('current')
cc6kxbarErrRcvryChResyncCount = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 217, 1, 8, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cc6kxbarErrRcvryChResyncCount.setStatus('current')
cc6kxbarErrRcvryChResyncInterval = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 217, 1, 8, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cc6kxbarErrRcvryChResyncInterval.setStatus('current')
cc6kxbarTMSwBusUtilEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 217, 1, 9, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cc6kxbarTMSwBusUtilEnable.setStatus('current')
cc6kxbarTMSwBusUtilInterval = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 217, 1, 9, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cc6kxbarTMSwBusUtilInterval.setStatus('current')
cc6kxbarTMSwBusUtilThreshold = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 217, 1, 9, 1, 3), Percent()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cc6kxbarTMSwBusUtilThreshold.setStatus('current')
cc6kxbarTMSwBusUtilLogCount = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 217, 1, 9, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cc6kxbarTMSwBusUtilLogCount.setStatus('current')
cc6kxbarTMSwBusUtilLastLogTime = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 217, 1, 9, 1, 5), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cc6kxbarTMSwBusUtilLastLogTime.setStatus('current')
cc6kxbarTMSwBusUtilLogInterval = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 217, 1, 9, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cc6kxbarTMSwBusUtilLogInterval.setStatus('current')
cc6kxbarTMSwBusUtilUtilization = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 217, 1, 9, 1, 7), Percent()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cc6kxbarTMSwBusUtilUtilization.setStatus('current')
cc6kxbarTMSwBusUtilNotifEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 217, 1, 9, 1, 8), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cc6kxbarTMSwBusUtilNotifEnable.setStatus('current')
cc6kxbarTMChUtilTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 217, 1, 9, 2, 1), )
if mibBuilder.loadTexts: cc6kxbarTMChUtilTable.setStatus('current')
cc6kxbarTMChUtilEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 217, 1, 9, 2, 1, 1), ).setIndexNames((0, "CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarTMChUtilModule"), (0, "CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarTMChUtilChannel"), (0, "CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarTMChUtilDirection"))
if mibBuilder.loadTexts: cc6kxbarTMChUtilEntry.setStatus('current')
cc6kxbarTMChUtilModule = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 217, 1, 9, 2, 1, 1, 1), ModuleSlotNumber())
if mibBuilder.loadTexts: cc6kxbarTMChUtilModule.setStatus('current')
cc6kxbarTMChUtilChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 217, 1, 9, 2, 1, 1, 2), FabricChannelNumber())
if mibBuilder.loadTexts: cc6kxbarTMChUtilChannel.setStatus('current')
cc6kxbarTMChUtilDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 217, 1, 9, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ingress", 1), ("egress", 2))))
if mibBuilder.loadTexts: cc6kxbarTMChUtilDirection.setStatus('current')
cc6kxbarTMChUtilEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 217, 1, 9, 2, 1, 1, 4), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cc6kxbarTMChUtilEnable.setStatus('current')
cc6kxbarTMChUtilInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 217, 1, 9, 2, 1, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cc6kxbarTMChUtilInterval.setStatus('current')
cc6kxbarTMChUtilThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 217, 1, 9, 2, 1, 1, 6), Percent()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cc6kxbarTMChUtilThreshold.setStatus('current')
cc6kxbarTMChUtilLogCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 217, 1, 9, 2, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cc6kxbarTMChUtilLogCount.setStatus('current')
cc6kxbarTMChUtilLastLogTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 217, 1, 9, 2, 1, 1, 8), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cc6kxbarTMChUtilLastLogTime.setStatus('current')
cc6kxbarTMChUtilLogInterval = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 217, 1, 9, 2, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cc6kxbarTMChUtilLogInterval.setStatus('current')
cc6kxbarTMChUtilUtilization = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 217, 1, 9, 2, 3), Percent()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: cc6kxbarTMChUtilUtilization.setStatus('current')
cc6kxbarTMChUtilNotifEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 217, 1, 9, 2, 4), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cc6kxbarTMChUtilNotifEnable.setStatus('current')
ciscoCat6kXbarMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 217, 0))
cc6kxbarSwBusStatusChangeNotif = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 217, 0, 1)).setObjects(("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarSwBusSwitchingStatus"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarSwBusFailureDuration"))
if mibBuilder.loadTexts: cc6kxbarSwBusStatusChangeNotif.setStatus('current')
cc6kxbarIntBusCRCErrExcdNotif = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 217, 0, 2)).setObjects(("ENTITY-MIB", "entPhysicalName"), ("ENTITY-MIB", "entPhysicalVendorType"))
if mibBuilder.loadTexts: cc6kxbarIntBusCRCErrExcdNotif.setStatus('current')
cc6kxbarIntBusCRCErrRcvrdNotif = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 217, 0, 3)).setObjects(("ENTITY-MIB", "entPhysicalName"), ("ENTITY-MIB", "entPhysicalVendorType"))
if mibBuilder.loadTexts: cc6kxbarIntBusCRCErrRcvrdNotif.setStatus('current')
cc6kxbarFlowCtrlBusThrExcdNotif = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 217, 0, 4)).setObjects(("ENTITY-MIB", "entPhysicalName"), ("ENTITY-MIB", "entPhysicalVendorType"))
if mibBuilder.loadTexts: cc6kxbarFlowCtrlBusThrExcdNotif.setStatus('current')
cc6kxbarTMSwBusUtilAboveNotif = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 217, 0, 5)).setObjects(("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarTMSwBusUtilUtilization"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarTMSwBusUtilThreshold"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarTMSwBusUtilInterval"), ("ENTITY-MIB", "entPhysicalDescr"))
if mibBuilder.loadTexts: cc6kxbarTMSwBusUtilAboveNotif.setStatus('current')
cc6kxbarTMSwBusUtilBelowNotif = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 217, 0, 6)).setObjects(("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarTMSwBusUtilUtilization"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarTMSwBusUtilThreshold"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarTMSwBusUtilInterval"), ("ENTITY-MIB", "entPhysicalDescr"))
if mibBuilder.loadTexts: cc6kxbarTMSwBusUtilBelowNotif.setStatus('current')
cc6kxbarTMChUtilAboveNotif = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 217, 0, 7)).setObjects(("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarTMChUtilUtilization"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarTMChUtilThreshold"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarTMChUtilInterval"), ("ENTITY-MIB", "entPhysicalDescr"))
if mibBuilder.loadTexts: cc6kxbarTMChUtilAboveNotif.setStatus('current')
cc6kxbarTMChUtilBelowNotif = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 217, 0, 8)).setObjects(("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarTMChUtilUtilization"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarTMChUtilThreshold"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarTMChUtilInterval"), ("ENTITY-MIB", "entPhysicalDescr"))
if mibBuilder.loadTexts: cc6kxbarTMChUtilBelowNotif.setStatus('current')
cc6kxbarMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 217, 3))
cc6kxbarMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 217, 3, 1))
cc6kxbarMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 217, 3, 2))
cc6kxbarMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 217, 3, 1, 2)).setObjects(("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarModuleStatusGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarChannelStatusGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarChannelStatisticsGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarFallbackGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarBusOnlyAllowedGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cc6kxbarMIBCompliance = cc6kxbarMIBCompliance.setStatus('deprecated')
cc6kxbarMIBComplianceVer1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 217, 3, 1, 3)).setObjects(("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarModuleStatusGroupVer1"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarChannelStatusGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarChannelStatisticsGroupVer1"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarFallbackGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarBusOnlyAllowedGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarLcdBannerGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarChannelUtilGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarChannelSpeedGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarSwBusGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarSwBusNotifGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cc6kxbarMIBComplianceVer1 = cc6kxbarMIBComplianceVer1.setStatus('deprecated')
cc6kxbarMIBComplianceVer2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 217, 3, 1, 4)).setObjects(("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarModuleStatusGroupVer1"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarChannelStatusGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarChannelStatisticsGroupVer1"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarFallbackGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarBusOnlyAllowedGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarLcdBannerGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarChannelUtilGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarChannelSpeedGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarSwBusGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarSwBusNotifGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarTruncatedOperGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cc6kxbarMIBComplianceVer2 = cc6kxbarMIBComplianceVer2.setStatus('deprecated')
cc6kxbarMIBComplianceVer3 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 217, 3, 1, 5)).setObjects(("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarModuleStatusGroupVer1"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarChannelStatusGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarChannelStatisticsGroupVer1"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarFallbackGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarBusOnlyAllowedGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarLcdBannerGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarChannelUtilGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarChannelSpeedGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarSwBusGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarSwBusNotifGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarTruncatedOperGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarIntBusNotifControlGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarIntBusCRCErrNotifGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cc6kxbarMIBComplianceVer3 = cc6kxbarMIBComplianceVer3.setStatus('deprecated')
cc6kxbarMIBComplianceVer4 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 217, 3, 1, 6)).setObjects(("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarModuleStatusGroupVer1"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarChannelStatusGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarChannelStatisticsGroupVer1"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarFallbackGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarBusOnlyAllowedGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarLcdBannerGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarChannelUtilGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarChannelSpeedGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarSwBusGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarSwBusNotifGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarTruncatedOperGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarIntBusNotifControlGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarIntBusCRCErrNotifGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarIntBusCRCErrGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cc6kxbarMIBComplianceVer4 = cc6kxbarMIBComplianceVer4.setStatus('deprecated')
cc6kxbarMIBComplianceVer5 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 217, 3, 1, 7)).setObjects(("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarModuleStatusGroupVer1"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarChannelStatusGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarChannelStatisticsGroupVer1"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarFallbackGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarBusOnlyAllowedGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarLcdBannerGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarChannelUtilGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarChannelSpeedGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarSwBusGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarSwBusNotifGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarTruncatedOperGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarIntBusNotifControlGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarIntBusCRCErrNotifGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarIntBusCRCErrGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarDcefOnlyModeAllowedGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarForceBusModeGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarFlowCtrlNotifCtrlGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarFlowCtrlBusThreshGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarFlowCtrlBusThrNotifGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarBusOnlyModeOperGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cc6kxbarMIBComplianceVer5 = cc6kxbarMIBComplianceVer5.setStatus('deprecated')
cc6kxbarMIBComplianceVer6 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 217, 3, 1, 8)).setObjects(("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarModuleStatusGroupVer1"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarChannelStatusGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarChannelStatisticsGroupVer1"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarFallbackGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarBusOnlyAllowedGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarLcdBannerGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarChannelUtilGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarChannelSpeedGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarSwBusGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarSwBusNotifGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarTruncatedOperGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarIntBusNotifControlGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarIntBusCRCErrNotifGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarIntBusCRCErrGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarDcefOnlyModeAllowedGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarForceBusModeGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarFlowCtrlNotifCtrlGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarFlowCtrlBusThreshGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarFlowCtrlBusThrNotifGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarBusOnlyModeOperGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarSysCapPfcOperModeGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarSysCapSwitchResGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarChannelUtilGroup1"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarSwBusGroup1"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarErrorGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarErrRcvryThresholdGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarErrRcvrySwitchoverGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cc6kxbarMIBComplianceVer6 = cc6kxbarMIBComplianceVer6.setStatus('deprecated')
cc6kxbarMIBComplianceVer7 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 217, 3, 1, 9)).setObjects(("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarModuleStatusGroupVer1"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarChannelStatusGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarChannelStatisticsGroupVer1"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarFallbackGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarBusOnlyAllowedGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarLcdBannerGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarChannelUtilGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarChannelSpeedGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarSwBusGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarSwBusNotifGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarTruncatedOperGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarIntBusNotifControlGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarIntBusCRCErrNotifGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarIntBusCRCErrGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarDcefOnlyModeAllowedGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarForceBusModeGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarFlowCtrlNotifCtrlGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarFlowCtrlBusThreshGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarFlowCtrlBusThrNotifGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarBusOnlyModeOperGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarSysCapPfcOperModeGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarSysCapSwitchResGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarChannelUtilGroup1"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarSwBusGroup1"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarErrorGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarErrRcvryThresholdGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarErrRcvrySwitchoverGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarErrRcvryPersLinkResGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarErrRcvryChResyncGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarTMSwBusUtilGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarTMSwBusUtilNotifControlGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarTMSwBusUtilNotifObjectGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarTMSwBusUtilNotifGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarTMChUtilGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarTMChUtilNotifControlGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarTMChUtilNotifObjectGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarTMChUtilNotifGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cc6kxbarMIBComplianceVer7 = cc6kxbarMIBComplianceVer7.setStatus('deprecated')
cc6kxbarMIBComplianceVer8 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 217, 3, 1, 10)).setObjects(("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarModuleStatusGroupVer1"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarChannelStatusGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarChannelStatisticsGroupVer1"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarFallbackGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarBusOnlyAllowedGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarLcdBannerGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarChannelUtilGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarChannelSpeedGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarSwBusGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarSwBusNotifGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarTruncatedOperGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarIntBusNotifControlGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarIntBusCRCErrNotifGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarIntBusCRCErrGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarDcefOnlyModeAllowedGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarForceBusModeGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarFlowCtrlNotifCtrlGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarFlowCtrlBusThreshGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarFlowCtrlBusThrNotifGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarBusOnlyModeOperGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarSysCapPfcOperModeGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarSysCapSwitchResGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarChannelUtilGroup1"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarSwBusGroup1"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarErrorGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarErrRcvryThresholdGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarErrRcvrySwitchoverGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarErrRcvryPersLinkResGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarErrRcvryChResyncGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarTMSwBusUtilGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarTMSwBusUtilNotifControlGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarTMSwBusUtilNotifObjectGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarTMSwBusUtilNotifGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarTMChUtilGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarTMChUtilNotifControlGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarTMChUtilNotifObjectGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarTMChUtilNotifGroup"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarStatisticsLbusDropGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cc6kxbarMIBComplianceVer8 = cc6kxbarMIBComplianceVer8.setStatus('current')
cc6kxbarModuleStatusGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 217, 3, 2, 1)).setObjects(("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarLcdBannerMaxSize"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarLcdBannerBanner"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarTruncatedModeAllowed"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarMinFabricPresent"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarFabricActiveSlot"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarFabricBackupSlot"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarModuleModeSwitchingMode"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cc6kxbarModuleStatusGroup = cc6kxbarModuleStatusGroup.setStatus('deprecated')
cc6kxbarChannelStatusGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 217, 3, 2, 2)).setObjects(("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarModuleChannelModStatus"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarModuleChannelFabStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cc6kxbarChannelStatusGroup = cc6kxbarChannelStatusGroup.setStatus('current')
cc6kxbarChannelStatisticsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 217, 3, 2, 3)).setObjects(("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarStatisticsInErrors"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarStatisticsOutErrors"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarStatisticsOutDropped"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarStatisticsInUtil"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarStatisticsOutUtil"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cc6kxbarChannelStatisticsGroup = cc6kxbarChannelStatisticsGroup.setStatus('deprecated')
cc6kxbarFallbackGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 217, 3, 2, 4)).setObjects(("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarFallbackMode"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cc6kxbarFallbackGroup = cc6kxbarFallbackGroup.setStatus('current')
cc6kxbarBusOnlyAllowedGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 217, 3, 2, 5)).setObjects(("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarBusOnlyModeAllowed"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cc6kxbarBusOnlyAllowedGroup = cc6kxbarBusOnlyAllowedGroup.setStatus('current')
cc6kxbarModuleStatusGroupVer1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 217, 3, 2, 6)).setObjects(("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarTruncatedModeAllowed"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarMinFabricPresent"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarFabricActiveSlot"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarFabricBackupSlot"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarModuleModeSwitchingMode"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cc6kxbarModuleStatusGroupVer1 = cc6kxbarModuleStatusGroupVer1.setStatus('current')
cc6kxbarChannelStatisticsGroupVer1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 217, 3, 2, 7)).setObjects(("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarStatisticsInErrors"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarStatisticsOutErrors"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarStatisticsOutDropped"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cc6kxbarChannelStatisticsGroupVer1 = cc6kxbarChannelStatisticsGroupVer1.setStatus('current')
cc6kxbarLcdBannerGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 217, 3, 2, 8)).setObjects(("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarLcdBannerMaxSize"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarLcdBannerBanner"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cc6kxbarLcdBannerGroup = cc6kxbarLcdBannerGroup.setStatus('current')
cc6kxbarChannelUtilGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 217, 3, 2, 9)).setObjects(("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarStatisticsInUtil"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarStatisticsOutUtil"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cc6kxbarChannelUtilGroup = cc6kxbarChannelUtilGroup.setStatus('current')
cc6kxbarChannelSpeedGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 217, 3, 2, 10)).setObjects(("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarModuleChannelSpeed"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cc6kxbarChannelSpeedGroup = cc6kxbarChannelSpeedGroup.setStatus('current')
cc6kxbarSwBusGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 217, 3, 2, 11)).setObjects(("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarSwBusSwitchingStatus"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarSwBusFailureDuration"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarSwBusNotifEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cc6kxbarSwBusGroup = cc6kxbarSwBusGroup.setStatus('current')
cc6kxbarSwBusNotifGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 217, 3, 2, 12)).setObjects(("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarSwBusStatusChangeNotif"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cc6kxbarSwBusNotifGroup = cc6kxbarSwBusNotifGroup.setStatus('current')
cc6kxbarTruncatedOperGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 217, 3, 2, 13)).setObjects(("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarTruncatedModeOper"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cc6kxbarTruncatedOperGroup = cc6kxbarTruncatedOperGroup.setStatus('current')
cc6kxbarIntBusNotifControlGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 217, 3, 2, 14)).setObjects(("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarIntBusNotifEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cc6kxbarIntBusNotifControlGroup = cc6kxbarIntBusNotifControlGroup.setStatus('current')
cc6kxbarIntBusCRCErrNotifGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 217, 3, 2, 15)).setObjects(("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarIntBusCRCErrExcdNotif"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarIntBusCRCErrRcvrdNotif"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cc6kxbarIntBusCRCErrNotifGroup = cc6kxbarIntBusCRCErrNotifGroup.setStatus('current')
cc6kxbarIntBusCRCErrGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 217, 3, 2, 16)).setObjects(("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarIntBusCRCErrExcdStatus"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarIntBusCRCErrExcdCount"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cc6kxbarIntBusCRCErrGroup = cc6kxbarIntBusCRCErrGroup.setStatus('current')
cc6kxbarDcefOnlyModeAllowedGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 217, 3, 2, 17)).setObjects(("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarDcefOnlyModeAllowed"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cc6kxbarDcefOnlyModeAllowedGroup = cc6kxbarDcefOnlyModeAllowedGroup.setStatus('current')
cc6kxbarForceBusModeGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 217, 3, 2, 18)).setObjects(("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarForceBusMode"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cc6kxbarForceBusModeGroup = cc6kxbarForceBusModeGroup.setStatus('current')
cc6kxbarFlowCtrlNotifCtrlGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 217, 3, 2, 19)).setObjects(("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarFlowCtrlNotifEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cc6kxbarFlowCtrlNotifCtrlGroup = cc6kxbarFlowCtrlNotifCtrlGroup.setStatus('current')
cc6kxbarFlowCtrlBusThreshGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 217, 3, 2, 20)).setObjects(("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarFlowCtrlBusFIFOThrMode"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarFlowCtrlBusFIFOThrValue"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarFlowCtrlBusFIFOTransTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cc6kxbarFlowCtrlBusThreshGroup = cc6kxbarFlowCtrlBusThreshGroup.setStatus('current')
cc6kxbarFlowCtrlBusThrNotifGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 217, 3, 2, 21)).setObjects(("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarFlowCtrlBusThrExcdNotif"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cc6kxbarFlowCtrlBusThrNotifGroup = cc6kxbarFlowCtrlBusThrNotifGroup.setStatus('current')
cc6kxbarBusOnlyModeOperGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 217, 3, 2, 22)).setObjects(("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarBusOnlyModeOper"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cc6kxbarBusOnlyModeOperGroup = cc6kxbarBusOnlyModeOperGroup.setStatus('current')
cc6kxbarSysCapPfcOperModeGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 217, 3, 2, 23)).setObjects(("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarSysCapPfcOperMode"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cc6kxbarSysCapPfcOperModeGroup = cc6kxbarSysCapPfcOperModeGroup.setStatus('current')
cc6kxbarSysCapSwitchResGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 217, 3, 2, 24)).setObjects(("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarSysCapSwitchResSeries"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarSysCapSwitchResCefMode"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cc6kxbarSysCapSwitchResGroup = cc6kxbarSysCapSwitchResGroup.setStatus('current')
cc6kxbarChannelUtilGroup1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 217, 3, 2, 25)).setObjects(("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarStatisticsPeakInUtil"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarStatisticsPeakTmInUtil"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarStatisticsPeakOutUtil"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarStatisticsPeakTmOutUtil"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cc6kxbarChannelUtilGroup1 = cc6kxbarChannelUtilGroup1.setStatus('current')
cc6kxbarSwBusGroup1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 217, 3, 2, 26)).setObjects(("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarSwBusUtilization"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarSwBusPeakUtilization"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarSwBusPeakTimeUtil"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cc6kxbarSwBusGroup1 = cc6kxbarSwBusGroup1.setStatus('current')
cc6kxbarErrorGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 217, 3, 2, 27)).setObjects(("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarErrorModuleCrc"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarErrorModuleHbeat"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarErrorModuleSync"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarErrorModuleDDRSync"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarErrorChannelSync"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarErrorChannelBuffer"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarErrorChannelTimeout"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cc6kxbarErrorGroup = cc6kxbarErrorGroup.setStatus('current')
cc6kxbarErrRcvryThresholdGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 217, 3, 2, 28)).setObjects(("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarErrRcvryThreshLink"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarErrRcvryThreshPersLink"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cc6kxbarErrRcvryThresholdGroup = cc6kxbarErrRcvryThresholdGroup.setStatus('current')
cc6kxbarErrRcvrySwitchoverGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 217, 3, 2, 29)).setObjects(("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarErrRcvrySwitchoverEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cc6kxbarErrRcvrySwitchoverGroup = cc6kxbarErrRcvrySwitchoverGroup.setStatus('current')
cc6kxbarErrRcvryPersLinkResGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 217, 3, 2, 30)).setObjects(("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarErrRcvryPersLinkResync"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cc6kxbarErrRcvryPersLinkResGroup = cc6kxbarErrRcvryPersLinkResGroup.setStatus('current')
cc6kxbarErrRcvryChResyncGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 217, 3, 2, 31)).setObjects(("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarErrRcvryChResyncCount"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarErrRcvryChResyncInterval"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cc6kxbarErrRcvryChResyncGroup = cc6kxbarErrRcvryChResyncGroup.setStatus('current')
cc6kxbarTMSwBusUtilGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 217, 3, 2, 32)).setObjects(("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarTMSwBusUtilEnable"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarTMSwBusUtilInterval"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarTMSwBusUtilThreshold"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarTMSwBusUtilLogCount"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarTMSwBusUtilLastLogTime"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarTMSwBusUtilLogInterval"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cc6kxbarTMSwBusUtilGroup = cc6kxbarTMSwBusUtilGroup.setStatus('current')
cc6kxbarTMSwBusUtilNotifControlGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 217, 3, 2, 33)).setObjects(("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarTMSwBusUtilNotifEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cc6kxbarTMSwBusUtilNotifControlGroup = cc6kxbarTMSwBusUtilNotifControlGroup.setStatus('current')
cc6kxbarTMSwBusUtilNotifObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 217, 3, 2, 34)).setObjects(("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarTMSwBusUtilUtilization"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cc6kxbarTMSwBusUtilNotifObjectGroup = cc6kxbarTMSwBusUtilNotifObjectGroup.setStatus('current')
cc6kxbarTMSwBusUtilNotifGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 217, 3, 2, 35)).setObjects(("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarTMSwBusUtilAboveNotif"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarTMSwBusUtilBelowNotif"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cc6kxbarTMSwBusUtilNotifGroup = cc6kxbarTMSwBusUtilNotifGroup.setStatus('current')
cc6kxbarTMChUtilGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 217, 3, 2, 36)).setObjects(("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarTMChUtilEnable"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarTMChUtilInterval"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarTMChUtilThreshold"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarTMChUtilLogCount"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarTMChUtilLastLogTime"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarTMChUtilLogInterval"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cc6kxbarTMChUtilGroup = cc6kxbarTMChUtilGroup.setStatus('current')
cc6kxbarTMChUtilNotifControlGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 217, 3, 2, 37)).setObjects(("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarTMChUtilNotifEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cc6kxbarTMChUtilNotifControlGroup = cc6kxbarTMChUtilNotifControlGroup.setStatus('current')
cc6kxbarTMChUtilNotifObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 217, 3, 2, 38)).setObjects(("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarTMChUtilUtilization"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cc6kxbarTMChUtilNotifObjectGroup = cc6kxbarTMChUtilNotifObjectGroup.setStatus('current')
cc6kxbarTMChUtilNotifGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 217, 3, 2, 39)).setObjects(("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarTMChUtilAboveNotif"), ("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarTMChUtilBelowNotif"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cc6kxbarTMChUtilNotifGroup = cc6kxbarTMChUtilNotifGroup.setStatus('current')
cc6kxbarStatisticsLbusDropGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 217, 3, 2, 40)).setObjects(("CISCO-CAT6K-CROSSBAR-MIB", "cc6kxbarStatisticsLbusDrops"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cc6kxbarStatisticsLbusDropGroup = cc6kxbarStatisticsLbusDropGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-CAT6K-CROSSBAR-MIB", cc6kxbarTMSwBusUtilLastLogTime=cc6kxbarTMSwBusUtilLastLogTime, cc6kxbarFlowCtrlObjects=cc6kxbarFlowCtrlObjects, cc6kxbarFabricActiveSlot=cc6kxbarFabricActiveSlot, cc6kxbarModuleChannelEntry=cc6kxbarModuleChannelEntry, cc6kxbarChannelStatisticsGroupVer1=cc6kxbarChannelStatisticsGroupVer1, cc6kxbarTMChUtilBelowNotif=cc6kxbarTMChUtilBelowNotif, cc6kxbarIntBusObjects=cc6kxbarIntBusObjects, cc6kxbarStatisticsLbusDrops=cc6kxbarStatisticsLbusDrops, cc6kxbarSwBusFailureDuration=cc6kxbarSwBusFailureDuration, cc6kxbarTMChUtilLogCount=cc6kxbarTMChUtilLogCount, cc6kxbarErrRcvryChResyncInterval=cc6kxbarErrRcvryChResyncInterval, cc6kxbarErrorModule=cc6kxbarErrorModule, cc6kxbarTMChUtilAboveNotif=cc6kxbarTMChUtilAboveNotif, cc6kxbarTMSwBusUtilEnable=cc6kxbarTMSwBusUtilEnable, cc6kxbarTMSwBusUtilNotifGroup=cc6kxbarTMSwBusUtilNotifGroup, cc6kxbarIntBusCRCErrEntry=cc6kxbarIntBusCRCErrEntry, cc6kxbarIntBusCRCErrExcdStatus=cc6kxbarIntBusCRCErrExcdStatus, cc6kxbarDcefOnlyModeAllowedGroup=cc6kxbarDcefOnlyModeAllowedGroup, cc6kxbarModuleModeTable=cc6kxbarModuleModeTable, cc6kxbarTMSwBusUtilGroup=cc6kxbarTMSwBusUtilGroup, cc6kxbarStatisticsOutDropped=cc6kxbarStatisticsOutDropped, cc6kxbarLcdBannerMaxSize=cc6kxbarLcdBannerMaxSize, cc6kxbarFlowCtrlBusThreshGroup=cc6kxbarFlowCtrlBusThreshGroup, cc6kxbarModuleChannelModule=cc6kxbarModuleChannelModule, cc6kxbarTMChUtilGroup=cc6kxbarTMChUtilGroup, cc6kxbarChannelUtilGroup=cc6kxbarChannelUtilGroup, cc6kxbarTrafficMonitorObjects=cc6kxbarTrafficMonitorObjects, cc6kxbarTMSwBusUtilNotifControlGroup=cc6kxbarTMSwBusUtilNotifControlGroup, cc6kxbarTMChUtilThreshold=cc6kxbarTMChUtilThreshold, cc6kxbarTMChUtilEnable=cc6kxbarTMChUtilEnable, cc6kxbarMIBComplianceVer8=cc6kxbarMIBComplianceVer8, cc6kxbarErrRcvryThreshLink=cc6kxbarErrRcvryThreshLink, cc6kxbarModuleModeSwitchingMode=cc6kxbarModuleModeSwitchingMode, cc6kxbarSysCapSwitchResTable=cc6kxbarSysCapSwitchResTable, cc6kxbarMIBComplianceVer6=cc6kxbarMIBComplianceVer6, cc6kxbarLcdBannerBanner=cc6kxbarLcdBannerBanner, cc6kxbarTMChUtilDirection=cc6kxbarTMChUtilDirection, cc6kxbarTMChUtilNotifGroup=cc6kxbarTMChUtilNotifGroup, cc6kxbarLcdBannerEntry=cc6kxbarLcdBannerEntry, cc6kxbarSwBusNotifGroup=cc6kxbarSwBusNotifGroup, cc6kxbarIntBusCRCErrGroup=cc6kxbarIntBusCRCErrGroup, cc6kxbarFlowCtrlBusThrNotifGroup=cc6kxbarFlowCtrlBusThrNotifGroup, cc6kxbarFlowCtrlBusThrExcdNotif=cc6kxbarFlowCtrlBusThrExcdNotif, cc6kxbarStatisticsPeakTmInUtil=cc6kxbarStatisticsPeakTmInUtil, cc6kxbarFabricBackupSlot=cc6kxbarFabricBackupSlot, cc6kxbarStatus=cc6kxbarStatus, cc6kxbarFallbackMode=cc6kxbarFallbackMode, cc6kxbarSwBusGroup1=cc6kxbarSwBusGroup1, cc6kxbarErrorGroup=cc6kxbarErrorGroup, cc6kxbarErrRcvryPersLinkResGroup=cc6kxbarErrRcvryPersLinkResGroup, cc6kxbarModuleChannelFabStatus=cc6kxbarModuleChannelFabStatus, cc6kxbarModuleModeEntry=cc6kxbarModuleModeEntry, cc6kxbarTMSwBusUtilLogCount=cc6kxbarTMSwBusUtilLogCount, cc6kxbarChannelUtilGroup1=cc6kxbarChannelUtilGroup1, cc6kxbarTMChUtilModule=cc6kxbarTMChUtilModule, cc6kxbarMIBGroups=cc6kxbarMIBGroups, cc6kxbarMIBComplianceVer3=cc6kxbarMIBComplianceVer3, cc6kxbarStatisticsLbusDropGroup=cc6kxbarStatisticsLbusDropGroup, cc6kxbarTruncatedOperGroup=cc6kxbarTruncatedOperGroup, cc6kxbarModuleChannelChannel=cc6kxbarModuleChannelChannel, cc6kxbarChannelStatusGroup=cc6kxbarChannelStatusGroup, cc6kxbarFlowCtrlBusFIFOThrValue=cc6kxbarFlowCtrlBusFIFOThrValue, cc6kxbarTMChUtilTable=cc6kxbarTMChUtilTable, cc6kxbarBusOnlyModeAllowed=cc6kxbarBusOnlyModeAllowed, cc6kxbarSwBusPeakUtilization=cc6kxbarSwBusPeakUtilization, cc6kxbarSysCapSwitchResGroup=cc6kxbarSysCapSwitchResGroup, cc6kxbarTruncatedModeAllowed=cc6kxbarTruncatedModeAllowed, cc6kxbarErrorChannel=cc6kxbarErrorChannel, cc6kxbarTMSwBusUtilInterval=cc6kxbarTMSwBusUtilInterval, cc6kxbarTMChUtilUtilization=cc6kxbarTMChUtilUtilization, cc6kxbarMIBComplianceVer2=cc6kxbarMIBComplianceVer2, cc6kxbarDcefOnlyModeAllowed=cc6kxbarDcefOnlyModeAllowed, cc6kxbarFlowCtrlNotifCtrlGroup=cc6kxbarFlowCtrlNotifCtrlGroup, cc6kxbarStatisticsInUtil=cc6kxbarStatisticsInUtil, cc6kxbarMIBCompliance=cc6kxbarMIBCompliance, cc6kxbarErrRcvryThresholdGroup=cc6kxbarErrRcvryThresholdGroup, cc6kxbarConfiguration=cc6kxbarConfiguration, cc6kxbarStatisticsTable=cc6kxbarStatisticsTable, cc6kxbarTMChUtilNotifObjectGroup=cc6kxbarTMChUtilNotifObjectGroup, cc6kxbarErrRcvryPersLinkResync=cc6kxbarErrRcvryPersLinkResync, cc6kxbarLcdBannerTable=cc6kxbarLcdBannerTable, cc6kxbarErrorChannelTimeout=cc6kxbarErrorChannelTimeout, cc6kxbarMIBComplianceVer7=cc6kxbarMIBComplianceVer7, cc6kxbarMinFabricPresent=cc6kxbarMinFabricPresent, cc6kxbarBusOnlyModeOper=cc6kxbarBusOnlyModeOper, cc6kxbarErrRcvrySwitchoverEnable=cc6kxbarErrRcvrySwitchoverEnable, cc6kxbarIntBusNotifControlGroup=cc6kxbarIntBusNotifControlGroup, cc6kxbarSwBusStatusChangeNotif=cc6kxbarSwBusStatusChangeNotif, cc6kxbarFlowCtrlBusFIFOTransTime=cc6kxbarFlowCtrlBusFIFOTransTime, cc6kxbarErrorModuleSync=cc6kxbarErrorModuleSync, cc6kxbarMIBComplianceVer4=cc6kxbarMIBComplianceVer4, cc6kxbarTruncatedModeOper=cc6kxbarTruncatedModeOper, cc6kxbarTMSwBusUtilNotifEnable=cc6kxbarTMSwBusUtilNotifEnable, cc6kxbarErrRcvrySwitchoverGroup=cc6kxbarErrRcvrySwitchoverGroup, cc6kxbarSwBusGroup=cc6kxbarSwBusGroup, cc6kxbarTMChUtilNotifEnable=cc6kxbarTMChUtilNotifEnable, cc6kxbarSysCapSwitchResEntry=cc6kxbarSysCapSwitchResEntry, cc6kxbarMIBComplianceVer5=cc6kxbarMIBComplianceVer5, cc6kxbarStatisticsPeakInUtil=cc6kxbarStatisticsPeakInUtil, cc6kxbarErrorModuleHbeat=cc6kxbarErrorModuleHbeat, cc6kxbarErrRcvryChResyncCount=cc6kxbarErrRcvryChResyncCount, cc6kxbarModuleStatusGroupVer1=cc6kxbarModuleStatusGroupVer1, cc6kxbarChannelSpeedGroup=cc6kxbarChannelSpeedGroup, cc6kxbarErrorTable=cc6kxbarErrorTable, cc6kxbarTMSwBusUtilUtilization=cc6kxbarTMSwBusUtilUtilization, cc6kxbarIntBusNotifEnable=cc6kxbarIntBusNotifEnable, cc6kxbarTrafficMonitorChObjects=cc6kxbarTrafficMonitorChObjects, cc6kxbarErrorChannelBuffer=cc6kxbarErrorChannelBuffer, ciscoCat6kXbarMIBNotifs=ciscoCat6kXbarMIBNotifs, cc6kxbarModuleModeModule=cc6kxbarModuleModeModule, cc6kxbarErrRcvryThreshPersLink=cc6kxbarErrRcvryThreshPersLink, cc6kxbarStatisticsOutErrors=cc6kxbarStatisticsOutErrors, cc6kxbarStatistics=cc6kxbarStatistics, cc6kxbarModuleStatusGroup=cc6kxbarModuleStatusGroup, cc6kxbarStatisticsPeakOutUtil=cc6kxbarStatisticsPeakOutUtil, ciscoCat6kCrossbarMIB=ciscoCat6kCrossbarMIB, cc6kxbarFallbackGroup=cc6kxbarFallbackGroup, cc6kxbarIntBusCRCErrExcdCount=cc6kxbarIntBusCRCErrExcdCount, cc6kxbarTMSwBusUtilLogInterval=cc6kxbarTMSwBusUtilLogInterval, cc6kxbarErrorModuleCrc=cc6kxbarErrorModuleCrc, cc6kxbarErrorModuleDDRSync=cc6kxbarErrorModuleDDRSync, cc6kxbarForceBusModeGroup=cc6kxbarForceBusModeGroup, cc6kxbarTMSwBusUtilAboveNotif=cc6kxbarTMSwBusUtilAboveNotif, cc6kxbarIntBusCRCErrRcvrdNotif=cc6kxbarIntBusCRCErrRcvrdNotif, cc6kxbarStatisticsOutUtil=cc6kxbarStatisticsOutUtil, cc6kxbarSwBusObjects=cc6kxbarSwBusObjects, ModuleSlotNumber=ModuleSlotNumber, cc6kxbarSwBusSwitchingStatus=cc6kxbarSwBusSwitchingStatus, cc6kxbarTMChUtilChannel=cc6kxbarTMChUtilChannel, cc6kxbarBusOnlyAllowedGroup=cc6kxbarBusOnlyAllowedGroup, cc6kxbarSysCapPfcOperModeGroup=cc6kxbarSysCapPfcOperModeGroup, cc6kxbarMIBComplianceVer1=cc6kxbarMIBComplianceVer1, cc6kxbarBusOnlyModeOperGroup=cc6kxbarBusOnlyModeOperGroup, cc6kxbarStatisticsEntry=cc6kxbarStatisticsEntry, FabricChannelNumber=FabricChannelNumber, cc6kxbarTMChUtilLastLogTime=cc6kxbarTMChUtilLastLogTime, cc6kxbarTMChUtilLogInterval=cc6kxbarTMChUtilLogInterval, cc6kxbarSwBusUtilization=cc6kxbarSwBusUtilization, cc6kxbarSysCapSwitchResCefMode=cc6kxbarSysCapSwitchResCefMode, cc6kxbarErrorChannelSync=cc6kxbarErrorChannelSync, cc6kxbarIntBusCRCErrExcdNotif=cc6kxbarIntBusCRCErrExcdNotif, cc6kxbarChannelStatisticsGroup=cc6kxbarChannelStatisticsGroup, cc6kxbarModuleChannelModStatus=cc6kxbarModuleChannelModStatus, cc6kxbarStatisticsPeakTmOutUtil=cc6kxbarStatisticsPeakTmOutUtil, cc6kxbarModuleChannelTable=cc6kxbarModuleChannelTable, cc6kxbarTMChUtilEntry=cc6kxbarTMChUtilEntry, cc6kxbarTMChUtilInterval=cc6kxbarTMChUtilInterval, cc6kxbarErrorEntry=cc6kxbarErrorEntry, cc6kxbarStatisticsInErrors=cc6kxbarStatisticsInErrors, PYSNMP_MODULE_ID=ciscoCat6kCrossbarMIB, cc6kxbarMIBConformance=cc6kxbarMIBConformance, ChannelStatus=ChannelStatus, cc6kxbarStatisticsChannel=cc6kxbarStatisticsChannel, cc6kxbarMIBCompliances=cc6kxbarMIBCompliances, cc6kxbarFlowCtrlBusFIFOThrMode=cc6kxbarFlowCtrlBusFIFOThrMode, cc6kxbarTMSwBusUtilBelowNotif=cc6kxbarTMSwBusUtilBelowNotif, cc6kxbarTMChUtilNotifControlGroup=cc6kxbarTMChUtilNotifControlGroup, cc6kxbarErrRcvryChResyncGroup=cc6kxbarErrRcvryChResyncGroup, cc6kxbarLcdBannerGroup=cc6kxbarLcdBannerGroup, cc6kxbarForceBusMode=cc6kxbarForceBusMode, ciscoCat6kXbarMIBObjects=ciscoCat6kXbarMIBObjects, cc6kxbarIntBusCRCErrNotifGroup=cc6kxbarIntBusCRCErrNotifGroup, cc6kxbarIntBusCRCErrTable=cc6kxbarIntBusCRCErrTable, cc6kxbarErrorRecoveryObjects=cc6kxbarErrorRecoveryObjects, cc6kxbarLcdBannerIndex=cc6kxbarLcdBannerIndex, cc6kxbarTrafficMonitorSwBusObjects=cc6kxbarTrafficMonitorSwBusObjects, cc6kxbarSwBusPeakTimeUtil=cc6kxbarSwBusPeakTimeUtil, cc6kxbarModuleChannelSpeed=cc6kxbarModuleChannelSpeed, cc6kxbarTMSwBusUtilNotifObjectGroup=cc6kxbarTMSwBusUtilNotifObjectGroup, cc6kxbarSystemCapacityObjects=cc6kxbarSystemCapacityObjects, cc6kxbarFlowCtrlNotifEnable=cc6kxbarFlowCtrlNotifEnable, cc6kxbarSysCapPfcOperMode=cc6kxbarSysCapPfcOperMode, cc6kxbarSwBusNotifEnable=cc6kxbarSwBusNotifEnable, cc6kxbarStatisticsModule=cc6kxbarStatisticsModule, cc6kxbarTMSwBusUtilThreshold=cc6kxbarTMSwBusUtilThreshold, cc6kxbarSysCapSwitchResSeries=cc6kxbarSysCapSwitchResSeries)
