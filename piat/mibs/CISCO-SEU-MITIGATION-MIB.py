#
# PySNMP MIB module CISCO-SEU-MITIGATION-MIB (http://snmplabs.com/pysmi)
# ASN.1 source http://mibs.snmplabs.com:80/asn1/CISCO-SEU-MITIGATION-MIB
# Produced by pysmi-0.3.4 at Sun Apr 21 23:28:47 2019
# On host aaqrabaw platform Linux version 4.15.0-47-generic by user aaqrabaw
# Using Python version 3.6.5 (default, Apr  1 2018, 05:46:30) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
EntPhysicalIndexOrZero, = mibBuilder.importSymbols("CISCO-TC", "EntPhysicalIndexOrZero")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
ObjectIdentity, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, Counter32, IpAddress, Unsigned32, iso, NotificationType, TimeTicks, ModuleIdentity, Integer32, Counter64, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "Counter32", "IpAddress", "Unsigned32", "iso", "NotificationType", "TimeTicks", "ModuleIdentity", "Integer32", "Counter64", "Gauge32")
TextualConvention, TruthValue, DateAndTime, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "TruthValue", "DateAndTime", "DisplayString")
ciscoSeuMitigationMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 701))
ciscoSeuMitigationMIB.setRevisions(('2009-06-24 00:00',))
if mibBuilder.loadTexts: ciscoSeuMitigationMIB.setLastUpdated('200906240000Z')
if mibBuilder.loadTexts: ciscoSeuMitigationMIB.setOrganization('Cisco Systems, Inc.')
ciscoSeuMitigationMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 701, 0))
ciscoSeuMitigationMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 701, 1))
ciscoSeuMitigationMIBConform = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 701, 2))
csmScrubTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 701, 1, 1), )
if mibBuilder.loadTexts: csmScrubTable.setStatus('current')
csmScrubEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 701, 1, 1, 1), ).setIndexNames((0, "CISCO-SEU-MITIGATION-MIB", "csmScrubIndex"))
if mibBuilder.loadTexts: csmScrubEntry.setStatus('current')
csmScrubIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 701, 1, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000)))
if mibBuilder.loadTexts: csmScrubIndex.setStatus('current')
csmScrubEntPhysicalIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 701, 1, 1, 1, 2), EntPhysicalIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csmScrubEntPhysicalIndex.setStatus('current')
csmScrubScrubName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 701, 1, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csmScrubScrubName.setStatus('current')
csmScrubRateAdaptive = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 701, 1, 1, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csmScrubRateAdaptive.setStatus('current')
csmScrubAlgorithmEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 701, 1, 1, 1, 5), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: csmScrubAlgorithmEnabled.setStatus('current')
csmScrubRunInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 701, 1, 1, 1, 6), Unsigned32().clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: csmScrubRunInterval.setStatus('current')
csmScrubRunIntervalUnits = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 701, 1, 1, 1, 7), DisplayString().clone('Minutes')).setMaxAccess("readonly")
if mibBuilder.loadTexts: csmScrubRunIntervalUnits.setStatus('current')
csmScrubDeltaInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 701, 1, 1, 1, 8), Unsigned32().clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: csmScrubDeltaInterval.setStatus('current')
csmScrubDeltaIntervalUnits = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 701, 1, 1, 1, 9), DisplayString().clone('Minutes')).setMaxAccess("readonly")
if mibBuilder.loadTexts: csmScrubDeltaIntervalUnits.setStatus('current')
csmScrubRetryInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 701, 1, 1, 1, 10), Unsigned32().clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: csmScrubRetryInterval.setStatus('current')
csmScrubRetryIntervalUnits = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 701, 1, 1, 1, 11), DisplayString().clone('Minutes')).setMaxAccess("readonly")
if mibBuilder.loadTexts: csmScrubRetryIntervalUnits.setStatus('current')
csmScrubCurrentInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 701, 1, 1, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csmScrubCurrentInterval.setStatus('current')
csmScrubCurrentIntervalUnits = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 701, 1, 1, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csmScrubCurrentIntervalUnits.setStatus('current')
csmScrubThresholdInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 701, 1, 1, 1, 14), Unsigned32().clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: csmScrubThresholdInterval.setStatus('current')
csmScrubThresholdIntervalUnits = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 701, 1, 1, 1, 15), DisplayString().clone('Minutes')).setMaxAccess("readonly")
if mibBuilder.loadTexts: csmScrubThresholdIntervalUnits.setStatus('current')
csmScrubThresholdIntervalCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 701, 1, 1, 1, 16), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: csmScrubThresholdIntervalCount.setStatus('current')
csmScrubThresholdErrorValue = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 701, 1, 1, 1, 17), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: csmScrubThresholdErrorValue.setStatus('current')
csmScrubRunning = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 701, 1, 1, 1, 18), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csmScrubRunning.setStatus('current')
csmScrubStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 701, 1, 1, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("elevated", 1), ("decreased", 2), ("normal", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: csmScrubStatus.setStatus('current')
csmScrubLastRun = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 701, 1, 1, 1, 20), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csmScrubLastRun.setStatus('current')
csmScrubPassesCompleted = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 701, 1, 1, 1, 21), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csmScrubPassesCompleted.setStatus('current')
csmScrubErrorsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 701, 1, 2), )
if mibBuilder.loadTexts: csmScrubErrorsTable.setStatus('current')
csmScrubErrorsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 701, 1, 2, 1), ).setIndexNames((0, "CISCO-SEU-MITIGATION-MIB", "csmScrubErrorsIndex"))
if mibBuilder.loadTexts: csmScrubErrorsEntry.setStatus('current')
csmScrubErrorsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 701, 1, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000)))
if mibBuilder.loadTexts: csmScrubErrorsIndex.setStatus('current')
csmScrubErrorsEntPhysicalIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 701, 1, 2, 1, 2), EntPhysicalIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csmScrubErrorsEntPhysicalIndex.setStatus('current')
csmScrubErrorsDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 701, 1, 2, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csmScrubErrorsDescription.setStatus('current')
csmScrubErrorsReference = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 701, 1, 2, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csmScrubErrorsReference.setStatus('current')
csmScrubErrorsSingleBit = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 701, 1, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csmScrubErrorsSingleBit.setStatus('current')
csmScrubErrorsSingleBitInterrupts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 701, 1, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csmScrubErrorsSingleBitInterrupts.setStatus('current')
csmScrubErrorsMultibit = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 701, 1, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csmScrubErrorsMultibit.setStatus('current')
csmScrubErrorsMultibitInterrupts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 701, 1, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csmScrubErrorsMultibitInterrupts.setStatus('current')
csmSeuEventLogMaxEntries = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 701, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: csmSeuEventLogMaxEntries.setStatus('current')
csmSeuEventLogTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 701, 1, 4), )
if mibBuilder.loadTexts: csmSeuEventLogTable.setStatus('current')
csmSeuEventLogEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 701, 1, 4, 1), ).setIndexNames((0, "CISCO-SEU-MITIGATION-MIB", "csmSeuEventLogIndex"))
if mibBuilder.loadTexts: csmSeuEventLogEntry.setStatus('current')
csmSeuEventLogIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 701, 1, 4, 1, 1), Unsigned32())
if mibBuilder.loadTexts: csmSeuEventLogIndex.setStatus('current')
csmSeuEventLogDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 701, 1, 4, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(64, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: csmSeuEventLogDescription.setStatus('current')
csmSeuEventLogReference = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 701, 1, 4, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csmSeuEventLogReference.setStatus('current')
csmSeuEventLogAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 701, 1, 4, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csmSeuEventLogAddress.setStatus('current')
csmSeuEventLogTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 701, 1, 4, 1, 5), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: csmSeuEventLogTimeStamp.setStatus('current')
csmSeuScrubAlert = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 701, 0, 1)).setObjects(("CISCO-SEU-MITIGATION-MIB", "csmScrubStatus"))
if mibBuilder.loadTexts: csmSeuScrubAlert.setStatus('current')
ciscoSeuMitigationMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 701, 2, 1))
ciscoSeuMitigationMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 701, 2, 2))
ciscoSeuMitigationMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 701, 2, 1, 1)).setObjects(("CISCO-SEU-MITIGATION-MIB", "ciscoSeuMitigationMIBMainObjectGroup"), ("CISCO-SEU-MITIGATION-MIB", "ciscoSeuMitigationMIBNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSeuMitigationMIBCompliance = ciscoSeuMitigationMIBCompliance.setStatus('current')
ciscoSeuMitigationMIBMainObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 701, 2, 2, 1)).setObjects(("CISCO-SEU-MITIGATION-MIB", "csmScrubEntPhysicalIndex"), ("CISCO-SEU-MITIGATION-MIB", "csmScrubAlgorithmEnabled"), ("CISCO-SEU-MITIGATION-MIB", "csmScrubScrubName"), ("CISCO-SEU-MITIGATION-MIB", "csmScrubRateAdaptive"), ("CISCO-SEU-MITIGATION-MIB", "csmScrubRunInterval"), ("CISCO-SEU-MITIGATION-MIB", "csmScrubRunIntervalUnits"), ("CISCO-SEU-MITIGATION-MIB", "csmScrubDeltaInterval"), ("CISCO-SEU-MITIGATION-MIB", "csmScrubDeltaIntervalUnits"), ("CISCO-SEU-MITIGATION-MIB", "csmScrubRetryInterval"), ("CISCO-SEU-MITIGATION-MIB", "csmScrubRetryIntervalUnits"), ("CISCO-SEU-MITIGATION-MIB", "csmScrubThresholdInterval"), ("CISCO-SEU-MITIGATION-MIB", "csmScrubThresholdIntervalUnits"), ("CISCO-SEU-MITIGATION-MIB", "csmScrubCurrentInterval"), ("CISCO-SEU-MITIGATION-MIB", "csmScrubCurrentIntervalUnits"), ("CISCO-SEU-MITIGATION-MIB", "csmScrubThresholdIntervalCount"), ("CISCO-SEU-MITIGATION-MIB", "csmScrubThresholdErrorValue"), ("CISCO-SEU-MITIGATION-MIB", "csmScrubRunning"), ("CISCO-SEU-MITIGATION-MIB", "csmScrubStatus"), ("CISCO-SEU-MITIGATION-MIB", "csmScrubLastRun"), ("CISCO-SEU-MITIGATION-MIB", "csmScrubPassesCompleted"), ("CISCO-SEU-MITIGATION-MIB", "csmScrubErrorsEntPhysicalIndex"), ("CISCO-SEU-MITIGATION-MIB", "csmScrubErrorsDescription"), ("CISCO-SEU-MITIGATION-MIB", "csmScrubErrorsReference"), ("CISCO-SEU-MITIGATION-MIB", "csmScrubErrorsSingleBit"), ("CISCO-SEU-MITIGATION-MIB", "csmScrubErrorsSingleBitInterrupts"), ("CISCO-SEU-MITIGATION-MIB", "csmScrubErrorsMultibit"), ("CISCO-SEU-MITIGATION-MIB", "csmScrubErrorsMultibitInterrupts"), ("CISCO-SEU-MITIGATION-MIB", "csmSeuEventLogMaxEntries"), ("CISCO-SEU-MITIGATION-MIB", "csmSeuEventLogDescription"), ("CISCO-SEU-MITIGATION-MIB", "csmSeuEventLogReference"), ("CISCO-SEU-MITIGATION-MIB", "csmSeuEventLogAddress"), ("CISCO-SEU-MITIGATION-MIB", "csmSeuEventLogTimeStamp"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSeuMitigationMIBMainObjectGroup = ciscoSeuMitigationMIBMainObjectGroup.setStatus('current')
ciscoSeuMitigationMIBNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 701, 2, 2, 2)).setObjects(("CISCO-SEU-MITIGATION-MIB", "csmSeuScrubAlert"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoSeuMitigationMIBNotificationGroup = ciscoSeuMitigationMIBNotificationGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-SEU-MITIGATION-MIB", ciscoSeuMitigationMIB=ciscoSeuMitigationMIB, csmScrubErrorsDescription=csmScrubErrorsDescription, csmScrubErrorsEntry=csmScrubErrorsEntry, csmScrubErrorsMultibitInterrupts=csmScrubErrorsMultibitInterrupts, csmScrubRateAdaptive=csmScrubRateAdaptive, csmSeuEventLogTable=csmSeuEventLogTable, ciscoSeuMitigationMIBMainObjectGroup=ciscoSeuMitigationMIBMainObjectGroup, csmScrubScrubName=csmScrubScrubName, csmScrubThresholdErrorValue=csmScrubThresholdErrorValue, csmScrubCurrentIntervalUnits=csmScrubCurrentIntervalUnits, csmScrubTable=csmScrubTable, PYSNMP_MODULE_ID=ciscoSeuMitigationMIB, csmScrubErrorsMultibit=csmScrubErrorsMultibit, csmSeuEventLogDescription=csmSeuEventLogDescription, csmSeuEventLogIndex=csmSeuEventLogIndex, ciscoSeuMitigationMIBObjects=ciscoSeuMitigationMIBObjects, csmScrubRunning=csmScrubRunning, csmSeuEventLogReference=csmSeuEventLogReference, csmSeuEventLogEntry=csmSeuEventLogEntry, csmSeuEventLogMaxEntries=csmSeuEventLogMaxEntries, csmSeuEventLogAddress=csmSeuEventLogAddress, ciscoSeuMitigationMIBNotificationGroup=ciscoSeuMitigationMIBNotificationGroup, csmScrubLastRun=csmScrubLastRun, ciscoSeuMitigationMIBCompliances=ciscoSeuMitigationMIBCompliances, csmScrubDeltaInterval=csmScrubDeltaInterval, csmScrubAlgorithmEnabled=csmScrubAlgorithmEnabled, csmSeuEventLogTimeStamp=csmSeuEventLogTimeStamp, csmSeuScrubAlert=csmSeuScrubAlert, ciscoSeuMitigationMIBConform=ciscoSeuMitigationMIBConform, csmScrubEntPhysicalIndex=csmScrubEntPhysicalIndex, csmScrubDeltaIntervalUnits=csmScrubDeltaIntervalUnits, csmScrubThresholdInterval=csmScrubThresholdInterval, csmScrubIndex=csmScrubIndex, csmScrubRunInterval=csmScrubRunInterval, ciscoSeuMitigationMIBCompliance=ciscoSeuMitigationMIBCompliance, csmScrubRunIntervalUnits=csmScrubRunIntervalUnits, csmScrubRetryInterval=csmScrubRetryInterval, csmScrubThresholdIntervalUnits=csmScrubThresholdIntervalUnits, csmScrubErrorsIndex=csmScrubErrorsIndex, csmScrubRetryIntervalUnits=csmScrubRetryIntervalUnits, csmScrubThresholdIntervalCount=csmScrubThresholdIntervalCount, csmScrubErrorsReference=csmScrubErrorsReference, ciscoSeuMitigationMIBNotifs=ciscoSeuMitigationMIBNotifs, csmScrubErrorsSingleBitInterrupts=csmScrubErrorsSingleBitInterrupts, ciscoSeuMitigationMIBGroups=ciscoSeuMitigationMIBGroups, csmScrubPassesCompleted=csmScrubPassesCompleted, csmScrubErrorsTable=csmScrubErrorsTable, csmScrubEntry=csmScrubEntry, csmScrubCurrentInterval=csmScrubCurrentInterval, csmScrubStatus=csmScrubStatus, csmScrubErrorsEntPhysicalIndex=csmScrubErrorsEntPhysicalIndex, csmScrubErrorsSingleBit=csmScrubErrorsSingleBit)
