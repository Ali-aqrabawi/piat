#
# PySNMP MIB module CISCO-FABRIC-C12K-MIB (http://snmplabs.com/pysmi)
# ASN.1 source http://mibs.snmplabs.com:80/asn1/CISCO-FABRIC-C12K-MIB
# Produced by pysmi-0.3.4 at Sun Apr 21 23:40:34 2019
# On host aaqrabaw platform Linux version 4.15.0-47-generic by user aaqrabaw
# Using Python version 3.6.5 (default, Apr  1 2018, 05:46:30) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint")
ciscoMgmt, = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
EntPhysicalIndexOrZero, = mibBuilder.importSymbols("CISCO-TC", "EntPhysicalIndexOrZero")
entPhysicalIndex, entPhysicalName, PhysicalIndex = mibBuilder.importSymbols("ENTITY-MIB", "entPhysicalIndex", "entPhysicalName", "PhysicalIndex")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
Counter32, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, IpAddress, MibIdentifier, NotificationType, TimeTicks, Bits, Unsigned32, Integer32, Gauge32, ModuleIdentity, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "IpAddress", "MibIdentifier", "NotificationType", "TimeTicks", "Bits", "Unsigned32", "Integer32", "Gauge32", "ModuleIdentity", "ObjectIdentity")
TextualConvention, TruthValue, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "TruthValue", "DisplayString")
ciscoFabricC12kMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 281))
ciscoFabricC12kMIB.setRevisions(('2002-09-20 00:00',))
if mibBuilder.loadTexts: ciscoFabricC12kMIB.setLastUpdated('200209200000Z')
if mibBuilder.loadTexts: ciscoFabricC12kMIB.setOrganization('Cisco Systems, Inc.')
ciscoFabricC12kMIBNotifs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 281, 0))
ciscoFabricC12kMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 281, 1))
ciscoFabricC12kMIBConform = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 281, 2))
cfcGeneric = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 281, 1, 1))
cfcGenericGlobal = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 281, 1, 1, 1))
cfcGenericFab = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 281, 1, 1, 2))
cfcGenericSca = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 281, 1, 1, 3))
cfcGenericXbar = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 281, 1, 1, 4))
cfcPreOc192 = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 281, 1, 2))
cfcPreOc192Fab = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 281, 1, 2, 1))
cfcPreOc192Sca = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 281, 1, 2, 2))
cfcPreOc192Xbar = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 281, 1, 2, 3))
cfcOc192 = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 281, 1, 3))
cfcOc192Fab = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 281, 1, 3, 1))
cfcOc192Sca = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 281, 1, 3, 2))
cfcOc192Xbar = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 281, 1, 3, 3))
cfcNotif = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 281, 1, 4))
class CfcFabricConfigMode(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))
    namedValues = NamedValues(("invalidMode", 1), ("quarterBwNonRedundant", 2), ("quarterBwRedundant", 3), ("fullBwNonRedundant", 4), ("fullBwRedundant", 5))

class CfcFabricFiaState(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("active", 1), ("halted", 2))

class CfcScaInterrupts(TextualConvention, Bits):
    status = 'current'
    namedValues = NamedValues(("lossOfSync", 0), ("parityError", 1), ("overflow", 2))

class CfcSlotMask(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 255)

cfcGenericGlobalFabConfigMode = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 281, 1, 1, 1, 1), CfcFabricConfigMode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcGenericGlobalFabConfigMode.setStatus('current')
cfcGenericGlobalFabMasterSched = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 281, 1, 1, 1, 2), EntPhysicalIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcGenericGlobalFabMasterSched.setStatus('current')
cfcGenericFabToFabTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 281, 1, 1, 2, 1), )
if mibBuilder.loadTexts: cfcGenericFabToFabTable.setStatus('current')
cfcGenericFabToFabEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 281, 1, 1, 2, 1, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"))
if mibBuilder.loadTexts: cfcGenericFabToFabEntry.setStatus('current')
cfcGenericFabToFabState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 281, 1, 1, 2, 1, 1, 1), CfcFabricFiaState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcGenericFabToFabState.setStatus('current')
cfcGenericFabToFabGrantPEs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 281, 1, 1, 2, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcGenericFabToFabGrantPEs.setStatus('current')
cfcGenericFabToFabRequestPEs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 281, 1, 1, 2, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcGenericFabToFabRequestPEs.setStatus('current')
cfcGenericFabToFabCellFifoPEs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 281, 1, 1, 2, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcGenericFabToFabCellFifoPEs.setStatus('current')
cfcGenericFabFrFabTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 281, 1, 1, 2, 2), )
if mibBuilder.loadTexts: cfcGenericFabFrFabTable.setStatus('current')
cfcGenericFabFrFabEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 281, 1, 1, 2, 2, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"))
if mibBuilder.loadTexts: cfcGenericFabFrFabEntry.setStatus('current')
cfcGenericFabFrFabState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 281, 1, 1, 2, 2, 1, 1), CfcFabricFiaState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcGenericFabFrFabState.setStatus('current')
cfcGenericFabFrFabSliTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 281, 1, 1, 2, 3), )
if mibBuilder.loadTexts: cfcGenericFabFrFabSliTable.setStatus('current')
cfcGenericFabFrFabSliEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 281, 1, 1, 2, 3, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"), (0, "CISCO-FABRIC-C12K-MIB", "cfcGenericFabFrFabSliFabIndex"))
if mibBuilder.loadTexts: cfcGenericFabFrFabSliEntry.setStatus('current')
cfcGenericFabFrFabSliFabIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 281, 1, 1, 2, 3, 1, 1), PhysicalIndex())
if mibBuilder.loadTexts: cfcGenericFabFrFabSliFabIndex.setStatus('current')
cfcGenericFabFrFabSliLOSErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 281, 1, 1, 2, 3, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcGenericFabFrFabSliLOSErrors.setStatus('current')
cfcGenericFabFrFabSliCRCErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 281, 1, 1, 2, 3, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcGenericFabFrFabSliCRCErrors.setStatus('current')
cfcGenericFabFrFabSliLOSState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 281, 1, 1, 2, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("losOff", 1), ("losOn", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcGenericFabFrFabSliLOSState.setStatus('current')
cfcGenericScaTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 281, 1, 1, 3, 1), )
if mibBuilder.loadTexts: cfcGenericScaTable.setStatus('current')
cfcGenericScaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 281, 1, 1, 3, 1, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"))
if mibBuilder.loadTexts: cfcGenericScaEntry.setStatus('current')
cfcGenericScaIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 281, 1, 1, 3, 1, 1, 1), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcGenericScaIdentifier.setStatus('current')
cfcGenericScaIntrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 281, 1, 1, 3, 1, 1, 2), CfcScaInterrupts()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcGenericScaIntrStatus.setStatus('current')
cfcGenericScaIntrsEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 281, 1, 1, 3, 1, 1, 3), CfcScaInterrupts()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcGenericScaIntrsEnabled.setStatus('current')
cfcGenericScaConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 281, 1, 1, 3, 1, 1, 4), Bits().clone(namedValues=NamedValues(("quarterBandwidth", 0), ("halfBandwidth", 1), ("fullBandwidth", 2), ("enableParity", 3), ("priMcast", 4), ("priUnicast", 5), ("priAlternating", 6), ("earlyIntrOnLOS", 7), ("noEarlyIntrOnLOS", 8), ("forceXbarParityXer", 9), ("forceGrantParityXer", 10), ("unicastAcceptMode", 11), ("forceXbarCrcOnCtlLink0", 12), ("forceXbarCrcOnCtlLink1", 13), ("forceXbarCrcOnCtlLink2", 14), ("forceXbarCrcOnCtlLink3", 15)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcGenericScaConfig.setStatus('current')
cfcGenericScaPELog = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 281, 1, 1, 3, 1, 1, 5), CfcSlotMask()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcGenericScaPELog.setStatus('current')
cfcGenericScaFifoOverflowLog = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 281, 1, 1, 3, 1, 1, 6), CfcSlotMask()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcGenericScaFifoOverflowLog.setStatus('current')
cfcGenericScaLCsEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 281, 1, 1, 3, 1, 1, 7), CfcSlotMask()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcGenericScaLCsEnabled.setStatus('current')
cfcGenericScaForcedBackPressure = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 281, 1, 1, 3, 1, 1, 8), CfcSlotMask()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcGenericScaForcedBackPressure.setStatus('current')
cfcGenericScaOc192LCsPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 281, 1, 1, 3, 1, 1, 9), CfcSlotMask()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcGenericScaOc192LCsPresent.setStatus('current')
cfcGenericScaPreOc192LCsPresent = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 281, 1, 1, 3, 1, 1, 10), CfcSlotMask()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcGenericScaPreOc192LCsPresent.setStatus('current')
cfcGenericXbarTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 281, 1, 1, 4, 1), )
if mibBuilder.loadTexts: cfcGenericXbarTable.setStatus('current')
cfcGenericXbarEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 281, 1, 1, 4, 1, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"))
if mibBuilder.loadTexts: cfcGenericXbarEntry.setStatus('current')
cfcGenericXbarIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 281, 1, 1, 4, 1, 1, 1), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcGenericXbarIdentifier.setStatus('current')
cfcPreOc192FabToFabTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 281, 1, 2, 1, 1), )
if mibBuilder.loadTexts: cfcPreOc192FabToFabTable.setStatus('current')
cfcPreOc192FabToFabEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 281, 1, 2, 1, 1, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"))
if mibBuilder.loadTexts: cfcPreOc192FabToFabEntry.setStatus('current')
cfcPreOc192FabToFabScaLosts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 281, 1, 2, 1, 1, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcPreOc192FabToFabScaLosts.setStatus('current')
cfcPreOc192FabToFabUCFifoOvFlws = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 281, 1, 2, 1, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcPreOc192FabToFabUCFifoOvFlws.setStatus('current')
cfcPreOc192FabToFabUCFifoUnFlws = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 281, 1, 2, 1, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcPreOc192FabToFabUCFifoUnFlws.setStatus('current')
cfcPreOc192FabToFabMCFifoErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 281, 1, 2, 1, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcPreOc192FabToFabMCFifoErrs.setStatus('current')
cfcPreOc192FabToFabBmaPEs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 281, 1, 2, 1, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcPreOc192FabToFabBmaPEs.setStatus('current')
cfcPreOc192FabToFabBmaHskErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 281, 1, 2, 1, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcPreOc192FabToFabBmaHskErrs.setStatus('current')
cfcPreOc192FabToFabUniDestMCRqs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 281, 1, 2, 1, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcPreOc192FabToFabUniDestMCRqs.setStatus('current')
cfcPreOc192FabToFabMultiDstUCRqs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 281, 1, 2, 1, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcPreOc192FabToFabMultiDstUCRqs.setStatus('current')
cfcPreOc192FabToFabEmptyDestRqs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 281, 1, 2, 1, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcPreOc192FabToFabEmptyDestRqs.setStatus('current')
cfcPreOc192FabFrFabTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 281, 1, 2, 1, 2), )
if mibBuilder.loadTexts: cfcPreOc192FabFrFabTable.setStatus('current')
cfcPreOc192FabFrFabEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 281, 1, 2, 1, 2, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"))
if mibBuilder.loadTexts: cfcPreOc192FabFrFabEntry.setStatus('current')
cfcPreOc192FabFrFabCellFifoPEs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 281, 1, 2, 1, 2, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcPreOc192FabFrFabCellFifoPEs.setStatus('current')
cfcPreOc192FabFrFabRedFifoPEs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 281, 1, 2, 1, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcPreOc192FabFrFabRedFifoPEs.setStatus('current')
cfcPreOc192FabFrFabRedFifoOvflws = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 281, 1, 2, 1, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcPreOc192FabFrFabRedFifoOvflws.setStatus('current')
cfcPreOc192FabFrFabCellDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 281, 1, 2, 1, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcPreOc192FabFrFabCellDrops.setStatus('current')
cfcPreOc192ScaTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 281, 1, 2, 2, 1), )
if mibBuilder.loadTexts: cfcPreOc192ScaTable.setStatus('current')
cfcPreOc192ScaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 281, 1, 2, 2, 1, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"))
if mibBuilder.loadTexts: cfcPreOc192ScaEntry.setStatus('current')
cfcPreOc192ScaReSyncDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 281, 1, 2, 2, 1, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcPreOc192ScaReSyncDelay.setStatus('current')
cfcPreOc192ScaLOSLog = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 281, 1, 2, 2, 1, 1, 2), CfcSlotMask()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcPreOc192ScaLOSLog.setStatus('current')
cfcPreOc192XbarTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 281, 1, 2, 3, 1), )
if mibBuilder.loadTexts: cfcPreOc192XbarTable.setStatus('current')
cfcPreOc192XbarEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 281, 1, 2, 3, 1, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"))
if mibBuilder.loadTexts: cfcPreOc192XbarEntry.setStatus('current')
cfcPreOc192XbarIntrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 281, 1, 2, 3, 1, 1, 1), Bits().clone(namedValues=NamedValues(("frameLossOfSync", 0), ("parityErrorFromSca", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcPreOc192XbarIntrStatus.setStatus('current')
cfcPreOc192XbarParityChkStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 281, 1, 2, 3, 1, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcPreOc192XbarParityChkStatus.setStatus('current')
cfcOc192FabToFabTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 281, 1, 3, 1, 1), )
if mibBuilder.loadTexts: cfcOc192FabToFabTable.setStatus('current')
cfcOc192FabToFabEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 281, 1, 3, 1, 1, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"))
if mibBuilder.loadTexts: cfcOc192FabToFabEntry.setStatus('current')
cfcOc192FabToFabMccDataPEs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 281, 1, 3, 1, 1, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcOc192FabToFabMccDataPEs.setStatus('current')
cfcOc192FabToFabMccCmdPEs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 281, 1, 3, 1, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcOc192FabToFabMccCmdPEs.setStatus('current')
cfcOc192FabToFabBackPressurePEs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 281, 1, 3, 1, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcOc192FabToFabBackPressurePEs.setStatus('current')
cfcOc192FabToFabCellFifoOvFlws = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 281, 1, 3, 1, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcOc192FabToFabCellFifoOvFlws.setStatus('current')
cfcOc192FabToFabCellFifoUnFlws = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 281, 1, 3, 1, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcOc192FabToFabCellFifoUnFlws.setStatus('current')
cfcOc192FabToFabMccCmdSeqEndErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 281, 1, 3, 1, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcOc192FabToFabMccCmdSeqEndErrs.setStatus('current')
cfcOc192FabToFabMccCmdSeqStrErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 281, 1, 3, 1, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcOc192FabToFabMccCmdSeqStrErrs.setStatus('current')
cfcOc192FabFrFabTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 281, 1, 3, 1, 2), )
if mibBuilder.loadTexts: cfcOc192FabFrFabTable.setStatus('current')
cfcOc192FabFrFabEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 281, 1, 3, 1, 2, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"))
if mibBuilder.loadTexts: cfcOc192FabFrFabEntry.setStatus('current')
cfcOc192FabFrFabPktLenErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 281, 1, 3, 1, 2, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcOc192FabFrFabPktLenErrs.setStatus('current')
cfcOc192FabFrFabExtRamPEs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 281, 1, 3, 1, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcOc192FabFrFabExtRamPEs.setStatus('current')
cfcOc192FabFrFabPktLenPEs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 281, 1, 3, 1, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcOc192FabFrFabPktLenPEs.setStatus('current')
cfcOc192FabFrFabHdrSramPEs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 281, 1, 3, 1, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcOc192FabFrFabHdrSramPEs.setStatus('current')
cfcOc192FabFrFabTxCtrlPEs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 281, 1, 3, 1, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcOc192FabFrFabTxCtrlPEs.setStatus('current')
cfcOc192FabFrFabHdrFifoOvFlws = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 281, 1, 3, 1, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcOc192FabFrFabHdrFifoOvFlws.setStatus('current')
cfcOc192FabFrFabExtSramOvFlws = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 281, 1, 3, 1, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcOc192FabFrFabExtSramOvFlws.setStatus('current')
cfcOc192FabFrFabFirstLastErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 281, 1, 3, 1, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcOc192FabFrFabFirstLastErrs.setStatus('current')
cfcOc192FabFrFabSeqErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 281, 1, 3, 1, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcOc192FabFrFabSeqErrs.setStatus('current')
cfcOc192FabFrFabSliTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 281, 1, 3, 1, 3), )
if mibBuilder.loadTexts: cfcOc192FabFrFabSliTable.setStatus('current')
cfcOc192FabFrFabSliEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 281, 1, 3, 1, 3, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"), (0, "CISCO-FABRIC-C12K-MIB", "cfcOc192FabFrFabSliSwitchIndex"))
if mibBuilder.loadTexts: cfcOc192FabFrFabSliEntry.setStatus('current')
cfcOc192FabFrFabSliSwitchIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 281, 1, 3, 1, 3, 1, 1), PhysicalIndex())
if mibBuilder.loadTexts: cfcOc192FabFrFabSliSwitchIndex.setStatus('current')
cfcOc192FabFrFabSliXorErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 281, 1, 3, 1, 3, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcOc192FabFrFabSliXorErrs.setStatus('current')
cfcOc192FabFrFabSliCellDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 281, 1, 3, 1, 3, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcOc192FabFrFabSliCellDrops.setStatus('current')
cfcOc192FabFrFabStatTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 281, 1, 3, 1, 4), )
if mibBuilder.loadTexts: cfcOc192FabFrFabStatTable.setStatus('current')
cfcOc192FabFrFabStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 281, 1, 3, 1, 4, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"), (0, "CISCO-FABRIC-C12K-MIB", "cfcOc192FabFrFabStatLCIndex"))
if mibBuilder.loadTexts: cfcOc192FabFrFabStatEntry.setStatus('current')
cfcOc192FabFrFabStatLCIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 281, 1, 3, 1, 4, 1, 1), PhysicalIndex())
if mibBuilder.loadTexts: cfcOc192FabFrFabStatLCIndex.setStatus('current')
cfcOc192FabFrFabStatUCHiPktDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 281, 1, 3, 1, 4, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcOc192FabFrFabStatUCHiPktDrops.setStatus('current')
cfcOc192FabFrFabStatUCLoPktDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 281, 1, 3, 1, 4, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcOc192FabFrFabStatUCLoPktDrops.setStatus('current')
cfcOc192FabFrFabStatMCHiPktDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 281, 1, 3, 1, 4, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcOc192FabFrFabStatMCHiPktDrops.setStatus('current')
cfcOc192FabFrFabStatMCLoPktDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 281, 1, 3, 1, 4, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcOc192FabFrFabStatMCLoPktDrops.setStatus('current')
cfcOc192ScaTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 281, 1, 3, 2, 1), )
if mibBuilder.loadTexts: cfcOc192ScaTable.setStatus('current')
cfcOc192ScaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 281, 1, 3, 2, 1, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"))
if mibBuilder.loadTexts: cfcOc192ScaEntry.setStatus('current')
cfcOc192ScaRotationPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 281, 1, 3, 2, 1, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcOc192ScaRotationPeriod.setStatus('current')
cfcOc192ScaDisableGrants = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 281, 1, 3, 2, 1, 1, 2), CfcSlotMask()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcOc192ScaDisableGrants.setStatus('current')
cfcOc192XbarTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 281, 1, 3, 3, 1), )
if mibBuilder.loadTexts: cfcOc192XbarTable.setStatus('current')
cfcOc192XbarEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 281, 1, 3, 3, 1, 1), ).setIndexNames((0, "ENTITY-MIB", "entPhysicalIndex"))
if mibBuilder.loadTexts: cfcOc192XbarEntry.setStatus('current')
cfcOc192XbarCtrlLOSStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 281, 1, 3, 3, 1, 1, 1), Bits().clone(namedValues=NamedValues(("frameLosErr", 0), ("sliErrorOnControlLink0", 1), ("sliErrorOnControlLink1", 2), ("sliErrorOnControlLink2", 3), ("sliErrorOnControlLink3", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcOc192XbarCtrlLOSStatus.setStatus('current')
cfcOc192XbarCtrlCRCErr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 281, 1, 3, 3, 1, 1, 2), Bits().clone(namedValues=NamedValues(("ctlCrcErrorLink0", 0), ("ctlCrcErrorLink1", 1), ("ctlCrcErrorLink2", 2), ("ctlCrcErrorLink3", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cfcOc192XbarCtrlCRCErr.setStatus('current')
cfcNotifEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 281, 1, 4, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cfcNotifEnable.setStatus('current')
ciscoFabricC12kMIBFabMasterSchCh = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 281, 0, 1)).setObjects(("CISCO-FABRIC-C12K-MIB", "cfcGenericGlobalFabMasterSched"), ("ENTITY-MIB", "entPhysicalName"))
if mibBuilder.loadTexts: ciscoFabricC12kMIBFabMasterSchCh.setStatus('current')
ciscoFabricC12kMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 281, 2, 1))
ciscoFabricC12kMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 281, 2, 2))
ciscoFabricC12kMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 281, 2, 1, 1)).setObjects(("CISCO-FABRIC-C12K-MIB", "ciscoFabricC12kGlobalGroup"), ("CISCO-FABRIC-C12K-MIB", "ciscoFabricC12kFiaGroup"), ("CISCO-FABRIC-C12K-MIB", "ciscoFabricC12kScaGroup"), ("CISCO-FABRIC-C12K-MIB", "ciscoFabricC12kXbarGroup"), ("CISCO-FABRIC-C12K-MIB", "ciscoFabricC12kPreOc192FiaGroup"), ("CISCO-FABRIC-C12K-MIB", "ciscoFabricC12kNotifEnableGroup"), ("CISCO-FABRIC-C12K-MIB", "ciscoFabricC12kNotifGroup"), ("CISCO-FABRIC-C12K-MIB", "ciscoFabricC12kPreOc192ScaGroup"), ("CISCO-FABRIC-C12K-MIB", "ciscoFabricC12kPreOc192XbarGroup"), ("CISCO-FABRIC-C12K-MIB", "ciscoFabricC12kOc192FiaGroup"), ("CISCO-FABRIC-C12K-MIB", "ciscoFabricC12kOc192LCGroup"), ("CISCO-FABRIC-C12K-MIB", "ciscoFabricC12kOc192ScaGroup"), ("CISCO-FABRIC-C12K-MIB", "ciscoFabricC12kOc192XbarGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoFabricC12kMIBCompliance = ciscoFabricC12kMIBCompliance.setStatus('current')
ciscoFabricC12kGlobalGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 281, 2, 2, 1)).setObjects(("CISCO-FABRIC-C12K-MIB", "cfcGenericGlobalFabConfigMode"), ("CISCO-FABRIC-C12K-MIB", "cfcGenericGlobalFabMasterSched"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoFabricC12kGlobalGroup = ciscoFabricC12kGlobalGroup.setStatus('current')
ciscoFabricC12kFiaGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 281, 2, 2, 2)).setObjects(("CISCO-FABRIC-C12K-MIB", "cfcGenericFabToFabState"), ("CISCO-FABRIC-C12K-MIB", "cfcGenericFabToFabGrantPEs"), ("CISCO-FABRIC-C12K-MIB", "cfcGenericFabToFabRequestPEs"), ("CISCO-FABRIC-C12K-MIB", "cfcGenericFabToFabCellFifoPEs"), ("CISCO-FABRIC-C12K-MIB", "cfcGenericFabFrFabState"), ("CISCO-FABRIC-C12K-MIB", "cfcGenericFabFrFabSliLOSErrors"), ("CISCO-FABRIC-C12K-MIB", "cfcGenericFabFrFabSliCRCErrors"), ("CISCO-FABRIC-C12K-MIB", "cfcGenericFabFrFabSliLOSState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoFabricC12kFiaGroup = ciscoFabricC12kFiaGroup.setStatus('current')
ciscoFabricC12kScaGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 281, 2, 2, 3)).setObjects(("CISCO-FABRIC-C12K-MIB", "cfcGenericScaIdentifier"), ("CISCO-FABRIC-C12K-MIB", "cfcGenericScaIntrStatus"), ("CISCO-FABRIC-C12K-MIB", "cfcGenericScaIntrsEnabled"), ("CISCO-FABRIC-C12K-MIB", "cfcGenericScaConfig"), ("CISCO-FABRIC-C12K-MIB", "cfcGenericScaPELog"), ("CISCO-FABRIC-C12K-MIB", "cfcGenericScaFifoOverflowLog"), ("CISCO-FABRIC-C12K-MIB", "cfcGenericScaLCsEnabled"), ("CISCO-FABRIC-C12K-MIB", "cfcGenericScaForcedBackPressure"), ("CISCO-FABRIC-C12K-MIB", "cfcGenericScaPreOc192LCsPresent"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoFabricC12kScaGroup = ciscoFabricC12kScaGroup.setStatus('current')
ciscoFabricC12kXbarGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 281, 2, 2, 4)).setObjects(("CISCO-FABRIC-C12K-MIB", "cfcGenericXbarIdentifier"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoFabricC12kXbarGroup = ciscoFabricC12kXbarGroup.setStatus('current')
ciscoFabricC12kPreOc192FiaGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 281, 2, 2, 5)).setObjects(("CISCO-FABRIC-C12K-MIB", "cfcPreOc192FabToFabScaLosts"), ("CISCO-FABRIC-C12K-MIB", "cfcPreOc192FabToFabUCFifoOvFlws"), ("CISCO-FABRIC-C12K-MIB", "cfcPreOc192FabToFabUCFifoUnFlws"), ("CISCO-FABRIC-C12K-MIB", "cfcPreOc192FabToFabMCFifoErrs"), ("CISCO-FABRIC-C12K-MIB", "cfcPreOc192FabToFabBmaPEs"), ("CISCO-FABRIC-C12K-MIB", "cfcPreOc192FabToFabBmaHskErrs"), ("CISCO-FABRIC-C12K-MIB", "cfcPreOc192FabToFabUniDestMCRqs"), ("CISCO-FABRIC-C12K-MIB", "cfcPreOc192FabToFabMultiDstUCRqs"), ("CISCO-FABRIC-C12K-MIB", "cfcPreOc192FabToFabEmptyDestRqs"), ("CISCO-FABRIC-C12K-MIB", "cfcPreOc192FabFrFabCellFifoPEs"), ("CISCO-FABRIC-C12K-MIB", "cfcPreOc192FabFrFabRedFifoPEs"), ("CISCO-FABRIC-C12K-MIB", "cfcPreOc192FabFrFabRedFifoOvflws"), ("CISCO-FABRIC-C12K-MIB", "cfcPreOc192FabFrFabCellDrops"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoFabricC12kPreOc192FiaGroup = ciscoFabricC12kPreOc192FiaGroup.setStatus('current')
ciscoFabricC12kPreOc192ScaGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 281, 2, 2, 6)).setObjects(("CISCO-FABRIC-C12K-MIB", "cfcPreOc192ScaReSyncDelay"), ("CISCO-FABRIC-C12K-MIB", "cfcPreOc192ScaLOSLog"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoFabricC12kPreOc192ScaGroup = ciscoFabricC12kPreOc192ScaGroup.setStatus('current')
ciscoFabricC12kPreOc192XbarGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 281, 2, 2, 7)).setObjects(("CISCO-FABRIC-C12K-MIB", "cfcPreOc192XbarIntrStatus"), ("CISCO-FABRIC-C12K-MIB", "cfcPreOc192XbarParityChkStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoFabricC12kPreOc192XbarGroup = ciscoFabricC12kPreOc192XbarGroup.setStatus('current')
ciscoFabricC12kOc192FiaGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 281, 2, 2, 8)).setObjects(("CISCO-FABRIC-C12K-MIB", "cfcOc192FabToFabMccDataPEs"), ("CISCO-FABRIC-C12K-MIB", "cfcOc192FabToFabMccCmdPEs"), ("CISCO-FABRIC-C12K-MIB", "cfcOc192FabToFabBackPressurePEs"), ("CISCO-FABRIC-C12K-MIB", "cfcOc192FabToFabCellFifoOvFlws"), ("CISCO-FABRIC-C12K-MIB", "cfcOc192FabToFabCellFifoUnFlws"), ("CISCO-FABRIC-C12K-MIB", "cfcOc192FabToFabMccCmdSeqEndErrs"), ("CISCO-FABRIC-C12K-MIB", "cfcOc192FabToFabMccCmdSeqStrErrs"), ("CISCO-FABRIC-C12K-MIB", "cfcOc192FabFrFabPktLenErrs"), ("CISCO-FABRIC-C12K-MIB", "cfcOc192FabFrFabExtRamPEs"), ("CISCO-FABRIC-C12K-MIB", "cfcOc192FabFrFabPktLenPEs"), ("CISCO-FABRIC-C12K-MIB", "cfcOc192FabFrFabHdrSramPEs"), ("CISCO-FABRIC-C12K-MIB", "cfcOc192FabFrFabTxCtrlPEs"), ("CISCO-FABRIC-C12K-MIB", "cfcOc192FabFrFabHdrFifoOvFlws"), ("CISCO-FABRIC-C12K-MIB", "cfcOc192FabFrFabExtSramOvFlws"), ("CISCO-FABRIC-C12K-MIB", "cfcOc192FabFrFabFirstLastErrs"), ("CISCO-FABRIC-C12K-MIB", "cfcOc192FabFrFabSeqErrs"), ("CISCO-FABRIC-C12K-MIB", "cfcOc192FabFrFabSliXorErrs"), ("CISCO-FABRIC-C12K-MIB", "cfcOc192FabFrFabSliCellDrops"), ("CISCO-FABRIC-C12K-MIB", "cfcOc192FabFrFabStatUCHiPktDrops"), ("CISCO-FABRIC-C12K-MIB", "cfcOc192FabFrFabStatUCLoPktDrops"), ("CISCO-FABRIC-C12K-MIB", "cfcOc192FabFrFabStatMCHiPktDrops"), ("CISCO-FABRIC-C12K-MIB", "cfcOc192FabFrFabStatMCLoPktDrops"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoFabricC12kOc192FiaGroup = ciscoFabricC12kOc192FiaGroup.setStatus('current')
ciscoFabricC12kOc192LCGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 281, 2, 2, 9)).setObjects(("CISCO-FABRIC-C12K-MIB", "cfcGenericScaOc192LCsPresent"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoFabricC12kOc192LCGroup = ciscoFabricC12kOc192LCGroup.setStatus('current')
ciscoFabricC12kOc192ScaGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 281, 2, 2, 10)).setObjects(("CISCO-FABRIC-C12K-MIB", "cfcOc192ScaRotationPeriod"), ("CISCO-FABRIC-C12K-MIB", "cfcOc192ScaDisableGrants"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoFabricC12kOc192ScaGroup = ciscoFabricC12kOc192ScaGroup.setStatus('current')
ciscoFabricC12kOc192XbarGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 281, 2, 2, 11)).setObjects(("CISCO-FABRIC-C12K-MIB", "cfcOc192XbarCtrlLOSStatus"), ("CISCO-FABRIC-C12K-MIB", "cfcOc192XbarCtrlCRCErr"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoFabricC12kOc192XbarGroup = ciscoFabricC12kOc192XbarGroup.setStatus('current')
ciscoFabricC12kNotifEnableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 281, 2, 2, 12)).setObjects(("CISCO-FABRIC-C12K-MIB", "cfcNotifEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoFabricC12kNotifEnableGroup = ciscoFabricC12kNotifEnableGroup.setStatus('current')
ciscoFabricC12kNotifGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 281, 2, 2, 13)).setObjects(("CISCO-FABRIC-C12K-MIB", "ciscoFabricC12kMIBFabMasterSchCh"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoFabricC12kNotifGroup = ciscoFabricC12kNotifGroup.setStatus('current')
mibBuilder.exportSymbols("CISCO-FABRIC-C12K-MIB", cfcOc192FabToFabCellFifoOvFlws=cfcOc192FabToFabCellFifoOvFlws, cfcPreOc192FabToFabBmaHskErrs=cfcPreOc192FabToFabBmaHskErrs, CfcScaInterrupts=CfcScaInterrupts, cfcOc192FabToFabMccCmdSeqEndErrs=cfcOc192FabToFabMccCmdSeqEndErrs, cfcGenericScaPELog=cfcGenericScaPELog, cfcOc192FabFrFabFirstLastErrs=cfcOc192FabFrFabFirstLastErrs, ciscoFabricC12kMIBCompliance=ciscoFabricC12kMIBCompliance, cfcGenericXbarTable=cfcGenericXbarTable, cfcOc192FabFrFabEntry=cfcOc192FabFrFabEntry, CfcSlotMask=CfcSlotMask, cfcPreOc192XbarIntrStatus=cfcPreOc192XbarIntrStatus, cfcPreOc192Fab=cfcPreOc192Fab, cfcGenericFabFrFabSliLOSState=cfcGenericFabFrFabSliLOSState, cfcGenericFabFrFabState=cfcGenericFabFrFabState, cfcOc192FabFrFabExtRamPEs=cfcOc192FabFrFabExtRamPEs, cfcPreOc192FabToFabUCFifoOvFlws=cfcPreOc192FabToFabUCFifoOvFlws, cfcOc192FabFrFabStatTable=cfcOc192FabFrFabStatTable, cfcOc192FabToFabMccDataPEs=cfcOc192FabToFabMccDataPEs, cfcOc192FabFrFabStatEntry=cfcOc192FabFrFabStatEntry, cfcOc192FabFrFabPktLenPEs=cfcOc192FabFrFabPktLenPEs, cfcGenericFabFrFabSliEntry=cfcGenericFabFrFabSliEntry, cfcGenericScaIntrStatus=cfcGenericScaIntrStatus, cfcPreOc192ScaLOSLog=cfcPreOc192ScaLOSLog, cfcOc192FabFrFabStatMCLoPktDrops=cfcOc192FabFrFabStatMCLoPktDrops, ciscoFabricC12kOc192LCGroup=ciscoFabricC12kOc192LCGroup, cfcPreOc192FabFrFabCellFifoPEs=cfcPreOc192FabFrFabCellFifoPEs, ciscoFabricC12kOc192ScaGroup=ciscoFabricC12kOc192ScaGroup, cfcGenericFabFrFabTable=cfcGenericFabFrFabTable, cfcOc192Xbar=cfcOc192Xbar, cfcOc192XbarCtrlCRCErr=cfcOc192XbarCtrlCRCErr, cfcPreOc192XbarTable=cfcPreOc192XbarTable, ciscoFabricC12kNotifGroup=ciscoFabricC12kNotifGroup, cfcGenericScaLCsEnabled=cfcGenericScaLCsEnabled, cfcOc192FabFrFabSeqErrs=cfcOc192FabFrFabSeqErrs, cfcGenericFabToFabEntry=cfcGenericFabToFabEntry, cfcOc192FabToFabCellFifoUnFlws=cfcOc192FabToFabCellFifoUnFlws, cfcOc192FabFrFabStatUCLoPktDrops=cfcOc192FabFrFabStatUCLoPktDrops, cfcOc192ScaDisableGrants=cfcOc192ScaDisableGrants, cfcOc192FabFrFabSliSwitchIndex=cfcOc192FabFrFabSliSwitchIndex, cfcGenericScaForcedBackPressure=cfcGenericScaForcedBackPressure, cfcGenericXbarEntry=cfcGenericXbarEntry, cfcPreOc192FabFrFabEntry=cfcPreOc192FabFrFabEntry, PYSNMP_MODULE_ID=ciscoFabricC12kMIB, cfcGenericFabFrFabSliTable=cfcGenericFabFrFabSliTable, cfcOc192FabToFabTable=cfcOc192FabToFabTable, cfcGenericScaOc192LCsPresent=cfcGenericScaOc192LCsPresent, cfcGenericFabToFabGrantPEs=cfcGenericFabToFabGrantPEs, cfcOc192FabFrFabStatLCIndex=cfcOc192FabFrFabStatLCIndex, cfcOc192FabFrFabExtSramOvFlws=cfcOc192FabFrFabExtSramOvFlws, ciscoFabricC12kPreOc192ScaGroup=ciscoFabricC12kPreOc192ScaGroup, cfcGenericFab=cfcGenericFab, cfcOc192=cfcOc192, cfcOc192FabFrFabTable=cfcOc192FabFrFabTable, cfcPreOc192FabFrFabTable=cfcPreOc192FabFrFabTable, cfcOc192FabFrFabSliCellDrops=cfcOc192FabFrFabSliCellDrops, cfcGenericFabToFabTable=cfcGenericFabToFabTable, ciscoFabricC12kXbarGroup=ciscoFabricC12kXbarGroup, cfcGenericScaEntry=cfcGenericScaEntry, cfcGenericFabFrFabSliFabIndex=cfcGenericFabFrFabSliFabIndex, cfcGenericScaIdentifier=cfcGenericScaIdentifier, ciscoFabricC12kGlobalGroup=ciscoFabricC12kGlobalGroup, cfcGenericFabFrFabSliCRCErrors=cfcGenericFabFrFabSliCRCErrors, ciscoFabricC12kScaGroup=ciscoFabricC12kScaGroup, cfcOc192FabFrFabStatUCHiPktDrops=cfcOc192FabFrFabStatUCHiPktDrops, cfcOc192FabToFabBackPressurePEs=cfcOc192FabToFabBackPressurePEs, ciscoFabricC12kFiaGroup=ciscoFabricC12kFiaGroup, cfcGenericFabFrFabSliLOSErrors=cfcGenericFabFrFabSliLOSErrors, cfcPreOc192FabToFabUCFifoUnFlws=cfcPreOc192FabToFabUCFifoUnFlws, cfcPreOc192ScaEntry=cfcPreOc192ScaEntry, cfcPreOc192FabToFabEmptyDestRqs=cfcPreOc192FabToFabEmptyDestRqs, cfcPreOc192FabToFabBmaPEs=cfcPreOc192FabToFabBmaPEs, cfcOc192FabFrFabSliTable=cfcOc192FabFrFabSliTable, cfcGenericGlobal=cfcGenericGlobal, cfcOc192ScaEntry=cfcOc192ScaEntry, cfcGenericScaFifoOverflowLog=cfcGenericScaFifoOverflowLog, cfcOc192FabFrFabHdrFifoOvFlws=cfcOc192FabFrFabHdrFifoOvFlws, cfcGenericXbar=cfcGenericXbar, ciscoFabricC12kMIBGroups=ciscoFabricC12kMIBGroups, cfcOc192FabToFabEntry=cfcOc192FabToFabEntry, cfcPreOc192FabToFabTable=cfcPreOc192FabToFabTable, cfcGenericGlobalFabConfigMode=cfcGenericGlobalFabConfigMode, cfcOc192FabFrFabSliXorErrs=cfcOc192FabFrFabSliXorErrs, cfcNotif=cfcNotif, cfcOc192Sca=cfcOc192Sca, cfcGenericScaConfig=cfcGenericScaConfig, cfcGenericSca=cfcGenericSca, cfcOc192Fab=cfcOc192Fab, cfcOc192FabFrFabStatMCHiPktDrops=cfcOc192FabFrFabStatMCHiPktDrops, cfcNotifEnable=cfcNotifEnable, CfcFabricFiaState=CfcFabricFiaState, ciscoFabricC12kPreOc192FiaGroup=ciscoFabricC12kPreOc192FiaGroup, cfcPreOc192Xbar=cfcPreOc192Xbar, cfcPreOc192FabToFabScaLosts=cfcPreOc192FabToFabScaLosts, cfcPreOc192=cfcPreOc192, cfcGenericScaPreOc192LCsPresent=cfcGenericScaPreOc192LCsPresent, cfcPreOc192Sca=cfcPreOc192Sca, cfcOc192ScaTable=cfcOc192ScaTable, cfcPreOc192FabFrFabRedFifoPEs=cfcPreOc192FabFrFabRedFifoPEs, cfcGenericFabToFabCellFifoPEs=cfcGenericFabToFabCellFifoPEs, ciscoFabricC12kMIBCompliances=ciscoFabricC12kMIBCompliances, cfcGeneric=cfcGeneric, ciscoFabricC12kMIBConform=ciscoFabricC12kMIBConform, cfcGenericFabToFabRequestPEs=cfcGenericFabToFabRequestPEs, cfcOc192ScaRotationPeriod=cfcOc192ScaRotationPeriod, ciscoFabricC12kMIBFabMasterSchCh=ciscoFabricC12kMIBFabMasterSchCh, ciscoFabricC12kMIB=ciscoFabricC12kMIB, cfcPreOc192FabToFabEntry=cfcPreOc192FabToFabEntry, cfcGenericScaTable=cfcGenericScaTable, cfcGenericScaIntrsEnabled=cfcGenericScaIntrsEnabled, cfcOc192FabToFabMccCmdPEs=cfcOc192FabToFabMccCmdPEs, ciscoFabricC12kPreOc192XbarGroup=ciscoFabricC12kPreOc192XbarGroup, cfcOc192XbarTable=cfcOc192XbarTable, ciscoFabricC12kOc192XbarGroup=ciscoFabricC12kOc192XbarGroup, cfcOc192FabFrFabHdrSramPEs=cfcOc192FabFrFabHdrSramPEs, cfcOc192FabFrFabSliEntry=cfcOc192FabFrFabSliEntry, cfcPreOc192ScaReSyncDelay=cfcPreOc192ScaReSyncDelay, ciscoFabricC12kMIBNotifs=ciscoFabricC12kMIBNotifs, cfcPreOc192FabFrFabRedFifoOvflws=cfcPreOc192FabFrFabRedFifoOvflws, cfcOc192FabFrFabTxCtrlPEs=cfcOc192FabFrFabTxCtrlPEs, cfcOc192XbarCtrlLOSStatus=cfcOc192XbarCtrlLOSStatus, cfcPreOc192FabToFabMultiDstUCRqs=cfcPreOc192FabToFabMultiDstUCRqs, cfcPreOc192ScaTable=cfcPreOc192ScaTable, ciscoFabricC12kNotifEnableGroup=ciscoFabricC12kNotifEnableGroup, ciscoFabricC12kOc192FiaGroup=ciscoFabricC12kOc192FiaGroup, CfcFabricConfigMode=CfcFabricConfigMode, ciscoFabricC12kMIBObjects=ciscoFabricC12kMIBObjects, cfcGenericFabFrFabEntry=cfcGenericFabFrFabEntry, cfcOc192FabFrFabPktLenErrs=cfcOc192FabFrFabPktLenErrs, cfcOc192XbarEntry=cfcOc192XbarEntry, cfcOc192FabToFabMccCmdSeqStrErrs=cfcOc192FabToFabMccCmdSeqStrErrs, cfcGenericXbarIdentifier=cfcGenericXbarIdentifier, cfcPreOc192XbarEntry=cfcPreOc192XbarEntry, cfcPreOc192FabToFabUniDestMCRqs=cfcPreOc192FabToFabUniDestMCRqs, cfcPreOc192FabToFabMCFifoErrs=cfcPreOc192FabToFabMCFifoErrs, cfcGenericGlobalFabMasterSched=cfcGenericGlobalFabMasterSched, cfcGenericFabToFabState=cfcGenericFabToFabState, cfcPreOc192XbarParityChkStatus=cfcPreOc192XbarParityChkStatus, cfcPreOc192FabFrFabCellDrops=cfcPreOc192FabFrFabCellDrops)
