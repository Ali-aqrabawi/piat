#
# PySNMP MIB module APPN-DLUR-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///usr/share/snmp/mibs/ietf/APPN-DLUR-MIB
# Produced by pysmi-0.3.4 at Sun Apr 21 23:46:22 2019
# On host aaqrabaw platform Linux version 4.15.0-47-generic by user aaqrabaw
# Using Python version 3.6.5 (default, Apr  1 2018, 05:46:30) 
#
SnaControlPointName, = mibBuilder.importSymbols("APPN-MIB", "SnaControlPointName")
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint")
snanauMIB, = mibBuilder.importSymbols("SNA-NAU-MIB", "snanauMIB")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
ObjectIdentity, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, IpAddress, MibIdentifier, NotificationType, Gauge32, ModuleIdentity, Bits, TimeTicks, Unsigned32, Counter64, iso = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "IpAddress", "MibIdentifier", "NotificationType", "Gauge32", "ModuleIdentity", "Bits", "TimeTicks", "Unsigned32", "Counter64", "iso")
TextualConvention, DisplayString, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "TruthValue")
dlurMIB = ModuleIdentity((1, 3, 6, 1, 2, 1, 34, 5))
if mibBuilder.loadTexts: dlurMIB.setLastUpdated('9705101500Z')
if mibBuilder.loadTexts: dlurMIB.setOrganization('IETF SNA NAU MIB WG / AIW APPN/HPR MIBs SIG')
dlurObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 34, 5, 1))
dlurNodeInfo = MibIdentifier((1, 3, 6, 1, 2, 1, 34, 5, 1, 1))
dlurNodeCapabilities = MibIdentifier((1, 3, 6, 1, 2, 1, 34, 5, 1, 1, 1))
dlurNodeCpName = MibScalar((1, 3, 6, 1, 2, 1, 34, 5, 1, 1, 1, 1), SnaControlPointName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlurNodeCpName.setStatus('current')
dlurReleaseLevel = MibScalar((1, 3, 6, 1, 2, 1, 34, 5, 1, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlurReleaseLevel.setStatus('current')
dlurAnsSupport = MibScalar((1, 3, 6, 1, 2, 1, 34, 5, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("continueOrStop", 1), ("stopOnly", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlurAnsSupport.setStatus('current')
dlurMultiSubnetSupport = MibScalar((1, 3, 6, 1, 2, 1, 34, 5, 1, 1, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlurMultiSubnetSupport.setStatus('current')
dlurDefaultDefPrimDlusName = MibScalar((1, 3, 6, 1, 2, 1, 34, 5, 1, 1, 1, 5), SnaControlPointName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlurDefaultDefPrimDlusName.setStatus('current')
dlurNetworkNameForwardingSupport = MibScalar((1, 3, 6, 1, 2, 1, 34, 5, 1, 1, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlurNetworkNameForwardingSupport.setStatus('current')
dlurNondisDlusDlurSessDeactSup = MibScalar((1, 3, 6, 1, 2, 1, 34, 5, 1, 1, 1, 7), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlurNondisDlusDlurSessDeactSup.setStatus('current')
dlurDefaultDefBackupDlusTable = MibTable((1, 3, 6, 1, 2, 1, 34, 5, 1, 1, 2), )
if mibBuilder.loadTexts: dlurDefaultDefBackupDlusTable.setStatus('current')
dlurDefaultDefBackupDlusEntry = MibTableRow((1, 3, 6, 1, 2, 1, 34, 5, 1, 1, 2, 1), ).setIndexNames((0, "APPN-DLUR-MIB", "dlurDefaultDefBackupDlusIndex"))
if mibBuilder.loadTexts: dlurDefaultDefBackupDlusEntry.setStatus('current')
dlurDefaultDefBackupDlusIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 5, 1, 1, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: dlurDefaultDefBackupDlusIndex.setStatus('current')
dlurDefaultDefBackupDlusName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 5, 1, 1, 2, 1, 2), SnaControlPointName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlurDefaultDefBackupDlusName.setStatus('current')
dlurPuInfo = MibIdentifier((1, 3, 6, 1, 2, 1, 34, 5, 1, 2))
dlurPuTable = MibTable((1, 3, 6, 1, 2, 1, 34, 5, 1, 2, 1), )
if mibBuilder.loadTexts: dlurPuTable.setStatus('current')
dlurPuEntry = MibTableRow((1, 3, 6, 1, 2, 1, 34, 5, 1, 2, 1, 1), ).setIndexNames((0, "APPN-DLUR-MIB", "dlurPuName"))
if mibBuilder.loadTexts: dlurPuEntry.setStatus('current')
dlurPuName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 5, 1, 2, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 17)))
if mibBuilder.loadTexts: dlurPuName.setStatus('current')
dlurPuSscpSuppliedName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 5, 1, 2, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlurPuSscpSuppliedName.setStatus('current')
dlurPuStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 5, 1, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("reset", 1), ("pendReqActpuRsp", 2), ("pendActpu", 3), ("pendActpuRsp", 4), ("active", 5), ("pendLinkact", 6), ("pendDactpuRsp", 7), ("pendInop", 8), ("pendInopActpu", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlurPuStatus.setStatus('current')
dlurPuAnsSupport = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 5, 1, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("continue", 1), ("stop", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlurPuAnsSupport.setStatus('current')
dlurPuLocation = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 5, 1, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("internal", 1), ("downstream", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlurPuLocation.setStatus('current')
dlurPuLsName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 5, 1, 2, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlurPuLsName.setStatus('current')
dlurPuDlusSessnStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 5, 1, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("reset", 1), ("pendingActive", 2), ("active", 3), ("pendingInactive", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlurPuDlusSessnStatus.setStatus('current')
dlurPuActiveDlusName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 5, 1, 2, 1, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlurPuActiveDlusName.setStatus('current')
dlurPuDefPrimDlusName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 5, 1, 2, 1, 1, 9), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 17))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlurPuDefPrimDlusName.setStatus('current')
dlurPuDefBackupDlusTable = MibTable((1, 3, 6, 1, 2, 1, 34, 5, 1, 2, 2), )
if mibBuilder.loadTexts: dlurPuDefBackupDlusTable.setStatus('current')
dlurPuDefBackupDlusEntry = MibTableRow((1, 3, 6, 1, 2, 1, 34, 5, 1, 2, 2, 1), ).setIndexNames((0, "APPN-DLUR-MIB", "dlurPuDefBackupDlusPuName"), (0, "APPN-DLUR-MIB", "dlurPuDefBackupDlusIndex"))
if mibBuilder.loadTexts: dlurPuDefBackupDlusEntry.setStatus('current')
dlurPuDefBackupDlusPuName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 5, 1, 2, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 17)))
if mibBuilder.loadTexts: dlurPuDefBackupDlusPuName.setStatus('current')
dlurPuDefBackupDlusIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 5, 1, 2, 2, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: dlurPuDefBackupDlusIndex.setStatus('current')
dlurPuDefBackupDlusName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 5, 1, 2, 2, 1, 3), SnaControlPointName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlurPuDefBackupDlusName.setStatus('current')
dlurDlusInfo = MibIdentifier((1, 3, 6, 1, 2, 1, 34, 5, 1, 3))
dlurDlusTable = MibTable((1, 3, 6, 1, 2, 1, 34, 5, 1, 3, 1), )
if mibBuilder.loadTexts: dlurDlusTable.setStatus('current')
dlurDlusEntry = MibTableRow((1, 3, 6, 1, 2, 1, 34, 5, 1, 3, 1, 1), ).setIndexNames((0, "APPN-DLUR-MIB", "dlurDlusName"))
if mibBuilder.loadTexts: dlurDlusEntry.setStatus('current')
dlurDlusName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 5, 1, 3, 1, 1, 1), SnaControlPointName())
if mibBuilder.loadTexts: dlurDlusName.setStatus('current')
dlurDlusSessnStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 5, 1, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("reset", 1), ("pendingActive", 2), ("active", 3), ("pendingInactive", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dlurDlusSessnStatus.setStatus('current')
dlurConformance = MibIdentifier((1, 3, 6, 1, 2, 1, 34, 5, 2))
dlurCompliances = MibIdentifier((1, 3, 6, 1, 2, 1, 34, 5, 2, 1))
dlurGroups = MibIdentifier((1, 3, 6, 1, 2, 1, 34, 5, 2, 2))
dlurCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 34, 5, 2, 1, 1)).setObjects(("APPN-DLUR-MIB", "dlurConfGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dlurCompliance = dlurCompliance.setStatus('current')
dlurConfGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 34, 5, 2, 2, 1)).setObjects(("APPN-DLUR-MIB", "dlurNodeCpName"), ("APPN-DLUR-MIB", "dlurReleaseLevel"), ("APPN-DLUR-MIB", "dlurAnsSupport"), ("APPN-DLUR-MIB", "dlurMultiSubnetSupport"), ("APPN-DLUR-MIB", "dlurNetworkNameForwardingSupport"), ("APPN-DLUR-MIB", "dlurNondisDlusDlurSessDeactSup"), ("APPN-DLUR-MIB", "dlurDefaultDefPrimDlusName"), ("APPN-DLUR-MIB", "dlurDefaultDefBackupDlusName"), ("APPN-DLUR-MIB", "dlurPuSscpSuppliedName"), ("APPN-DLUR-MIB", "dlurPuStatus"), ("APPN-DLUR-MIB", "dlurPuAnsSupport"), ("APPN-DLUR-MIB", "dlurPuLocation"), ("APPN-DLUR-MIB", "dlurPuLsName"), ("APPN-DLUR-MIB", "dlurPuDlusSessnStatus"), ("APPN-DLUR-MIB", "dlurPuActiveDlusName"), ("APPN-DLUR-MIB", "dlurPuDefPrimDlusName"), ("APPN-DLUR-MIB", "dlurPuDefBackupDlusName"), ("APPN-DLUR-MIB", "dlurDlusSessnStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dlurConfGroup = dlurConfGroup.setStatus('current')
mibBuilder.exportSymbols("APPN-DLUR-MIB", dlurMIB=dlurMIB, dlurDefaultDefPrimDlusName=dlurDefaultDefPrimDlusName, dlurPuDefBackupDlusName=dlurPuDefBackupDlusName, PYSNMP_MODULE_ID=dlurMIB, dlurCompliances=dlurCompliances, dlurPuDefBackupDlusTable=dlurPuDefBackupDlusTable, dlurNodeCpName=dlurNodeCpName, dlurDefaultDefBackupDlusTable=dlurDefaultDefBackupDlusTable, dlurNodeInfo=dlurNodeInfo, dlurPuActiveDlusName=dlurPuActiveDlusName, dlurAnsSupport=dlurAnsSupport, dlurDlusTable=dlurDlusTable, dlurDlusName=dlurDlusName, dlurConfGroup=dlurConfGroup, dlurPuDlusSessnStatus=dlurPuDlusSessnStatus, dlurObjects=dlurObjects, dlurDefaultDefBackupDlusEntry=dlurDefaultDefBackupDlusEntry, dlurMultiSubnetSupport=dlurMultiSubnetSupport, dlurPuDefBackupDlusEntry=dlurPuDefBackupDlusEntry, dlurNetworkNameForwardingSupport=dlurNetworkNameForwardingSupport, dlurNodeCapabilities=dlurNodeCapabilities, dlurPuAnsSupport=dlurPuAnsSupport, dlurPuEntry=dlurPuEntry, dlurPuLocation=dlurPuLocation, dlurDefaultDefBackupDlusName=dlurDefaultDefBackupDlusName, dlurConformance=dlurConformance, dlurPuName=dlurPuName, dlurDlusSessnStatus=dlurDlusSessnStatus, dlurPuTable=dlurPuTable, dlurReleaseLevel=dlurReleaseLevel, dlurPuDefBackupDlusPuName=dlurPuDefBackupDlusPuName, dlurPuSscpSuppliedName=dlurPuSscpSuppliedName, dlurPuDefBackupDlusIndex=dlurPuDefBackupDlusIndex, dlurNondisDlusDlurSessDeactSup=dlurNondisDlusDlurSessDeactSup, dlurDlusInfo=dlurDlusInfo, dlurGroups=dlurGroups, dlurCompliance=dlurCompliance, dlurPuStatus=dlurPuStatus, dlurPuLsName=dlurPuLsName, dlurDefaultDefBackupDlusIndex=dlurDefaultDefBackupDlusIndex, dlurPuDefPrimDlusName=dlurPuDefPrimDlusName, dlurDlusEntry=dlurDlusEntry, dlurPuInfo=dlurPuInfo)
